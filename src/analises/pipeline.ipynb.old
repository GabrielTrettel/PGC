{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 168,
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import numpy as np\n",
    "import csv, nltk, re\n",
    "\n",
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n",
    "sns.set(rc={'figure.figsize':(8, 8)})\n",
    "\n",
    "from urllib.parse import urlparse\n",
    "\n",
    "# Divisão de dados\n",
    "from sklearn.model_selection import train_test_split, StratifiedKFold, cross_val_score, cross_validate\n",
    "from sklearn.pipeline import make_pipeline\n",
    "\n",
    "# Extração de catacterísticas\n",
    "from sklearn.feature_extraction.text import CountVectorizer\n",
    "from sklearn.feature_extraction.text import TfidfTransformer\n",
    "from sklearn.feature_extraction.text import TfidfVectorizer\n",
    "\n",
    "# Seleção de características\n",
    "from sklearn.feature_selection import SelectKBest\n",
    "from sklearn.feature_selection import chi2\n",
    "\n",
    "\n",
    "# Classificadores\n",
    "from sklearn.naive_bayes import MultinomialNB\n",
    "from sklearn.svm import SVC\n",
    "from sklearn.linear_model import LinearRegression\n",
    "\n",
    "\n",
    "# Métricas de desempenho\n",
    "from sklearn.metrics import confusion_matrix, classification_report, balanced_accuracy_score\n",
    "\n",
    "from nltk.corpus import stopwords\n",
    "import nltk\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 167,
   "metadata": {},
   "outputs": [],
   "source": [
    "twitter = pd.read_csv(\"../../../datasets/twitter_interest.csv\", quoting=csv.QUOTE_ALL)\n",
    "twitter.columns = [\"author\", \"message\"]\n",
    "enron = pd.read_csv(\"../../../datasets/enron_interest.csv\", quoting=csv.QUOTE_ALL)[[\"author\", \"message\"]]\n",
    "\n",
    "twitter['counts'] = twitter.groupby(['author'])['message'].transform('count')\n",
    "enron['counts'] = enron.groupby(['author'])['message'].transform('count')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 169,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>author</th>\n",
       "      <th>message</th>\n",
       "      <th>counts</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>Here is our forecast\\n\\n</td>\n",
       "      <td>440</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0</td>\n",
       "      <td>Traveling to have a business meeting takes the...</td>\n",
       "      <td>440</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0</td>\n",
       "      <td>test successful.  way to go!!!</td>\n",
       "      <td>440</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>0</td>\n",
       "      <td>Randy,\\n\\n Can you send me a schedule of the s...</td>\n",
       "      <td>440</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0</td>\n",
       "      <td>Let's shoot for Tuesday at 11:45.</td>\n",
       "      <td>440</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26140</th>\n",
       "      <td>77</td>\n",
       "      <td>Brad,\\n\\nGreg asked that I drop you a line to ...</td>\n",
       "      <td>204</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26141</th>\n",
       "      <td>77</td>\n",
       "      <td>Received test message.\\n\\n\\n   \\n\\tEnron North...</td>\n",
       "      <td>204</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26142</th>\n",
       "      <td>77</td>\n",
       "      <td>i will try to call and talk you thru this</td>\n",
       "      <td>204</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26143</th>\n",
       "      <td>77</td>\n",
       "      <td>Allan,\\n\\nPlease remove Greg Whalley from this...</td>\n",
       "      <td>204</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26144</th>\n",
       "      <td>77</td>\n",
       "      <td>John,\\n\\nPlease remove Greg Whalley from this ...</td>\n",
       "      <td>204</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>26145 rows × 3 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "       author                                            message  counts\n",
       "0           0                          Here is our forecast\\n\\n      440\n",
       "1           0  Traveling to have a business meeting takes the...     440\n",
       "2           0                     test successful.  way to go!!!     440\n",
       "3           0  Randy,\\n\\n Can you send me a schedule of the s...     440\n",
       "4           0                Let's shoot for Tuesday at 11:45.       440\n",
       "...       ...                                                ...     ...\n",
       "26140      77  Brad,\\n\\nGreg asked that I drop you a line to ...     204\n",
       "26141      77  Received test message.\\n\\n\\n   \\n\\tEnron North...     204\n",
       "26142      77          i will try to call and talk you thru this     204\n",
       "26143      77  Allan,\\n\\nPlease remove Greg Whalley from this...     204\n",
       "26144      77  John,\\n\\nPlease remove Greg Whalley from this ...     204\n",
       "\n",
       "[26145 rows x 3 columns]"
      ]
     },
     "execution_count": 169,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "enron"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 170,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>author</th>\n",
       "      <th>message</th>\n",
       "      <th>counts</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>@braverbeast I don't think you're an annoying ...</td>\n",
       "      <td>2140</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0</td>\n",
       "      <td>@cgpgrey And with that, the \"grey vs gray\" dis...</td>\n",
       "      <td>2140</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0</td>\n",
       "      <td>Pls turn off the lights I wanna go to bed http...</td>\n",
       "      <td>2140</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>0</td>\n",
       "      <td>@keltbh @ipkipi stylenon</td>\n",
       "      <td>2140</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0</td>\n",
       "      <td>Just a terrific mobile app you've got there, @...</td>\n",
       "      <td>2140</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>972019</th>\n",
       "      <td>709</td>\n",
       "      <td>honestly one of the best kpop albums i've ever...</td>\n",
       "      <td>556</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>972020</th>\n",
       "      <td>709</td>\n",
       "      <td>probably my most played album of 2018 oof</td>\n",
       "      <td>556</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>972021</th>\n",
       "      <td>709</td>\n",
       "      <td>only M.I.A stans can see this tweet</td>\n",
       "      <td>556</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>972022</th>\n",
       "      <td>709</td>\n",
       "      <td>but have you watched no mercy https://t.co/euw...</td>\n",
       "      <td>556</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>972023</th>\n",
       "      <td>709</td>\n",
       "      <td>UGH I'M DISGUSTED https://t.co/0D4nlRO3Fs</td>\n",
       "      <td>556</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>972024 rows × 3 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "        author                                            message  counts\n",
       "0            0  @braverbeast I don't think you're an annoying ...    2140\n",
       "1            0  @cgpgrey And with that, the \"grey vs gray\" dis...    2140\n",
       "2            0  Pls turn off the lights I wanna go to bed http...    2140\n",
       "3            0                           @keltbh @ipkipi stylenon    2140\n",
       "4            0  Just a terrific mobile app you've got there, @...    2140\n",
       "...        ...                                                ...     ...\n",
       "972019     709  honestly one of the best kpop albums i've ever...     556\n",
       "972020     709          probably my most played album of 2018 oof     556\n",
       "972021     709                only M.I.A stans can see this tweet     556\n",
       "972022     709  but have you watched no mercy https://t.co/euw...     556\n",
       "972023     709          UGH I'M DISGUSTED https://t.co/0D4nlRO3Fs     556\n",
       "\n",
       "[972024 rows x 3 columns]"
      ]
     },
     "execution_count": 170,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "twitter"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 171,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "\"+TAG+ is answering to +TAG+, this is a real '+TAG+' but this is +EML+, and this is a @probablyfaketwitterusername and this an url +URL+ nice this +HSH+!!\""
      ]
     },
     "execution_count": 171,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "SUB_TABLE = {\n",
    "    \"+TAG+\"   : r\"(?<!\\w)@[\\w+]{1,15}\\b\",\n",
    "    \"+EML+\" : r\"[a-z0-9]+[\\._]?[a-z0-9]+[@]\\w+[.]\\w{2,3}\",\n",
    "    \"+URL+\"   : r'''(?i)\\b((?:https?://|www\\d{0,3}[.]|[a-z0-9.\\-]+[.][a-z]{2,4}/)(?:[^\\s()<>]+|\\(([^\\s()<>]+|(\\([^\\s()<>]+\\)))*\\))+(?:\\(([^\\s()<>]+|(\\([^\\s()<>]+\\)))*\\)|[^\\s`!()\\[\\]{};:'\".,<>?«»“”‘’]))''',\n",
    "    \"+HSH+\"  : r\"#(\\w+)\"\n",
    "}\n",
    "\n",
    "def pre_processing(text : str):\n",
    "    text = re.sub(\"\\s+\", \" \", text)\n",
    "    \n",
    "    for sub, exp in SUB_TABLE.items():\n",
    "        text = re.sub(exp, sub, text)\n",
    "        \n",
    "    return text\n",
    "\n",
    "text = \"\"\"@RayFranco is answering to @AnPel,      this is a real '@username83' but this is \n",
    "an@email.com, and this is a @probablyfaketwitterusername and this an url \n",
    "https://stackoverflow.com/questions/11331982/how-to-remove-any-url-within-a-string-in-python/11332580\n",
    "nice this #works!!\"\"\"\n",
    "\n",
    "pre_processing(text)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 172,
   "metadata": {},
   "outputs": [],
   "source": [
    "enron.message = enron.message.apply(pre_processing)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 173,
   "metadata": {},
   "outputs": [],
   "source": [
    "twitter.message = twitter.message.apply(pre_processing)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 124,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>author</th>\n",
       "      <th>message</th>\n",
       "      <th>counts</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>+TAG+ I don't think you're an annoying fag, I ...</td>\n",
       "      <td>2140</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0</td>\n",
       "      <td>+TAG+ And with that, the \"grey vs gray\" disput...</td>\n",
       "      <td>2140</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0</td>\n",
       "      <td>Pls turn off the lights I wanna go to bed +URL+</td>\n",
       "      <td>2140</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>0</td>\n",
       "      <td>+TAG+ +TAG+ stylenon</td>\n",
       "      <td>2140</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0</td>\n",
       "      <td>Just a terrific mobile app you've got there, +...</td>\n",
       "      <td>2140</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>972019</th>\n",
       "      <td>709</td>\n",
       "      <td>honestly one of the best kpop albums i've ever...</td>\n",
       "      <td>556</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>972020</th>\n",
       "      <td>709</td>\n",
       "      <td>probably my most played album of 2018 oof</td>\n",
       "      <td>556</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>972021</th>\n",
       "      <td>709</td>\n",
       "      <td>only M.I.A stans can see this tweet</td>\n",
       "      <td>556</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>972022</th>\n",
       "      <td>709</td>\n",
       "      <td>but have you watched no mercy +URL+</td>\n",
       "      <td>556</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>972023</th>\n",
       "      <td>709</td>\n",
       "      <td>UGH I'M DISGUSTED +URL+</td>\n",
       "      <td>556</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>972024 rows × 3 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "        author                                            message  counts\n",
       "0            0  +TAG+ I don't think you're an annoying fag, I ...    2140\n",
       "1            0  +TAG+ And with that, the \"grey vs gray\" disput...    2140\n",
       "2            0    Pls turn off the lights I wanna go to bed +URL+    2140\n",
       "3            0                               +TAG+ +TAG+ stylenon    2140\n",
       "4            0  Just a terrific mobile app you've got there, +...    2140\n",
       "...        ...                                                ...     ...\n",
       "972019     709  honestly one of the best kpop albums i've ever...     556\n",
       "972020     709          probably my most played album of 2018 oof     556\n",
       "972021     709                only M.I.A stans can see this tweet     556\n",
       "972022     709                but have you watched no mercy +URL+     556\n",
       "972023     709                            UGH I'M DISGUSTED +URL+     556\n",
       "\n",
       "[972024 rows x 3 columns]"
      ]
     },
     "execution_count": 124,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "twitter"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Transformando os dataframes em versoes classificadas por classe gramatical"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 174,
   "metadata": {},
   "outputs": [],
   "source": [
    "def POS_tagger(line):\n",
    "    text = nltk.word_tokenize(line)\n",
    "    return \" \".join([x[0] if x[0] in SUB_TABLE.keys() else x[1] for x in nltk.pos_tag(text)])   "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 175,
   "metadata": {},
   "outputs": [],
   "source": [
    "enron_POS = enron\n",
    "enron_POS.message = enron_POS.message.apply(POS_tagger)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 178,
   "metadata": {},
   "outputs": [],
   "source": [
    "enron_POS.to_csv(path_or_buf=\"../../../datasets/enron_interest_POS.csv\", index=False, quoting=csv.QUOTE_ALL)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "metadata": {},
   "outputs": [],
   "source": [
    "twitter_POS = twitter.copy()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "metadata": {},
   "outputs": [],
   "source": [
    "twitter_POS.message = twitter_POS.message.apply(POS_tagger)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "metadata": {},
   "outputs": [],
   "source": [
    "twitter_POS.to_csv(path_or_buf=\"../../../datasets/twitter_interest_POS.csv\", index=False, quoting=csv.QUOTE_ALL)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 127,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>author</th>\n",
       "      <th>message</th>\n",
       "      <th>counts</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>RB VBZ PRP$ NN</td>\n",
       "      <td>440</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0</td>\n",
       "      <td>VBG TO VB DT NN NN VBZ DT NN IN IN DT NN . RB ...</td>\n",
       "      <td>440</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0</td>\n",
       "      <td>NN JJ . NN TO VB . . .</td>\n",
       "      <td>440</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>0</td>\n",
       "      <td>NNP , NNP PRP VBP PRP DT NN IN DT JJ CC NN IN ...</td>\n",
       "      <td>440</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0</td>\n",
       "      <td>VB POS NN IN NNP IN CD .</td>\n",
       "      <td>440</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26140</th>\n",
       "      <td>77</td>\n",
       "      <td>NNP , NNP VBD IN PRP VBP PRP DT NN TO VB IN RB...</td>\n",
       "      <td>204</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26141</th>\n",
       "      <td>77</td>\n",
       "      <td>VBN JJ NN . NNP NNP NNP NNP .</td>\n",
       "      <td>204</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26142</th>\n",
       "      <td>77</td>\n",
       "      <td>NN MD VB TO VB CC VB PRP VBP DT</td>\n",
       "      <td>204</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26143</th>\n",
       "      <td>77</td>\n",
       "      <td>NNP , NNP VB NNP NNP IN DT NN NN . JJ NNS , NN...</td>\n",
       "      <td>204</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26144</th>\n",
       "      <td>77</td>\n",
       "      <td>NNP , NNP VB NNP NNP IN DT NN NN . JJ NNS , NN...</td>\n",
       "      <td>204</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>26145 rows × 3 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "       author                                            message  counts\n",
       "0           0                                     RB VBZ PRP$ NN     440\n",
       "1           0  VBG TO VB DT NN NN VBZ DT NN IN IN DT NN . RB ...     440\n",
       "2           0                             NN JJ . NN TO VB . . .     440\n",
       "3           0  NNP , NNP PRP VBP PRP DT NN IN DT JJ CC NN IN ...     440\n",
       "4           0                           VB POS NN IN NNP IN CD .     440\n",
       "...       ...                                                ...     ...\n",
       "26140      77  NNP , NNP VBD IN PRP VBP PRP DT NN TO VB IN RB...     204\n",
       "26141      77                      VBN JJ NN . NNP NNP NNP NNP .     204\n",
       "26142      77                    NN MD VB TO VB CC VB PRP VBP DT     204\n",
       "26143      77  NNP , NNP VB NNP NNP IN DT NN NN . JJ NNS , NN...     204\n",
       "26144      77  NNP , NNP VB NNP NNP IN DT NN NN . JJ NNS , NN...     204\n",
       "\n",
       "[26145 rows x 3 columns]"
      ]
     },
     "execution_count": 127,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "enron_POS = pd.read_csv(\"../../../datasets/enron_interest_POS.csv\", quoting=csv.QUOTE_ALL)\n",
    "enron_POS"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 128,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>author</th>\n",
       "      <th>message</th>\n",
       "      <th>counts</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>+TAG+ PRP VBP RB VB PRP VBP DT JJ NN , PRP VBP...</td>\n",
       "      <td>2140</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0</td>\n",
       "      <td>+TAG+ CC IN DT , DT `` JJ NN NN '' NN VBD VBN ...</td>\n",
       "      <td>2140</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0</td>\n",
       "      <td>NNP VB RP DT NNS PRP VBP RB VBP TO VB +URL+</td>\n",
       "      <td>2140</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>0</td>\n",
       "      <td>+TAG+ +TAG+ NN</td>\n",
       "      <td>2140</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0</td>\n",
       "      <td>RB DT NN NN NN PRP VBP VBN RB , +TAG+ +URL+</td>\n",
       "      <td>2140</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>972019</th>\n",
       "      <td>709</td>\n",
       "      <td>RB CD IN DT JJS NN NNS VBP VBP RB VBN IN PRP$ ...</td>\n",
       "      <td>556</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>972020</th>\n",
       "      <td>709</td>\n",
       "      <td>RB PRP$ JJS JJ NN IN CD NN</td>\n",
       "      <td>556</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>972021</th>\n",
       "      <td>709</td>\n",
       "      <td>RB NNP NNS MD VB DT NN</td>\n",
       "      <td>556</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>972022</th>\n",
       "      <td>709</td>\n",
       "      <td>CC VBP PRP VBN DT NN +URL+</td>\n",
       "      <td>556</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>972023</th>\n",
       "      <td>709</td>\n",
       "      <td>IN PRP VBP JJ +URL+</td>\n",
       "      <td>556</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>972024 rows × 3 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "        author                                            message  counts\n",
       "0            0  +TAG+ PRP VBP RB VB PRP VBP DT JJ NN , PRP VBP...    2140\n",
       "1            0  +TAG+ CC IN DT , DT `` JJ NN NN '' NN VBD VBN ...    2140\n",
       "2            0        NNP VB RP DT NNS PRP VBP RB VBP TO VB +URL+    2140\n",
       "3            0                                     +TAG+ +TAG+ NN    2140\n",
       "4            0        RB DT NN NN NN PRP VBP VBN RB , +TAG+ +URL+    2140\n",
       "...        ...                                                ...     ...\n",
       "972019     709  RB CD IN DT JJS NN NNS VBP VBP RB VBN IN PRP$ ...     556\n",
       "972020     709                         RB PRP$ JJS JJ NN IN CD NN     556\n",
       "972021     709                             RB NNP NNS MD VB DT NN     556\n",
       "972022     709                         CC VBP PRP VBN DT NN +URL+     556\n",
       "972023     709                                IN PRP VBP JJ +URL+     556\n",
       "\n",
       "[972024 rows x 3 columns]"
      ]
     },
     "execution_count": 128,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "twitter_POS = pd.read_csv(\"../../../datasets/twitter_interest_POS.csv\", quoting=csv.QUOTE_ALL)\n",
    "twitter_POS"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "POS_tagger(\"+TAG+ And with that,\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 129,
   "metadata": {},
   "outputs": [],
   "source": [
    "def pipeline(df,\n",
    "             x:str = \"message\",\n",
    "             y:str = \"author\",\n",
    "             vectorizer = TfidfVectorizer,\n",
    "             selector = SelectKBest,\n",
    "             K:int = 1000,\n",
    "             classifier = MultinomialNB,\n",
    "             random_state= np.random.RandomState,\n",
    "             ):\n",
    "    \n",
    "    print(f\"vectorizer \\t:\\t {vectorizer.__name__}\")\n",
    "    print(f\"selector \\t:\\t {selector.__name__}\")\n",
    "    print(f\"selecting K \\t:\\t {K}\")\n",
    "    print(f\"classifier \\t:\\t {classifier.__name__}\")\n",
    "    \n",
    "    X = df[x]\n",
    "    y = df[y]\n",
    "\n",
    "    clf = make_pipeline(vectorizer(), selector(chi2, k=K), classifier())    \n",
    "    cv_random = StratifiedKFold(n_splits=10, random_state=random_state, shuffle=True)    \n",
    "    scores = cross_validate(clf, X, y, cv=cv_random)\n",
    "    scores = scores[\"test_score\"].mean()\n",
    "    \n",
    "    print(f\"10-fold cross val mean accuracy: {scores}\")\n",
    "    return scores\n",
    "    "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Experimentos\n",
    "\n",
    " (2, 5, 10, 20) autores variando a quantidade de textos (120, 80, 40) para cada FE\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 132,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>message</th>\n",
       "      <th>counts</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>author</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>110</th>\n",
       "      <td>15</td>\n",
       "      <td>15</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>146</th>\n",
       "      <td>15</td>\n",
       "      <td>15</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>176</th>\n",
       "      <td>15</td>\n",
       "      <td>15</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>345</th>\n",
       "      <td>15</td>\n",
       "      <td>15</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>355</th>\n",
       "      <td>15</td>\n",
       "      <td>15</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>413</th>\n",
       "      <td>15</td>\n",
       "      <td>15</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>460</th>\n",
       "      <td>15</td>\n",
       "      <td>15</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>516</th>\n",
       "      <td>15</td>\n",
       "      <td>15</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>551</th>\n",
       "      <td>15</td>\n",
       "      <td>15</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>688</th>\n",
       "      <td>15</td>\n",
       "      <td>15</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "        message  counts\n",
       "author                 \n",
       "110          15      15\n",
       "146          15      15\n",
       "176          15      15\n",
       "345          15      15\n",
       "355          15      15\n",
       "413          15      15\n",
       "460          15      15\n",
       "516          15      15\n",
       "551          15      15\n",
       "688          15      15"
      ]
     },
     "execution_count": 132,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "def filter_rules(df, rd_state = np.random.RandomState, n_authors: int = 2, n_samples: int = 40):\n",
    "    counts = sorted(df.counts.unique().tolist(), reverse=True)[:n_authors]\n",
    "\n",
    "    # get `n_authors` with more text\n",
    "    df_reduced = df[df[\"counts\"].isin(counts)]\n",
    "    if len(df_reduced.author.unique()) > n_authors:\n",
    "        df_reduced = df_reduced[df_reduced.author != df_reduced.author.unique()[0]]\n",
    "    \n",
    "    \n",
    "    # from each author, get `n_samples` of text (emails or tweets)\n",
    "    df_reduced = df_reduced\\\n",
    "        .groupby(\"author\", as_index=False) \\\n",
    "        .apply(pd.DataFrame.sample, n=n_samples, random_state=rd_state, replace=True)\n",
    "    \n",
    "    return df_reduced\n",
    "\n",
    "filter_rules(twitter, rd_state=42, n_authors = 10, n_samples = 15).groupby(\"author\").count()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 117,
   "metadata": {},
   "outputs": [],
   "source": [
    "def FE_word_ngram(ngram=3):\n",
    "    word_re = r'\\b\\w+\\b'\n",
    "    return TfidfVectorizer(ngram_range=(ngram,ngram), token_pattern=word_re)\n",
    "\n",
    "\n",
    "def FE_char_ngram(ngram=5):\n",
    "    return TfidfVectorizer(ngram_range=(ngram,ngram), analyzer=\"char\")\n",
    "\n",
    "\n",
    "def FE_POS_ngram(ngram=3):\n",
    "    word_re = r'\\b\\w+\\b'\n",
    "    return TfidfVectorizer(ngram_range=(ngram,ngram), token_pattern=word_re)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 73,
   "metadata": {},
   "outputs": [],
   "source": [
    "def experimento1(df, df_pos, K:int = 1000, n_authors = [2, 5, 10, 20], n_samples = [120, 80, 40]):\n",
    "    parameters = [('Word n-gram', FE_word_ngram, df),\n",
    "                  ('Char n-gram', FE_char_ngram, df),\n",
    "                  ('POS n-gram', FE_POS_ngram, df_pos)]\n",
    "    \n",
    "    report = {\n",
    "        'accuracies' : [],\n",
    "        'n_authors'  : [],\n",
    "        'n_samples'  : [],\n",
    "        'FE_algorithm' : []\n",
    "    }\n",
    "        \n",
    "    for i, vec_processor in enumerate(parameters):\n",
    "        vec_name, vec_func, _df = vec_processor      \n",
    "        rd_state = np.random.RandomState(seed=42)\n",
    "\n",
    "        for n_a in n_authors:\n",
    "            for n_s in n_samples:\n",
    "                print(\"\\n----------------------------------\")\n",
    "                print(f\"Feature extraction algorithm: {vec_func.__name__}\")\n",
    "                print(f\"authors={n_a}  samples={n_s}\")\n",
    "                \n",
    "                data = filter_rules(_df, rd_state=rd_state, n_authors=n_a, n_samples=n_s)\n",
    "                score = pipeline(data, K=K, vectorizer=vec_func, classifier=MultinomialNB, random_state=rd_state)\n",
    "                \n",
    "                report[\"accuracies\"].append(score)\n",
    "                report['n_authors'].append(n_a)\n",
    "                report['n_samples'].append(n_s)\n",
    "                report['FE_algorithm'].append(vec_name)\n",
    "                \n",
    "    return report"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 50,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=2  samples=120\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7666666666666668\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=2  samples=80\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.66875\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=2  samples=40\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.625\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=5  samples=120\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6249999999999999\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=5  samples=80\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6249999999999999\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=5  samples=40\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=10  samples=120\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.55\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=10  samples=80\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5375\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=10  samples=40\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.42750000000000005\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=20  samples=120\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5087499999999999\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=20  samples=80\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.436875\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=20  samples=40\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.35875\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=2  samples=120\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9375\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=2  samples=80\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.88125\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=2  samples=40\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.875\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=5  samples=120\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7416666666666668\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=5  samples=80\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.74\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=5  samples=40\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.65\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=10  samples=120\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7033333333333334\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=10  samples=80\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6725000000000001\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=10  samples=40\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6174999999999999\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=20  samples=120\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6033333333333334\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=20  samples=80\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5468750000000001\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=20  samples=40\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.50125\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=2  samples=120\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7166666666666667\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=2  samples=80\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.56875\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=2  samples=40\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.55\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=5  samples=120\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.41500000000000004\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=5  samples=80\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.4725\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=5  samples=40\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.35500000000000004\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=10  samples=120\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.36583333333333334\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=10  samples=80\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.33125\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=10  samples=40\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "10-fold cross val mean accuracy: 0.33999999999999997\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=20  samples=120\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.2733333333333333\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=20  samples=80\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.20625\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=20  samples=40\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.18625\n"
     ]
    }
   ],
   "source": [
    "report = experimento1(enron, enron_POS, K='all')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 60,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>accuracies</th>\n",
       "      <th>n authors</th>\n",
       "      <th>n samples</th>\n",
       "      <th>FE algorithm</th>\n",
       "      <th>label</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0.766667</td>\n",
       "      <td>2</td>\n",
       "      <td>120</td>\n",
       "      <td>Word n-gram</td>\n",
       "      <td>2-120</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0.668750</td>\n",
       "      <td>2</td>\n",
       "      <td>80</td>\n",
       "      <td>Word n-gram</td>\n",
       "      <td>2-80</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0.625000</td>\n",
       "      <td>2</td>\n",
       "      <td>40</td>\n",
       "      <td>Word n-gram</td>\n",
       "      <td>2-40</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>0.625000</td>\n",
       "      <td>5</td>\n",
       "      <td>120</td>\n",
       "      <td>Word n-gram</td>\n",
       "      <td>5-120</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0.625000</td>\n",
       "      <td>5</td>\n",
       "      <td>80</td>\n",
       "      <td>Word n-gram</td>\n",
       "      <td>5-80</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   accuracies  n authors  n samples FE algorithm  label\n",
       "0    0.766667          2        120  Word n-gram  2-120\n",
       "1    0.668750          2         80  Word n-gram   2-80\n",
       "2    0.625000          2         40  Word n-gram   2-40\n",
       "3    0.625000          5        120  Word n-gram  5-120\n",
       "4    0.625000          5         80  Word n-gram   5-80"
      ]
     },
     "execution_count": 60,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "e1_report = pd.DataFrame(report)\n",
    "e1_report[\"label\"] = e1_report[\"n authors\"].astype(str) + \"-\" + e1_report[\"n samples\"].astype(str)\n",
    "e1_report.head()\n",
    "e1_report.to_csv(path_or_buf=\"../../../datasets/enron_e1_report.csv\", index=False, quoting=csv.QUOTE_ALL)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 101,
   "metadata": {},
   "outputs": [],
   "source": [
    "e1_report.to_csv(path_or_buf=\"../../../datasets/enron_e1_report.csv\", index=False, quoting=csv.QUOTE_ALL)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 48,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>accuracies</th>\n",
       "      <th>n authors</th>\n",
       "      <th>n samples</th>\n",
       "      <th>FE algorithm</th>\n",
       "      <th>label</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0.766667</td>\n",
       "      <td>2</td>\n",
       "      <td>120</td>\n",
       "      <td>Word n-gram</td>\n",
       "      <td>2-120</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0.668750</td>\n",
       "      <td>2</td>\n",
       "      <td>80</td>\n",
       "      <td>Word n-gram</td>\n",
       "      <td>2-80</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0.625000</td>\n",
       "      <td>2</td>\n",
       "      <td>40</td>\n",
       "      <td>Word n-gram</td>\n",
       "      <td>2-40</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>0.625000</td>\n",
       "      <td>5</td>\n",
       "      <td>120</td>\n",
       "      <td>Word n-gram</td>\n",
       "      <td>5-120</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0.625000</td>\n",
       "      <td>5</td>\n",
       "      <td>80</td>\n",
       "      <td>Word n-gram</td>\n",
       "      <td>5-80</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>0.500000</td>\n",
       "      <td>5</td>\n",
       "      <td>40</td>\n",
       "      <td>Word n-gram</td>\n",
       "      <td>5-40</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>0.550000</td>\n",
       "      <td>10</td>\n",
       "      <td>120</td>\n",
       "      <td>Word n-gram</td>\n",
       "      <td>10-120</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>0.537500</td>\n",
       "      <td>10</td>\n",
       "      <td>80</td>\n",
       "      <td>Word n-gram</td>\n",
       "      <td>10-80</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>0.427500</td>\n",
       "      <td>10</td>\n",
       "      <td>40</td>\n",
       "      <td>Word n-gram</td>\n",
       "      <td>10-40</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>0.508750</td>\n",
       "      <td>20</td>\n",
       "      <td>120</td>\n",
       "      <td>Word n-gram</td>\n",
       "      <td>20-120</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>0.436875</td>\n",
       "      <td>20</td>\n",
       "      <td>80</td>\n",
       "      <td>Word n-gram</td>\n",
       "      <td>20-80</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>0.358750</td>\n",
       "      <td>20</td>\n",
       "      <td>40</td>\n",
       "      <td>Word n-gram</td>\n",
       "      <td>20-40</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>0.937500</td>\n",
       "      <td>2</td>\n",
       "      <td>120</td>\n",
       "      <td>Char n-gram</td>\n",
       "      <td>2-120</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>0.881250</td>\n",
       "      <td>2</td>\n",
       "      <td>80</td>\n",
       "      <td>Char n-gram</td>\n",
       "      <td>2-80</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>0.875000</td>\n",
       "      <td>2</td>\n",
       "      <td>40</td>\n",
       "      <td>Char n-gram</td>\n",
       "      <td>2-40</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>0.741667</td>\n",
       "      <td>5</td>\n",
       "      <td>120</td>\n",
       "      <td>Char n-gram</td>\n",
       "      <td>5-120</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>0.740000</td>\n",
       "      <td>5</td>\n",
       "      <td>80</td>\n",
       "      <td>Char n-gram</td>\n",
       "      <td>5-80</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>0.650000</td>\n",
       "      <td>5</td>\n",
       "      <td>40</td>\n",
       "      <td>Char n-gram</td>\n",
       "      <td>5-40</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>0.703333</td>\n",
       "      <td>10</td>\n",
       "      <td>120</td>\n",
       "      <td>Char n-gram</td>\n",
       "      <td>10-120</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>0.672500</td>\n",
       "      <td>10</td>\n",
       "      <td>80</td>\n",
       "      <td>Char n-gram</td>\n",
       "      <td>10-80</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>0.617500</td>\n",
       "      <td>10</td>\n",
       "      <td>40</td>\n",
       "      <td>Char n-gram</td>\n",
       "      <td>10-40</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21</th>\n",
       "      <td>0.603333</td>\n",
       "      <td>20</td>\n",
       "      <td>120</td>\n",
       "      <td>Char n-gram</td>\n",
       "      <td>20-120</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22</th>\n",
       "      <td>0.546875</td>\n",
       "      <td>20</td>\n",
       "      <td>80</td>\n",
       "      <td>Char n-gram</td>\n",
       "      <td>20-80</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23</th>\n",
       "      <td>0.501250</td>\n",
       "      <td>20</td>\n",
       "      <td>40</td>\n",
       "      <td>Char n-gram</td>\n",
       "      <td>20-40</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24</th>\n",
       "      <td>0.716667</td>\n",
       "      <td>2</td>\n",
       "      <td>120</td>\n",
       "      <td>POS n-gram</td>\n",
       "      <td>2-120</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25</th>\n",
       "      <td>0.568750</td>\n",
       "      <td>2</td>\n",
       "      <td>80</td>\n",
       "      <td>POS n-gram</td>\n",
       "      <td>2-80</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26</th>\n",
       "      <td>0.550000</td>\n",
       "      <td>2</td>\n",
       "      <td>40</td>\n",
       "      <td>POS n-gram</td>\n",
       "      <td>2-40</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>27</th>\n",
       "      <td>0.415000</td>\n",
       "      <td>5</td>\n",
       "      <td>120</td>\n",
       "      <td>POS n-gram</td>\n",
       "      <td>5-120</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28</th>\n",
       "      <td>0.472500</td>\n",
       "      <td>5</td>\n",
       "      <td>80</td>\n",
       "      <td>POS n-gram</td>\n",
       "      <td>5-80</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>29</th>\n",
       "      <td>0.355000</td>\n",
       "      <td>5</td>\n",
       "      <td>40</td>\n",
       "      <td>POS n-gram</td>\n",
       "      <td>5-40</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>30</th>\n",
       "      <td>0.365833</td>\n",
       "      <td>10</td>\n",
       "      <td>120</td>\n",
       "      <td>POS n-gram</td>\n",
       "      <td>10-120</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>31</th>\n",
       "      <td>0.331250</td>\n",
       "      <td>10</td>\n",
       "      <td>80</td>\n",
       "      <td>POS n-gram</td>\n",
       "      <td>10-80</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>32</th>\n",
       "      <td>0.340000</td>\n",
       "      <td>10</td>\n",
       "      <td>40</td>\n",
       "      <td>POS n-gram</td>\n",
       "      <td>10-40</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>33</th>\n",
       "      <td>0.273333</td>\n",
       "      <td>20</td>\n",
       "      <td>120</td>\n",
       "      <td>POS n-gram</td>\n",
       "      <td>20-120</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>34</th>\n",
       "      <td>0.206250</td>\n",
       "      <td>20</td>\n",
       "      <td>80</td>\n",
       "      <td>POS n-gram</td>\n",
       "      <td>20-80</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>35</th>\n",
       "      <td>0.186250</td>\n",
       "      <td>20</td>\n",
       "      <td>40</td>\n",
       "      <td>POS n-gram</td>\n",
       "      <td>20-40</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    accuracies  n authors  n samples FE algorithm   label\n",
       "0     0.766667          2        120  Word n-gram   2-120\n",
       "1     0.668750          2         80  Word n-gram    2-80\n",
       "2     0.625000          2         40  Word n-gram    2-40\n",
       "3     0.625000          5        120  Word n-gram   5-120\n",
       "4     0.625000          5         80  Word n-gram    5-80\n",
       "5     0.500000          5         40  Word n-gram    5-40\n",
       "6     0.550000         10        120  Word n-gram  10-120\n",
       "7     0.537500         10         80  Word n-gram   10-80\n",
       "8     0.427500         10         40  Word n-gram   10-40\n",
       "9     0.508750         20        120  Word n-gram  20-120\n",
       "10    0.436875         20         80  Word n-gram   20-80\n",
       "11    0.358750         20         40  Word n-gram   20-40\n",
       "12    0.937500          2        120  Char n-gram   2-120\n",
       "13    0.881250          2         80  Char n-gram    2-80\n",
       "14    0.875000          2         40  Char n-gram    2-40\n",
       "15    0.741667          5        120  Char n-gram   5-120\n",
       "16    0.740000          5         80  Char n-gram    5-80\n",
       "17    0.650000          5         40  Char n-gram    5-40\n",
       "18    0.703333         10        120  Char n-gram  10-120\n",
       "19    0.672500         10         80  Char n-gram   10-80\n",
       "20    0.617500         10         40  Char n-gram   10-40\n",
       "21    0.603333         20        120  Char n-gram  20-120\n",
       "22    0.546875         20         80  Char n-gram   20-80\n",
       "23    0.501250         20         40  Char n-gram   20-40\n",
       "24    0.716667          2        120   POS n-gram   2-120\n",
       "25    0.568750          2         80   POS n-gram    2-80\n",
       "26    0.550000          2         40   POS n-gram    2-40\n",
       "27    0.415000          5        120   POS n-gram   5-120\n",
       "28    0.472500          5         80   POS n-gram    5-80\n",
       "29    0.355000          5         40   POS n-gram    5-40\n",
       "30    0.365833         10        120   POS n-gram  10-120\n",
       "31    0.331250         10         80   POS n-gram   10-80\n",
       "32    0.340000         10         40   POS n-gram   10-40\n",
       "33    0.273333         20        120   POS n-gram  20-120\n",
       "34    0.206250         20         80   POS n-gram   20-80\n",
       "35    0.186250         20         40   POS n-gram   20-40"
      ]
     },
     "execution_count": 48,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "e1_report = pd.read_csv(\"../../../datasets/enron_e1_report.csv\", quoting=csv.QUOTE_ALL)\n",
    "e1_report"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "<ipython-input-4-7c09ad31a356>:2: UserWarning: FixedFormatter should only be used together with FixedLocator\n",
      "  g1.set_xticklabels(labels=e1_report.label.unique(), rotation=30)\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "Text(0.5, 1.0, 'Enron')"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 576x576 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "g1 = sns.lineplot(data=e1_report, y=\"accuracies\", x=\"label\", hue=\"FE algorithm\")\n",
    "g1.set_xticklabels(labels=e1_report.label.unique(), rotation=30)\n",
    "g1.set_title(\"Enron\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 69,
   "metadata": {},
   "outputs": [],
   "source": [
    "e1_report_iso = e1_report.copy()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 109,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>n authors</th>\n",
       "      <th>FE algorithm</th>\n",
       "      <th>accuracies</th>\n",
       "      <th>n samples</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2</td>\n",
       "      <td>Char n-gram</td>\n",
       "      <td>0.897917</td>\n",
       "      <td>80</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2</td>\n",
       "      <td>POS n-gram</td>\n",
       "      <td>0.611806</td>\n",
       "      <td>80</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2</td>\n",
       "      <td>Word n-gram</td>\n",
       "      <td>0.686806</td>\n",
       "      <td>80</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>5</td>\n",
       "      <td>Char n-gram</td>\n",
       "      <td>0.710556</td>\n",
       "      <td>80</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>5</td>\n",
       "      <td>POS n-gram</td>\n",
       "      <td>0.414167</td>\n",
       "      <td>80</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>5</td>\n",
       "      <td>Word n-gram</td>\n",
       "      <td>0.583333</td>\n",
       "      <td>80</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>10</td>\n",
       "      <td>Char n-gram</td>\n",
       "      <td>0.664444</td>\n",
       "      <td>80</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>10</td>\n",
       "      <td>POS n-gram</td>\n",
       "      <td>0.345694</td>\n",
       "      <td>80</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>10</td>\n",
       "      <td>Word n-gram</td>\n",
       "      <td>0.505000</td>\n",
       "      <td>80</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>20</td>\n",
       "      <td>Char n-gram</td>\n",
       "      <td>0.550486</td>\n",
       "      <td>80</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>20</td>\n",
       "      <td>POS n-gram</td>\n",
       "      <td>0.221944</td>\n",
       "      <td>80</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>20</td>\n",
       "      <td>Word n-gram</td>\n",
       "      <td>0.434792</td>\n",
       "      <td>80</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    n authors FE algorithm  accuracies  n samples\n",
       "0           2  Char n-gram    0.897917         80\n",
       "1           2   POS n-gram    0.611806         80\n",
       "2           2  Word n-gram    0.686806         80\n",
       "3           5  Char n-gram    0.710556         80\n",
       "4           5   POS n-gram    0.414167         80\n",
       "5           5  Word n-gram    0.583333         80\n",
       "6          10  Char n-gram    0.664444         80\n",
       "7          10   POS n-gram    0.345694         80\n",
       "8          10  Word n-gram    0.505000         80\n",
       "9          20  Char n-gram    0.550486         80\n",
       "10         20   POS n-gram    0.221944         80\n",
       "11         20  Word n-gram    0.434792         80"
      ]
     },
     "execution_count": 109,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "e1_report_naut = e1_report_iso.groupby([\"n authors\", \"FE algorithm\"], as_index=False).mean()\n",
    "e1_report_naut"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 88,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>n samples</th>\n",
       "      <th>FE algorithm</th>\n",
       "      <th>accuracies</th>\n",
       "      <th>n authors</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>40</td>\n",
       "      <td>Char n-gram</td>\n",
       "      <td>0.660937</td>\n",
       "      <td>9.25</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>40</td>\n",
       "      <td>POS n-gram</td>\n",
       "      <td>0.357812</td>\n",
       "      <td>9.25</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>40</td>\n",
       "      <td>Word n-gram</td>\n",
       "      <td>0.477812</td>\n",
       "      <td>9.25</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>80</td>\n",
       "      <td>Char n-gram</td>\n",
       "      <td>0.710156</td>\n",
       "      <td>9.25</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>80</td>\n",
       "      <td>POS n-gram</td>\n",
       "      <td>0.394688</td>\n",
       "      <td>9.25</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>80</td>\n",
       "      <td>Word n-gram</td>\n",
       "      <td>0.567031</td>\n",
       "      <td>9.25</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>120</td>\n",
       "      <td>Char n-gram</td>\n",
       "      <td>0.746458</td>\n",
       "      <td>9.25</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>120</td>\n",
       "      <td>POS n-gram</td>\n",
       "      <td>0.442708</td>\n",
       "      <td>9.25</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>120</td>\n",
       "      <td>Word n-gram</td>\n",
       "      <td>0.612604</td>\n",
       "      <td>9.25</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   n samples FE algorithm  accuracies  n authors\n",
       "0         40  Char n-gram    0.660937       9.25\n",
       "1         40   POS n-gram    0.357812       9.25\n",
       "2         40  Word n-gram    0.477812       9.25\n",
       "3         80  Char n-gram    0.710156       9.25\n",
       "4         80   POS n-gram    0.394688       9.25\n",
       "5         80  Word n-gram    0.567031       9.25\n",
       "6        120  Char n-gram    0.746458       9.25\n",
       "7        120   POS n-gram    0.442708       9.25\n",
       "8        120  Word n-gram    0.612604       9.25"
      ]
     },
     "execution_count": 88,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "e1_report_nsamp = e1_report_iso.groupby([\"n samples\", \"FE algorithm\"], as_index=False).mean()\n",
    "e1_report_nsamp"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 112,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "([<matplotlib.axis.XTick at 0x7f08cf667850>,\n",
       "  <matplotlib.axis.XTick at 0x7f08cf667670>,\n",
       "  <matplotlib.axis.XTick at 0x7f08cf683460>],\n",
       " [Text(0, 0, ''), Text(0, 0, ''), Text(0, 0, '')])"
      ]
     },
     "execution_count": 112,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1080x720 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig, ax = plt.subplots(1,2, figsize=(15,10))\n",
    "\n",
    "g2 = sns.lineplot(data=e1_report_naut, y=\"accuracies\", x=\"n authors\", hue=\"FE algorithm\", err_style=None, ax=ax[0])\n",
    "plt.xticks([2, 5, 10, 20])\n",
    "\n",
    "g3=sns.lineplot(data=e1_report_nsamp, y=\"accuracies\", x=\"n samples\", hue=\"FE algorithm\", err_style=None, ax=ax[1])\n",
    "plt.xticks([120, 80, 40])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 95,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=2  samples=50\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.86\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=2  samples=100\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9400000000000001\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=2  samples=200\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9949999999999999\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=2  samples=300\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 1.0\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=2  samples=500\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 1.0\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=3  samples=50\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.64\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=3  samples=100\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7366666666666666\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=3  samples=200\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8066666666666666\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=3  samples=300\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8511111111111112\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=3  samples=500\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8806666666666667\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=4  samples=50\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.755\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=4  samples=100\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8025\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=4  samples=200\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8625\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=4  samples=300\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8958333333333334\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=4  samples=500\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9375\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=5  samples=50\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.704\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=5  samples=100\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8380000000000001\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=5  samples=200\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8870000000000001\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=5  samples=300\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9146666666666666\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=5  samples=500\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9308\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=6  samples=50\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7999999999999999\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=6  samples=100\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8533333333333333\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=6  samples=200\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9116666666666665\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=6  samples=300\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9344444444444443\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=6  samples=500\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9489999999999998\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=7  samples=50\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7342857142857143\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=7  samples=100\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.832857142857143\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=7  samples=200\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8742857142857142\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=7  samples=300\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8904761904761905\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=7  samples=500\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9114285714285714\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=8  samples=50\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.73\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=8  samples=100\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.78125\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=8  samples=200\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "10-fold cross val mean accuracy: 0.8375\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=8  samples=300\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8804166666666667\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=8  samples=500\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.91975\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=9  samples=50\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.74\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=9  samples=100\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7933333333333332\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=9  samples=200\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8583333333333334\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=9  samples=300\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8807407407407407\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=9  samples=500\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9213333333333333\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=10  samples=50\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7020000000000001\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=10  samples=100\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.812\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=10  samples=200\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.865\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=10  samples=300\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8893333333333334\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=10  samples=500\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9172\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=11  samples=50\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.72\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=11  samples=100\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8172727272727272\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=11  samples=200\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8627272727272727\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=11  samples=300\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8803030303030303\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=11  samples=500\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9052727272727272\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=12  samples=50\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7316666666666667\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=12  samples=100\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7641666666666667\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=12  samples=200\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.825\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=12  samples=300\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.85\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=12  samples=500\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8956666666666665\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=13  samples=50\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5771428571428571\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=13  samples=100\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6814285714285716\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=13  samples=200\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7546428571428572\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=13  samples=300\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8080952380952381\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=13  samples=500\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8468571428571428\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=14  samples=50\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6119999999999999\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=14  samples=100\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6933333333333334\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=14  samples=200\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.765\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=14  samples=300\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8137777777777778\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=14  samples=500\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8510666666666667\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=15  samples=50\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "10-fold cross val mean accuracy: 0.61125\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=15  samples=100\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6875\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=15  samples=200\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7653125000000001\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=15  samples=300\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.80375\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=15  samples=500\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8515\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=16  samples=50\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.588235294117647\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=16  samples=100\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6529411764705882\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=16  samples=200\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7488235294117647\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=16  samples=300\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7784313725490196\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=16  samples=500\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8300000000000001\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=17  samples=50\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5894736842105264\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=17  samples=100\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6847368421052632\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=17  samples=200\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7460526315789473\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=17  samples=300\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.803157894736842\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=17  samples=500\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8502105263157894\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=18  samples=50\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.614\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=18  samples=100\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.702\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=18  samples=200\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.77025\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=18  samples=300\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8089999999999999\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=18  samples=500\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8613\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=19  samples=50\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.58\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=19  samples=100\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6595238095238096\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=19  samples=200\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7392857142857143\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=19  samples=300\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7836507936507937\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=19  samples=500\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8271428571428571\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=20  samples=50\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5772727272727273\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=20  samples=100\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.67\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=20  samples=200\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7243181818181819\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=20  samples=300\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7699999999999999\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=20  samples=500\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8143636363636363\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=21  samples=50\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5886956521739131\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=21  samples=100\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6595652173913042\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=21  samples=200\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7334782608695651\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=21  samples=300\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "10-fold cross val mean accuracy: 0.7805797101449276\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=21  samples=500\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8229565217391304\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=22  samples=50\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5733333333333333\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=22  samples=100\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.65125\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=22  samples=200\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7310416666666667\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=22  samples=300\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7779166666666666\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=22  samples=500\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8213333333333332\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=23  samples=50\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5672\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=23  samples=100\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6468\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=23  samples=200\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7298\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=23  samples=300\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7673333333333333\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=23  samples=500\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.80952\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=24  samples=50\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5661538461538461\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=24  samples=100\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6407692307692306\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=24  samples=200\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7140384615384615\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=24  samples=300\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7543589743589744\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=24  samples=500\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7975384615384616\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=25  samples=50\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5925925925925926\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=25  samples=100\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6507407407407407\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=25  samples=200\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7209259259259259\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=25  samples=300\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7601234567901234\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=25  samples=500\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8011111111111111\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=26  samples=50\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5885714285714285\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=26  samples=100\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6664285714285714\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=26  samples=200\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7333928571428572\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=26  samples=300\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7597619047619047\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=26  samples=500\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8100714285714284\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=27  samples=50\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5944827586206898\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=27  samples=100\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6444827586206896\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=27  samples=200\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.71\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=27  samples=300\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7544827586206897\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=27  samples=500\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7886896551724136\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=28  samples=50\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "10-fold cross val mean accuracy: 0.5886666666666667\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=28  samples=100\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6626666666666666\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=28  samples=200\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7185\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=28  samples=300\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7546666666666668\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=28  samples=500\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.799\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=29  samples=50\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5948387096774195\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=29  samples=100\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6625806451612902\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=29  samples=200\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7267741935483871\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=29  samples=300\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7624731182795699\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=29  samples=500\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8027096774193548\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=30  samples=50\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.598125\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=30  samples=100\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6684375000000001\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=30  samples=200\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.70828125\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=30  samples=300\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7508333333333332\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=30  samples=500\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7955625\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=31  samples=50\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5806060606060607\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=31  samples=100\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6290909090909091\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=31  samples=200\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7003030303030303\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=31  samples=300\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7379797979797978\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=31  samples=500\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7798787878787878\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=32  samples=50\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5788235294117646\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=32  samples=100\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6388235294117648\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=32  samples=200\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7058823529411765\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=32  samples=300\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7320588235294119\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=32  samples=500\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7862352941176469\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=33  samples=50\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.564\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=33  samples=100\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6334285714285715\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=33  samples=200\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6898571428571428\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=33  samples=300\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7215238095238096\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=33  samples=500\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7647999999999999\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=34  samples=50\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5783333333333334\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=34  samples=100\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6294444444444444\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=34  samples=200\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "10-fold cross val mean accuracy: 0.6816666666666665\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=34  samples=300\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7341666666666667\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=34  samples=500\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7733333333333333\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=35  samples=50\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5664864864864866\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=35  samples=100\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6116216216216215\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=35  samples=200\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6778378378378378\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=35  samples=300\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7126126126126126\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=35  samples=500\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7583783783783783\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=36  samples=50\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5463157894736842\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=36  samples=100\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6021052631578947\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=36  samples=200\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6634210526315789\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=36  samples=300\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7057894736842104\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=36  samples=500\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7521052631578948\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=37  samples=50\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5420512820512821\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=37  samples=100\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6038461538461538\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=37  samples=200\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6544871794871796\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=37  samples=300\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7000854700854701\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=37  samples=500\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7452307692307693\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=38  samples=50\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5349999999999999\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=38  samples=100\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.608\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=38  samples=200\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.66575\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=38  samples=300\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7034166666666668\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=38  samples=500\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7501\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=39  samples=50\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5107317073170732\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=39  samples=100\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5860975609756097\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=39  samples=200\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6468292682926831\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=39  samples=300\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6876422764227642\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=39  samples=500\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7392682926829268\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=40  samples=50\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5209523809523808\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=40  samples=100\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5826190476190475\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=40  samples=200\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.646547619047619\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=40  samples=300\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6908730158730159\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=40  samples=500\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "10-fold cross val mean accuracy: 0.7391428571428571\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=41  samples=50\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5037209302325583\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=41  samples=100\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5844186046511628\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=41  samples=200\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6436046511627908\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=41  samples=300\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6793798449612404\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=41  samples=500\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7229302325581395\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=42  samples=50\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.49727272727272726\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=42  samples=100\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5659090909090909\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=42  samples=200\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6368181818181818\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=42  samples=300\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6640151515151514\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=42  samples=500\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7167727272727273\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=43  samples=50\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.49688888888888894\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=43  samples=100\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5646666666666668\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=43  samples=200\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6161111111111112\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=43  samples=300\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6566666666666667\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=43  samples=500\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7037333333333333\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=44  samples=50\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.4678260869565218\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=44  samples=100\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5454347826086956\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=44  samples=200\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6118478260869565\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=44  samples=300\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6468840579710144\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=44  samples=500\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6945652173913044\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=45  samples=50\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.4936170212765957\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=45  samples=100\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5491489361702128\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=45  samples=200\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6103191489361703\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=45  samples=300\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6516312056737589\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=45  samples=500\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6951063829787233\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=46  samples=50\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.48708333333333326\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=46  samples=100\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5441666666666667\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=46  samples=200\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6009375\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=46  samples=300\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6401388888888888\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=46  samples=500\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6872916666666666\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=47  samples=50\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5004081632653061\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=47  samples=100\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "10-fold cross val mean accuracy: 0.543469387755102\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=47  samples=200\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6084693877551021\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=47  samples=300\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6370748299319727\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=47  samples=500\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6870612244897958\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=48  samples=50\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.47879999999999995\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=48  samples=100\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5388\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=48  samples=200\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6003000000000001\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=48  samples=300\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6301333333333333\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=48  samples=500\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.672\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=49  samples=50\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.48431372549019613\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=49  samples=100\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5327450980392158\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=49  samples=200\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5948039215686275\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=49  samples=300\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6220261437908496\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "authors=49  samples=500\n",
      "vectorizer \t:\t FE_word_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6756862745098039\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=2  samples=50\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.99\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=2  samples=100\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 1.0\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=2  samples=200\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 1.0\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=2  samples=300\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 1.0\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=2  samples=500\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 1.0\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=3  samples=50\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9800000000000001\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=3  samples=100\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9866666666666667\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=3  samples=200\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 1.0\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=3  samples=300\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9977777777777778\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=3  samples=500\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 1.0\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=4  samples=50\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9799999999999999\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=4  samples=100\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9875\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=4  samples=200\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.99875\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=4  samples=300\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9991666666666668\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=4  samples=500\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9995\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=5  samples=50\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9640000000000001\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=5  samples=100\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.998\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=5  samples=200\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.999\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=5  samples=300\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9993333333333332\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=5  samples=500\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "10-fold cross val mean accuracy: 0.9996\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=6  samples=50\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9800000000000001\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=6  samples=100\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9933333333333334\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=6  samples=200\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9983333333333334\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=6  samples=300\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9988888888888887\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=6  samples=500\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9989999999999999\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=7  samples=50\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9885714285714287\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=7  samples=100\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9957142857142858\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=7  samples=200\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9978571428571428\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=7  samples=300\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9990476190476191\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=7  samples=500\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9991428571428571\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=8  samples=50\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9175000000000001\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=8  samples=100\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9662499999999999\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=8  samples=200\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9706250000000001\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=8  samples=300\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9799999999999999\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=8  samples=500\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.99125\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=9  samples=50\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9488888888888889\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=9  samples=100\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9522222222222222\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=9  samples=200\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9733333333333333\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=9  samples=300\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9848148148148148\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=9  samples=500\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.99\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=10  samples=50\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9159999999999998\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=10  samples=100\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9489999999999998\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=10  samples=200\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9795\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=10  samples=300\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9826666666666666\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=10  samples=500\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9902\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=11  samples=50\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.909090909090909\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=11  samples=100\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9418181818181818\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=11  samples=200\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9704545454545455\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=11  samples=300\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9766666666666668\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=11  samples=500\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9856363636363635\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=12  samples=50\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9016666666666667\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=12  samples=100\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "10-fold cross val mean accuracy: 0.9516666666666668\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=12  samples=200\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9666666666666668\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=12  samples=300\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9705555555555554\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=12  samples=500\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9863333333333333\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=13  samples=50\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8514285714285714\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=13  samples=100\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8885714285714285\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=13  samples=200\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9135714285714286\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=13  samples=300\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9283333333333333\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=13  samples=500\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9382857142857143\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=14  samples=50\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.82\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=14  samples=100\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8753333333333332\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=14  samples=200\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.916\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=14  samples=300\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.924\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=14  samples=500\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9381333333333333\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=15  samples=50\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.85125\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=15  samples=100\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.885\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=15  samples=200\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9112500000000001\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=15  samples=300\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9214583333333332\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=15  samples=500\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9435000000000002\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=16  samples=50\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.871764705882353\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=16  samples=100\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8770588235294119\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=16  samples=200\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9091176470588234\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=16  samples=300\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9245098039215687\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=16  samples=500\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9330588235294117\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=17  samples=50\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8221052631578948\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=17  samples=100\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8657894736842104\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=17  samples=200\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9110526315789474\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=17  samples=300\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9252631578947369\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=17  samples=500\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9397894736842105\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=18  samples=50\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8220000000000001\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=18  samples=100\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8799999999999999\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=18  samples=200\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.91275\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=18  samples=300\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "10-fold cross val mean accuracy: 0.9283333333333333\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=18  samples=500\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9425999999999999\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=19  samples=50\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8247619047619048\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=19  samples=100\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8666666666666666\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=19  samples=200\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8976190476190476\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=19  samples=300\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9180952380952382\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=19  samples=500\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9279047619047619\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=20  samples=50\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.761818181818182\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=20  samples=100\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8386363636363636\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=20  samples=200\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8729545454545455\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=20  samples=300\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.900151515151515\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=20  samples=500\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9149090909090909\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=21  samples=50\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7765217391304347\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=21  samples=100\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8334782608695651\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=21  samples=200\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8758695652173912\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=21  samples=300\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9049275362318842\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=21  samples=500\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9207826086956521\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=22  samples=50\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7866666666666667\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=22  samples=100\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8245833333333333\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=22  samples=200\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8795833333333334\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=22  samples=300\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8965277777777777\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=22  samples=500\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9181666666666668\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=23  samples=50\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7535999999999999\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=23  samples=100\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8288\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=23  samples=200\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8699999999999999\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=23  samples=300\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8889333333333334\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=23  samples=500\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9084\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=24  samples=50\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7546153846153846\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=24  samples=100\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8246153846153845\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=24  samples=200\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8659615384615386\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=24  samples=300\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8903846153846153\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=24  samples=500\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9080769230769231\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=25  samples=50\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "10-fold cross val mean accuracy: 0.7888888888888889\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=25  samples=100\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8311111111111111\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=25  samples=200\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8705555555555555\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=25  samples=300\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8971604938271606\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=25  samples=500\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9078518518518519\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=26  samples=50\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7714285714285714\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=26  samples=100\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8357142857142857\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=26  samples=200\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8708928571428572\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=26  samples=300\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8913095238095238\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=26  samples=500\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9184999999999999\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=27  samples=50\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7724137931034483\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=27  samples=100\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8120689655172415\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=27  samples=200\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8589655172413793\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=27  samples=300\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8832183908045976\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=27  samples=500\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9026206896551725\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=28  samples=50\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7713333333333333\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=28  samples=100\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8193333333333334\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=28  samples=200\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8606666666666667\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=28  samples=300\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8746666666666666\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=28  samples=500\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9023333333333332\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=29  samples=50\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7535483870967742\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=29  samples=100\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8077419354838709\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=29  samples=200\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8622580645161291\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=29  samples=300\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8789247311827957\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=29  samples=500\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8997419354838708\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=30  samples=50\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7581249999999999\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=30  samples=100\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.81875\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=30  samples=200\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8400000000000001\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=30  samples=300\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8731249999999999\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=30  samples=500\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8976875\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=31  samples=50\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7387878787878788\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=31  samples=100\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7854545454545455\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=31  samples=200\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "10-fold cross val mean accuracy: 0.8360606060606062\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=31  samples=300\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8582828282828283\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=31  samples=500\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.882\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=32  samples=50\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7458823529411764\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=32  samples=100\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.793235294117647\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=32  samples=200\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8310294117647057\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=32  samples=300\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8527450980392157\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=32  samples=500\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8851176470588233\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=33  samples=50\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7331428571428572\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=33  samples=100\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7754285714285715\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=33  samples=200\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8177142857142858\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=33  samples=300\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8474285714285715\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=33  samples=500\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8734857142857143\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=34  samples=50\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7227777777777779\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=34  samples=100\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7755555555555556\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=34  samples=200\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8220833333333333\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=34  samples=300\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8518518518518517\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=34  samples=500\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8769444444444444\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=35  samples=50\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7216216216216217\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=35  samples=100\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7591891891891892\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=35  samples=200\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.816081081081081\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=35  samples=300\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8394594594594595\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=35  samples=500\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8676216216216217\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=36  samples=50\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6968421052631579\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=36  samples=100\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7415789473684211\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=36  samples=200\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8078947368421053\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=36  samples=300\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8362280701754387\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=36  samples=500\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8658421052631577\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=37  samples=50\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7061538461538461\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=37  samples=100\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7664102564102564\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=37  samples=200\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8146153846153845\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=37  samples=300\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8376068376068375\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=37  samples=500\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "10-fold cross val mean accuracy: 0.8689743589743589\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=38  samples=50\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7049999999999998\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=38  samples=100\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.76\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=38  samples=200\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.810375\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=38  samples=300\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8366666666666667\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=38  samples=500\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8710000000000001\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=39  samples=50\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7136585365853658\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=39  samples=100\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.758780487804878\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=39  samples=200\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8109756097560975\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=39  samples=300\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8423577235772358\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=39  samples=500\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8729756097560977\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=40  samples=50\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7266666666666668\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=40  samples=100\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7609523809523809\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=40  samples=200\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8108333333333334\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=40  samples=300\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8396825396825397\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=40  samples=500\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8674285714285714\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=41  samples=50\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.687906976744186\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=41  samples=100\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7541860465116279\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=41  samples=200\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8011627906976744\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=41  samples=300\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8272868217054263\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=41  samples=500\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8546046511627907\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=42  samples=50\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6795454545454546\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=42  samples=100\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7270454545454547\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=42  samples=200\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7914772727272728\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=42  samples=300\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8134848484848485\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=42  samples=500\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8449090909090909\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=43  samples=50\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6799999999999999\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=43  samples=100\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.724\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=43  samples=200\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7785555555555556\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=43  samples=300\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8095555555555556\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=43  samples=500\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8410666666666667\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=44  samples=50\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6521739130434782\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=44  samples=100\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "10-fold cross val mean accuracy: 0.7197826086956522\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=44  samples=200\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7634782608695652\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=44  samples=300\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7974637681159421\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=44  samples=500\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8326956521739131\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=45  samples=50\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6599999999999999\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=45  samples=100\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7093617021276597\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=45  samples=200\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7656382978723404\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=45  samples=300\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8035460992907801\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=45  samples=500\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8279574468085107\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=46  samples=50\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.66\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=46  samples=100\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7045833333333335\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=46  samples=200\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7533333333333332\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=46  samples=300\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7840277777777777\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=46  samples=500\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8155416666666666\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=47  samples=50\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6518367346938774\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=47  samples=100\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7014285714285714\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=47  samples=200\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7591836734693878\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=47  samples=300\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.786530612244898\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=47  samples=500\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.820122448979592\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=48  samples=50\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6428\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=48  samples=100\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.692\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=48  samples=200\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7484\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=48  samples=300\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7666666666666667\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=48  samples=500\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8046\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=49  samples=50\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6294117647058824\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=49  samples=100\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.68\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=49  samples=200\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7381372549019608\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=49  samples=300\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7681045751633986\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "authors=49  samples=500\n",
      "vectorizer \t:\t FE_char_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7942745098039216\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=2  samples=50\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.99\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=2  samples=100\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9949999999999999\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=2  samples=200\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9925\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=2  samples=300\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 1.0\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=2  samples=500\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "10-fold cross val mean accuracy: 0.9970000000000001\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=3  samples=50\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.86\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=3  samples=100\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9200000000000002\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=3  samples=200\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9499999999999998\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=3  samples=300\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9555555555555555\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=3  samples=500\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9806666666666667\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=4  samples=50\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8700000000000001\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=4  samples=100\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9099999999999999\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=4  samples=200\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9575000000000001\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=4  samples=300\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9700000000000001\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=4  samples=500\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9724999999999999\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=5  samples=50\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8680000000000001\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=5  samples=100\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9319999999999998\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=5  samples=200\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9649999999999999\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=5  samples=300\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9700000000000001\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=5  samples=500\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9812\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=6  samples=50\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9200000000000002\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=6  samples=100\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9416666666666667\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=6  samples=200\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9574999999999999\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=6  samples=300\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9755555555555555\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=6  samples=500\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9826666666666665\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=7  samples=50\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8657142857142859\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=7  samples=100\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9128571428571428\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=7  samples=200\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.95\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=7  samples=300\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9652380952380952\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=7  samples=500\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9774285714285714\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=8  samples=50\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8099999999999999\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=8  samples=100\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8412499999999999\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=8  samples=200\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.89125\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=8  samples=300\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9108333333333333\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=8  samples=500\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9369999999999999\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=9  samples=50\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8044444444444444\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=9  samples=100\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8388888888888889\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=9  samples=200\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "10-fold cross val mean accuracy: 0.9016666666666666\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=9  samples=300\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9148148148148147\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=9  samples=500\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9337777777777777\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=10  samples=50\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.776\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=10  samples=100\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.835\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=10  samples=200\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8870000000000001\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=10  samples=300\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9109999999999999\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=10  samples=500\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9239999999999998\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=11  samples=50\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7309090909090908\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=11  samples=100\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8072727272727274\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=11  samples=200\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8659090909090909\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=11  samples=300\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8809090909090911\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=11  samples=500\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9101818181818183\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=12  samples=50\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7283333333333334\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=12  samples=100\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8008333333333333\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=12  samples=200\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.83125\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=12  samples=300\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8638888888888889\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=12  samples=500\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9043333333333333\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=13  samples=50\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6342857142857142\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=13  samples=100\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7257142857142858\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=13  samples=200\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7825\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=13  samples=300\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7983333333333333\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=13  samples=500\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8438571428571429\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=14  samples=50\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.656\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=14  samples=100\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7266666666666667\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=14  samples=200\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7836666666666667\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=14  samples=300\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7993333333333333\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=14  samples=500\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8430666666666667\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=15  samples=50\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.66625\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=15  samples=100\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7143750000000001\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=15  samples=200\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.774375\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=15  samples=300\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8081250000000001\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=15  samples=500\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8459999999999999\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=16  samples=50\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "10-fold cross val mean accuracy: 0.6423529411764706\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=16  samples=100\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7205882352941178\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=16  samples=200\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7623529411764707\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=16  samples=300\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7909803921568628\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=16  samples=500\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8096470588235295\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=17  samples=50\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6242105263157894\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=17  samples=100\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=17  samples=200\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7476315789473684\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=17  samples=300\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7914035087719299\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=17  samples=500\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8186315789473684\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=18  samples=50\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.656\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=18  samples=100\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.72\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=18  samples=200\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7762499999999999\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=18  samples=300\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7985\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=18  samples=500\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.827\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=19  samples=50\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6038095238095239\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=19  samples=100\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6790476190476191\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=19  samples=200\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.741904761904762\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=19  samples=300\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7647619047619048\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=19  samples=500\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7939047619047619\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=20  samples=50\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.61\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=20  samples=100\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6795454545454547\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=20  samples=200\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7293181818181818\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=20  samples=300\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7671212121212122\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=20  samples=500\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7929999999999999\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=21  samples=50\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6173913043478262\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=21  samples=100\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6860869565217391\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=21  samples=200\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7430434782608696\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=21  samples=300\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.763623188405797\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=21  samples=500\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7964347826086956\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=22  samples=50\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6208333333333333\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=22  samples=100\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6366666666666666\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=22  samples=200\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7083333333333333\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=22  samples=300\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "10-fold cross val mean accuracy: 0.7383333333333334\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=22  samples=500\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.76625\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=23  samples=50\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.576\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=23  samples=100\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6451999999999999\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=23  samples=200\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.693\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=23  samples=300\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7274666666666667\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=23  samples=500\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.75912\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=24  samples=50\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.576153846153846\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=24  samples=100\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6353846153846152\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=24  samples=200\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.686923076923077\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=24  samples=300\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7126923076923077\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=24  samples=500\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.744\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=25  samples=50\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5444444444444444\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=25  samples=100\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6192592592592593\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=25  samples=200\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6692592592592593\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=25  samples=300\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.698395061728395\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=25  samples=500\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7264444444444444\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=26  samples=50\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5585714285714285\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=26  samples=100\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6217857142857143\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=26  samples=200\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6835714285714285\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=26  samples=300\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7036904761904761\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=26  samples=500\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7418571428571429\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=27  samples=50\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5496551724137931\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=27  samples=100\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.613448275862069\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=27  samples=200\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6543103448275862\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=27  samples=300\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6914942528735631\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=27  samples=500\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7200689655172414\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=28  samples=50\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5413333333333333\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=28  samples=100\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6073333333333333\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=28  samples=200\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6556666666666666\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=28  samples=300\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6910000000000001\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=28  samples=500\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7196\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=29  samples=50\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5303225806451612\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=29  samples=100\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "10-fold cross val mean accuracy: 0.5932258064516129\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=29  samples=200\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6441935483870967\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=29  samples=300\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6590322580645162\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=29  samples=500\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6938064516129032\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=30  samples=50\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.516875\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=30  samples=100\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.588125\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=30  samples=200\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.61875\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=30  samples=300\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6586458333333334\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=30  samples=500\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.684375\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=31  samples=50\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5072727272727272\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=31  samples=100\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.556060606060606\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=31  samples=200\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6137878787878788\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=31  samples=300\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6316161616161615\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=31  samples=500\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6712121212121213\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=32  samples=50\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.4970588235294118\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=32  samples=100\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5405882352941177\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=32  samples=200\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5848529411764706\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=32  samples=300\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6261764705882353\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=32  samples=500\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6585294117647058\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=33  samples=50\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.49828571428571433\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=33  samples=100\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5394285714285714\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=33  samples=200\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5815714285714286\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=33  samples=300\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6123809523809525\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=33  samples=500\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6447999999999998\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=34  samples=50\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.495\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=34  samples=100\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5408333333333334\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=34  samples=200\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5875\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=34  samples=300\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6244444444444445\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=34  samples=500\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6542222222222223\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=35  samples=50\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.4843243243243244\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=35  samples=100\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5329729729729729\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=35  samples=200\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5805405405405406\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=35  samples=300\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.616036036036036\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=35  samples=500\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "10-fold cross val mean accuracy: 0.6447567567567567\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=36  samples=50\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.48157894736842105\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=36  samples=100\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5157894736842106\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=36  samples=200\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5814473684210528\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=36  samples=300\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6035087719298246\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=36  samples=500\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.633157894736842\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=37  samples=50\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.4758974358974359\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=37  samples=100\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5294871794871794\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=37  samples=200\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.574102564102564\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=37  samples=300\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6097435897435897\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=37  samples=500\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6427692307692308\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=38  samples=50\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.4715\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=38  samples=100\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.52775\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=38  samples=200\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.582625\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=38  samples=300\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.60475\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=38  samples=500\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6432\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=39  samples=50\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.4614634146341464\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=39  samples=100\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5258536585365855\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=39  samples=200\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5656097560975609\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=39  samples=300\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5980487804878049\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=39  samples=500\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6306829268292683\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=40  samples=50\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.4571428571428572\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=40  samples=100\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5128571428571428\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=40  samples=200\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.565595238095238\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=40  samples=300\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5935714285714284\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=40  samples=500\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6201428571428572\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=41  samples=50\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.44000000000000006\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=41  samples=100\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5058139534883721\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=41  samples=200\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.554767441860465\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=41  samples=300\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5765891472868218\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=41  samples=500\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6107441860465117\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=42  samples=50\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.45681818181818173\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=42  samples=100\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.49409090909090914\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=42  samples=200\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "10-fold cross val mean accuracy: 0.5497727272727273\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=42  samples=300\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5671212121212121\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=42  samples=500\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.596\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=43  samples=50\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.45377777777777784\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=43  samples=100\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.4782222222222222\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=43  samples=200\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.54\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=43  samples=300\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5597777777777777\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=43  samples=500\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5894222222222222\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=44  samples=50\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.41739130434782606\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=44  samples=100\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.47260869565217395\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=44  samples=200\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5218478260869566\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=44  samples=300\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5478985507246377\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=44  samples=500\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5793478260869566\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=45  samples=50\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.4170212765957447\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=45  samples=100\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.4561702127659575\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=45  samples=200\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5123404255319148\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=45  samples=300\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5350354609929079\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=45  samples=500\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5707234042553192\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=46  samples=50\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.4058333333333334\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=46  samples=100\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.45562499999999995\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=46  samples=200\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5012500000000001\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=46  samples=300\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5246527777777777\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=46  samples=500\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5630833333333334\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=47  samples=50\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.41142857142857137\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=47  samples=100\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.45346938775510204\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=47  samples=200\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5045918367346939\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=47  samples=300\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5235374149659864\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=47  samples=500\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5596326530612246\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=48  samples=50\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.40360000000000007\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=48  samples=100\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.4532\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=48  samples=200\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.4907\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=48  samples=300\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5118666666666666\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=48  samples=500\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.55236\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=49  samples=50\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "10-fold cross val mean accuracy: 0.3905882352941177\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=49  samples=100\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.4427450980392157\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=49  samples=200\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.4848039215686274\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=49  samples=300\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5149673202614379\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "authors=49  samples=500\n",
      "vectorizer \t:\t FE_POS_ngram\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5400392156862746\n"
     ]
    }
   ],
   "source": [
    "tw_report = experimento1(twitter, twitter_POS, K='all', n_authors=range(2,50), n_samples=[50, 100, 200, 300, 500])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 96,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>accuracies</th>\n",
       "      <th>n_authors</th>\n",
       "      <th>n_samples</th>\n",
       "      <th>FE_algorithm</th>\n",
       "      <th>label</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0.860</td>\n",
       "      <td>2</td>\n",
       "      <td>50</td>\n",
       "      <td>Word n-gram</td>\n",
       "      <td>2-50</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0.940</td>\n",
       "      <td>2</td>\n",
       "      <td>100</td>\n",
       "      <td>Word n-gram</td>\n",
       "      <td>2-100</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0.995</td>\n",
       "      <td>2</td>\n",
       "      <td>200</td>\n",
       "      <td>Word n-gram</td>\n",
       "      <td>2-200</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1.000</td>\n",
       "      <td>2</td>\n",
       "      <td>300</td>\n",
       "      <td>Word n-gram</td>\n",
       "      <td>2-300</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1.000</td>\n",
       "      <td>2</td>\n",
       "      <td>500</td>\n",
       "      <td>Word n-gram</td>\n",
       "      <td>2-500</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   accuracies  n_authors  n_samples FE_algorithm  label\n",
       "0       0.860          2         50  Word n-gram   2-50\n",
       "1       0.940          2        100  Word n-gram  2-100\n",
       "2       0.995          2        200  Word n-gram  2-200\n",
       "3       1.000          2        300  Word n-gram  2-300\n",
       "4       1.000          2        500  Word n-gram  2-500"
      ]
     },
     "execution_count": 96,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "t1_report = pd.DataFrame(tw_report)\n",
    "t1_report[\"label\"] = t1_report[\"n_authors\"].astype(str) + \"-\" + t1_report[\"n_samples\"].astype(str)\n",
    "t1_report.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 102,
   "metadata": {},
   "outputs": [],
   "source": [
    "t1_report.to_csv(path_or_buf=\"../../../datasets/twitter_e1_report.csv\", index=False, quoting=csv.QUOTE_ALL)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [],
   "source": [
    "t1_report = pd.read_csv(\"../../../datasets/twitter_e1_report.csv\",  quoting=csv.QUOTE_ALL)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 115,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0.5, 0.98, 'Twitter')"
      ]
     },
     "execution_count": 115,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1080x720 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig, ax =plt.subplots(1,2, figsize=(15,10))\n",
    "\n",
    "sns.lineplot(data=t1_report, y=\"accuracies\", x=\"n_authors\", hue=\"FE_algorithm\", err_style=None, ax=ax[0], markers=True, dashes=False)\n",
    "sns.lineplot(data=t1_report, y=\"accuracies\", x=\"n_samples\", hue=\"FE_algorithm\", err_style=None, ax=ax[1], markers=True, dashes=False)\n",
    "fig.suptitle(\"Twitter\")\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Experimento 2: Variando o n dos ngramas"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 222,
   "metadata": {},
   "outputs": [],
   "source": [
    "def experimento2(df, df_pos, K:int = 1000, n_authors = [2, 5, 10, 20], n_samples = [120, 80, 40]):\n",
    "    parameters = [('Word n-gram', FE_word_ngram, df, [1,2,3,4,5]),\n",
    "                  ('Char n-gram', FE_char_ngram, df, [1,2,3,4,5]),\n",
    "                  ('POS n-gram', FE_POS_ngram, df_pos, [1,2,3,4,5])]\n",
    "\n",
    "    \n",
    "    report = {\n",
    "        'accuracies' : [],\n",
    "        'n_authors'  : [],\n",
    "        'n_samples'  : [],\n",
    "        'FE_algorithm' : [],\n",
    "        'n_gram'       : [],\n",
    "    }\n",
    "        \n",
    "    for i, vec_processor in enumerate(parameters):\n",
    "        vec_name, vec_func, _df, ngrams = vec_processor      \n",
    "        rd_state = np.random.RandomState(seed=42)\n",
    "\n",
    "        for ngram in ngrams:\n",
    "            for n_a in n_authors:\n",
    "                for n_s in n_samples:\n",
    "                    print(\"\\n----------------------------------\")\n",
    "                    print(f\"Feature extraction algorithm: {vec_func.__name__}\")\n",
    "                    print(f\"{ngram}-gram    authors={n_a}   samples={n_s}\")\n",
    "                    \n",
    "                    def meta_FE():\n",
    "                        return vec_func(ngram)\n",
    "\n",
    "                    data = filter_rules(_df, rd_state=rd_state, n_authors=n_a, n_samples=n_s)\n",
    "                    score = pipeline(data, K=K, vectorizer=meta_FE, classifier=MultinomialNB, random_state=rd_state)\n",
    "\n",
    "                    report[\"accuracies\"].append(score)\n",
    "                    report['n_authors'].append(n_a)\n",
    "                    report['n_samples'].append(n_s)\n",
    "                    report['FE_algorithm'].append(vec_name)\n",
    "                    report['n_gram'].append(ngram)\n",
    "                \n",
    "    return report"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 223,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=2   samples=120\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6916666666666668\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=2   samples=80\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.625\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=2   samples=40\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=5   samples=120\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.37\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=5   samples=80\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.36\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=5   samples=40\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.4\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=10   samples=120\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.265\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=10   samples=80\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.2475\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=10   samples=40\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.29\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=20   samples=120\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.18791666666666668\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=20   samples=80\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.16375\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=20   samples=40\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.16250000000000003\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=2   samples=120\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7166666666666666\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=2   samples=80\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.76875\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=2   samples=40\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.65\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=5   samples=120\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.51\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=5   samples=80\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.48999999999999994\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=5   samples=40\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.36\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=10   samples=120\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.35250000000000004\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=10   samples=80\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.34625\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=10   samples=40\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.3175\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=20   samples=120\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.25166666666666665\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=20   samples=80\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.228125\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=20   samples=40\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.17625000000000002\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=2   samples=120\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6875000000000001\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=2   samples=80\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.66875\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=2   samples=40\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6125\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=5   samples=120\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.4416666666666667\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=5   samples=80\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.42000000000000004\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=5   samples=40\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.43499999999999994\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=10   samples=120\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.34833333333333333\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=10   samples=80\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.31\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=10   samples=40\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "10-fold cross val mean accuracy: 0.27249999999999996\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=20   samples=120\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.24874999999999997\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=20   samples=80\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.26875\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=20   samples=40\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.19749999999999998\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=2   samples=120\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6083333333333333\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=2   samples=80\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5875\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=2   samples=40\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5875\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=5   samples=120\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.45166666666666677\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=5   samples=80\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.45500000000000007\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=5   samples=40\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.325\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=10   samples=120\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.4141666666666667\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=10   samples=80\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.35125\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=10   samples=40\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.26\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=20   samples=120\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.3108333333333333\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=20   samples=80\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.27312499999999995\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=20   samples=40\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.21125\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=2   samples=120\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6208333333333333\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=2   samples=80\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.59375\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=2   samples=40\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.575\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=5   samples=120\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.505\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=5   samples=80\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.44000000000000006\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=5   samples=40\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.43\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=10   samples=120\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.3808333333333333\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=10   samples=80\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.35375\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=10   samples=40\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.23499999999999996\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=20   samples=120\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.30583333333333335\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=20   samples=80\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.25875000000000004\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=20   samples=40\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.17875000000000002\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=2   samples=120\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.675\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=2   samples=80\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.625\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=2   samples=40\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.65\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=5   samples=120\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.3416666666666667\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=5   samples=80\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "10-fold cross val mean accuracy: 0.41\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=5   samples=40\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.37\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=10   samples=120\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.2616666666666667\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=10   samples=80\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.2\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=10   samples=40\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.26999999999999996\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=20   samples=120\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.16374999999999998\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=20   samples=80\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.12562500000000001\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=20   samples=40\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.15\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=2   samples=120\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6625\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=2   samples=80\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.73125\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=2   samples=40\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7875\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=5   samples=120\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.40499999999999997\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=5   samples=80\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.42000000000000004\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=5   samples=40\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.305\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=10   samples=120\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.32166666666666666\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=10   samples=80\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.27625\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=10   samples=40\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.25749999999999995\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=20   samples=120\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.19749999999999998\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=20   samples=80\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.18624999999999997\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=20   samples=40\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.15625\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=2   samples=120\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=2   samples=80\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.69375\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=2   samples=40\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7375\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=5   samples=120\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.42666666666666664\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=5   samples=80\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.4025\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=5   samples=40\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.42000000000000004\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=10   samples=120\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.3241666666666667\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=10   samples=80\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.30125\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=10   samples=40\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.3125\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=20   samples=120\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.23958333333333334\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=20   samples=80\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.216875\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=20   samples=40\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.19250000000000003\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=2   samples=120\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "10-fold cross val mean accuracy: 0.7333333333333333\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=2   samples=80\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6875\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=2   samples=40\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.825\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=5   samples=120\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.43833333333333335\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=5   samples=80\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.42749999999999994\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=5   samples=40\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.36499999999999994\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=10   samples=120\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.345\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=10   samples=80\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.34750000000000003\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=10   samples=40\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.26\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=20   samples=120\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.24083333333333332\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=20   samples=80\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.23625\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=20   samples=40\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.18125000000000002\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=2   samples=120\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7625\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=2   samples=80\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6625\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=2   samples=40\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7125\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=5   samples=120\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.43833333333333335\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=5   samples=80\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.44750000000000006\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=5   samples=40\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.38\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=10   samples=120\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.3441666666666667\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=10   samples=80\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.29500000000000004\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=10   samples=40\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.28500000000000003\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=20   samples=120\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.24\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=20   samples=80\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.24625\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=20   samples=40\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.18\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=2   samples=120\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6916666666666668\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=2   samples=80\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.625\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=2   samples=40\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=5   samples=120\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.37\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=5   samples=80\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.36\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=5   samples=40\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.4\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=10   samples=120\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.265\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=10   samples=80\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.2475\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=10   samples=40\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.29\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=20   samples=120\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "10-fold cross val mean accuracy: 0.18791666666666668\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=20   samples=80\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.16375\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=20   samples=40\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.16250000000000003\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=2   samples=120\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7166666666666666\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=2   samples=80\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.76875\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=2   samples=40\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.65\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=5   samples=120\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.51\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=5   samples=80\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.48999999999999994\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=5   samples=40\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.36\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=10   samples=120\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.35250000000000004\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=10   samples=80\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.34625\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=10   samples=40\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.3175\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=20   samples=120\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.25166666666666665\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=20   samples=80\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.228125\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=20   samples=40\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.17625000000000002\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=2   samples=120\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6875000000000001\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=2   samples=80\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.66875\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=2   samples=40\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6125\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=5   samples=120\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.4416666666666667\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=5   samples=80\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.42000000000000004\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=5   samples=40\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.43499999999999994\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=10   samples=120\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.34833333333333333\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=10   samples=80\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.31\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=10   samples=40\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.27249999999999996\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=20   samples=120\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.24874999999999997\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=20   samples=80\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.26875\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=20   samples=40\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.19749999999999998\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=2   samples=120\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6083333333333333\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=2   samples=80\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5875\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=2   samples=40\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5875\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=5   samples=120\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.45166666666666677\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=5   samples=80\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.45500000000000007\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=5   samples=40\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "10-fold cross val mean accuracy: 0.325\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=10   samples=120\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.4141666666666667\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=10   samples=80\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.35125\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=10   samples=40\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.26\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=20   samples=120\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.3108333333333333\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=20   samples=80\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.27312499999999995\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=20   samples=40\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.21125\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=2   samples=120\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6208333333333333\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=2   samples=80\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.59375\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=2   samples=40\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.575\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=5   samples=120\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.505\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=5   samples=80\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.44000000000000006\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=5   samples=40\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.43\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=10   samples=120\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.3808333333333333\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=10   samples=80\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.35375\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=10   samples=40\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.23499999999999996\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=20   samples=120\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.30583333333333335\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=20   samples=80\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.25875000000000004\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=20   samples=40\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.17875000000000002\n"
     ]
    }
   ],
   "source": [
    "report2_enron = experimento2(enron, enron_POS, K='all')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 261,
   "metadata": {},
   "outputs": [],
   "source": [
    "report2_enron_df = pd.DataFrame(report2_enron)\n",
    "report2_enron_df[\"FE_algorithm n-gram\"] = report2_enron_df.FE_algorithm + '-' + report2_enron_df.n_gram.astype(str)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 262,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>accuracies</th>\n",
       "      <th>n_authors</th>\n",
       "      <th>n_samples</th>\n",
       "      <th>FE_algorithm</th>\n",
       "      <th>n_gram</th>\n",
       "      <th>FE_algorithm n-gram</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0.691667</td>\n",
       "      <td>2</td>\n",
       "      <td>120</td>\n",
       "      <td>Word n-gram</td>\n",
       "      <td>1</td>\n",
       "      <td>Word n-gram-1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0.625000</td>\n",
       "      <td>2</td>\n",
       "      <td>80</td>\n",
       "      <td>Word n-gram</td>\n",
       "      <td>1</td>\n",
       "      <td>Word n-gram-1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0.700000</td>\n",
       "      <td>2</td>\n",
       "      <td>40</td>\n",
       "      <td>Word n-gram</td>\n",
       "      <td>1</td>\n",
       "      <td>Word n-gram-1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>0.370000</td>\n",
       "      <td>5</td>\n",
       "      <td>120</td>\n",
       "      <td>Word n-gram</td>\n",
       "      <td>1</td>\n",
       "      <td>Word n-gram-1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0.360000</td>\n",
       "      <td>5</td>\n",
       "      <td>80</td>\n",
       "      <td>Word n-gram</td>\n",
       "      <td>1</td>\n",
       "      <td>Word n-gram-1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>175</th>\n",
       "      <td>0.353750</td>\n",
       "      <td>10</td>\n",
       "      <td>80</td>\n",
       "      <td>POS n-gram</td>\n",
       "      <td>5</td>\n",
       "      <td>POS n-gram-5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>176</th>\n",
       "      <td>0.235000</td>\n",
       "      <td>10</td>\n",
       "      <td>40</td>\n",
       "      <td>POS n-gram</td>\n",
       "      <td>5</td>\n",
       "      <td>POS n-gram-5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>177</th>\n",
       "      <td>0.305833</td>\n",
       "      <td>20</td>\n",
       "      <td>120</td>\n",
       "      <td>POS n-gram</td>\n",
       "      <td>5</td>\n",
       "      <td>POS n-gram-5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>178</th>\n",
       "      <td>0.258750</td>\n",
       "      <td>20</td>\n",
       "      <td>80</td>\n",
       "      <td>POS n-gram</td>\n",
       "      <td>5</td>\n",
       "      <td>POS n-gram-5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>179</th>\n",
       "      <td>0.178750</td>\n",
       "      <td>20</td>\n",
       "      <td>40</td>\n",
       "      <td>POS n-gram</td>\n",
       "      <td>5</td>\n",
       "      <td>POS n-gram-5</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>180 rows × 6 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "     accuracies  n_authors  n_samples FE_algorithm  n_gram FE_algorithm n-gram\n",
       "0      0.691667          2        120  Word n-gram       1       Word n-gram-1\n",
       "1      0.625000          2         80  Word n-gram       1       Word n-gram-1\n",
       "2      0.700000          2         40  Word n-gram       1       Word n-gram-1\n",
       "3      0.370000          5        120  Word n-gram       1       Word n-gram-1\n",
       "4      0.360000          5         80  Word n-gram       1       Word n-gram-1\n",
       "..          ...        ...        ...          ...     ...                 ...\n",
       "175    0.353750         10         80   POS n-gram       5        POS n-gram-5\n",
       "176    0.235000         10         40   POS n-gram       5        POS n-gram-5\n",
       "177    0.305833         20        120   POS n-gram       5        POS n-gram-5\n",
       "178    0.258750         20         80   POS n-gram       5        POS n-gram-5\n",
       "179    0.178750         20         40   POS n-gram       5        POS n-gram-5\n",
       "\n",
       "[180 rows x 6 columns]"
      ]
     },
     "execution_count": 262,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "report2_enron_df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 235,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>FE_algorithm n-gram</th>\n",
       "      <th>n_gram</th>\n",
       "      <th>accuracies</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Char n-gram-1</td>\n",
       "      <td>1</td>\n",
       "      <td>0.353559</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Char n-gram-2</td>\n",
       "      <td>2</td>\n",
       "      <td>0.392222</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Char n-gram-3</td>\n",
       "      <td>3</td>\n",
       "      <td>0.413941</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Char n-gram-4</td>\n",
       "      <td>4</td>\n",
       "      <td>0.423958</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Char n-gram-5</td>\n",
       "      <td>5</td>\n",
       "      <td>0.416146</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>POS n-gram-1</td>\n",
       "      <td>1</td>\n",
       "      <td>0.371944</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>POS n-gram-2</td>\n",
       "      <td>2</td>\n",
       "      <td>0.430642</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>POS n-gram-3</td>\n",
       "      <td>3</td>\n",
       "      <td>0.409271</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>POS n-gram-4</td>\n",
       "      <td>4</td>\n",
       "      <td>0.402969</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>POS n-gram-5</td>\n",
       "      <td>5</td>\n",
       "      <td>0.406458</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>Word n-gram-1</td>\n",
       "      <td>1</td>\n",
       "      <td>0.371944</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>Word n-gram-2</td>\n",
       "      <td>2</td>\n",
       "      <td>0.430642</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>Word n-gram-3</td>\n",
       "      <td>3</td>\n",
       "      <td>0.409271</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>Word n-gram-4</td>\n",
       "      <td>4</td>\n",
       "      <td>0.402969</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>Word n-gram-5</td>\n",
       "      <td>5</td>\n",
       "      <td>0.406458</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   FE_algorithm n-gram  n_gram  accuracies\n",
       "0        Char n-gram-1       1    0.353559\n",
       "1        Char n-gram-2       2    0.392222\n",
       "2        Char n-gram-3       3    0.413941\n",
       "3        Char n-gram-4       4    0.423958\n",
       "4        Char n-gram-5       5    0.416146\n",
       "5         POS n-gram-1       1    0.371944\n",
       "6         POS n-gram-2       2    0.430642\n",
       "7         POS n-gram-3       3    0.409271\n",
       "8         POS n-gram-4       4    0.402969\n",
       "9         POS n-gram-5       5    0.406458\n",
       "10       Word n-gram-1       1    0.371944\n",
       "11       Word n-gram-2       2    0.430642\n",
       "12       Word n-gram-3       3    0.409271\n",
       "13       Word n-gram-4       4    0.402969\n",
       "14       Word n-gram-5       5    0.406458"
      ]
     },
     "execution_count": 235,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ngram_agg = report2_enron_df.groupby([\"FE_algorithm n-gram\", \"n_gram\"], as_index=False).accuracies.mean()\n",
    "ngram_agg"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 236,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0.5, 1.0, 'Enron')"
      ]
     },
     "execution_count": 236,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 576x576 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "\n",
    "g1 = sns.lineplot(data=ngram_agg, y=\"accuracies\", x=\"n_gram\", hue=\"FE_algorithm n-gram\", ci=None)\n",
    "# g1.set_xticklabels(labels=report2_enron_df[\"n_gram\"].unique())\n",
    "g1.set_title(\"Enron\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 226,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=2   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.99\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=2   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 1.0\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=2   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 1.0\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=2   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 1.0\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=2   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 1.0\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=3   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9666666666666666\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=3   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9866666666666667\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=3   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9916666666666666\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=3   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9966666666666667\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=3   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9966666666666667\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=4   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9799999999999999\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=4   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9925\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=4   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9974999999999999\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=4   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9991666666666668\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=4   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9970000000000001\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=5   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9719999999999999\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=5   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.998\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=5   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.999\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=5   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 1.0\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=5   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9987999999999999\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=6   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9766666666666668\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=6   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9949999999999999\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=6   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9983333333333334\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=6   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9977777777777778\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=6   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9986666666666666\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=7   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9857142857142858\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=7   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9914285714285714\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=7   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9957142857142859\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=7   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9966666666666667\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=7   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.998\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=8   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9200000000000002\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=8   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "10-fold cross val mean accuracy: 0.9600000000000002\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=8   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9700000000000001\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=8   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9783333333333333\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=8   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.99025\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=9   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9444444444444444\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=9   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9577777777777777\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=9   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9733333333333333\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=9   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9862962962962964\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=9   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9882222222222223\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=10   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9400000000000002\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=10   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9479999999999998\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=10   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.983\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=10   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.984\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=10   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9882\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=11   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8818181818181818\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=11   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9245454545454544\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=11   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9586363636363636\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=11   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9703030303030303\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=11   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9785454545454545\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=12   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.885\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=12   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9208333333333334\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=12   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9391666666666667\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=12   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9583333333333333\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=12   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9745000000000001\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=13   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8314285714285715\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=13   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8635714285714287\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=13   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8942857142857144\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=13   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9097619047619047\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=13   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9324285714285713\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=14   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7933333333333333\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=14   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8526666666666667\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=14   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8843333333333334\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=14   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "10-fold cross val mean accuracy: 0.9075555555555557\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=14   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9223999999999999\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=15   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8150000000000001\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=15   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8549999999999999\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=15   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8928125\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=15   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9127083333333333\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=15   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.933\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=16   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8223529411764705\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=16   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8423529411764706\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=16   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8855882352941176\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=16   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9017647058823529\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=16   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9228235294117647\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=17   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=17   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8336842105263159\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=17   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8860526315789474\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=17   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9094736842105263\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=17   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9287368421052632\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=18   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7949999999999999\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=18   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8550000000000001\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=18   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8962499999999999\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=18   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9093333333333332\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=18   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9285000000000002\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=19   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7914285714285715\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=19   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8109523809523809\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=19   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8685714285714287\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=19   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8931746031746032\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=19   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9127619047619048\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=20   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7554545454545456\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=20   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8300000000000001\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=20   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8556818181818182\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=20   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8878787878787879\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=20   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9079090909090908\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=21   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "10-fold cross val mean accuracy: 0.7434782608695654\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=21   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8191304347826087\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=21   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8652173913043478\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=21   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8959420289855073\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=21   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9134782608695653\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=22   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7558333333333332\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=22   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8133333333333332\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=22   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8706249999999999\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=22   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8841666666666667\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=22   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9093333333333333\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=23   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7272\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=23   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8112\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=23   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8550000000000001\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=23   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8765333333333333\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=23   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.89936\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=24   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7246153846153847\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=24   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8084615384615385\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=24   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8528846153846154\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=24   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8761538461538463\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=24   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8921538461538463\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=25   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7585185185185186\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=25   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.818888888888889\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=25   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8535185185185185\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=25   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8800000000000001\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=25   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8962962962962961\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=26   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7571428571428571\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=26   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8214285714285714\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=26   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8524999999999998\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=26   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8765476190476191\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=26   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9035\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=27   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.733103448275862\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=27   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7979310344827586\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=27   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "10-fold cross val mean accuracy: 0.8468965517241379\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=27   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8690804597701149\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=27   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8924827586206897\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=28   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7533333333333334\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=28   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8009999999999999\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=28   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8473333333333335\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=28   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.866888888888889\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=28   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8909333333333335\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=29   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7361290322580645\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=29   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8006451612903227\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=29   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8535483870967742\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=29   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8695698924731182\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=29   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8873548387096774\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=30   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.744375\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=30   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8012500000000001\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=30   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.83515625\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=30   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8643750000000001\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=30   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8897499999999999\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=31   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7248484848484849\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=31   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7721212121212122\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=31   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8253030303030304\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=31   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8538383838383838\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=31   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8735757575757575\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=32   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.721764705882353\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=32   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7838235294117647\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=32   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8282352941176472\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=32   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8449019607843138\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=32   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8728235294117648\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=33   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7234285714285714\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=33   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7642857142857143\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=33   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8145714285714284\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=33   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8406666666666667\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=33   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "10-fold cross val mean accuracy: 0.8681142857142857\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=34   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7055555555555555\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=34   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7772222222222223\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=34   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.81375\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=34   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8469444444444443\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=34   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8683888888888889\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=35   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6918918918918919\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=35   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7524324324324324\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=35   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8083783783783784\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=35   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8333333333333334\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=35   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8598918918918919\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=36   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6894736842105263\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=36   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7307894736842107\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=36   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8039473684210527\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=36   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8286842105263158\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=36   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.858157894736842\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=37   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7174358974358974\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=37   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7487179487179487\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=37   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8074358974358974\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=37   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8304273504273503\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=37   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8609743589743589\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=38   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6875\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=38   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.74925\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=38   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8025\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=38   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8306666666666667\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=38   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.86365\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=39   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6741463414634146\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=39   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.734390243902439\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=39   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7836585365853658\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=39   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8244715447154471\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=39   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8546829268292683\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=40   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6842857142857144\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=40   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "10-fold cross val mean accuracy: 0.7273809523809525\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=40   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7885714285714285\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=40   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8248412698412698\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=40   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.851047619047619\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=41   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6441860465116279\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=41   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7274418604651164\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=41   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7753488372093024\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=41   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8091472868217056\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=41   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8393953488372092\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=42   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6463636363636364\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=42   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7043181818181818\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=42   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7693181818181819\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=42   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.795530303030303\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=42   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8321363636363636\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=43   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6635555555555557\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=43   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6991111111111111\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=43   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7553333333333333\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=43   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7971851851851851\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=43   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8227111111111111\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=44   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6134782608695651\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=44   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6891304347826086\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=44   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7489130434782608\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=44   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7785507246376812\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=44   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8181739130434783\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=45   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6493617021276595\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=45   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6857446808510639\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=45   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7523404255319148\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=45   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7868794326241134\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=45   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8093617021276597\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=46   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6208333333333333\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=46   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.685\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=46   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.735\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=46   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "10-fold cross val mean accuracy: 0.7690277777777779\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=46   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7995416666666666\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=47   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.616734693877551\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=47   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6775510204081633\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=47   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7342857142857142\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=47   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7661224489795919\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=47   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8002857142857142\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=48   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5952\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=48   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6676\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=48   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.732\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=48   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7531333333333334\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=48   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7877599999999999\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=49   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6066666666666667\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=49   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6588235294117648\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=49   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7207843137254902\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=49   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7454248366013072\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "1-gram    authors=49   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7762352941176471\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=2   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9400000000000001\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=2   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.99\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=2   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 1.0\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=2   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 1.0\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=2   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 1.0\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=3   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9533333333333334\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=3   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.97\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=3   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9866666666666666\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=3   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9911111111111112\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=3   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.99\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=4   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9649999999999999\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=4   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9799999999999999\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=4   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9875\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=4   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9908333333333333\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=4   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9955\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=5   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.976\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=5   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "10-fold cross val mean accuracy: 0.982\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=5   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.993\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=5   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.99\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=5   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9936\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=6   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9533333333333334\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=6   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9783333333333332\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=6   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9908333333333333\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=6   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9949999999999999\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=6   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9916666666666666\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=7   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9428571428571428\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=7   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9814285714285715\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=7   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9871428571428572\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=7   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9914285714285714\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=7   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.995142857142857\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=8   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8825\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=8   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9262499999999999\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=8   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9637500000000001\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=8   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9779166666666667\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=8   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9877499999999999\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=9   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8844444444444445\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=9   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9422222222222223\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=9   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9744444444444443\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=9   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9781481481481482\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=9   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9868888888888889\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=10   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8939999999999999\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=10   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.945\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=10   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9584999999999999\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=10   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9776666666666667\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=10   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9875999999999999\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=11   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8636363636363636\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=11   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8963636363636365\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=11   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9372727272727271\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=11   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "10-fold cross val mean accuracy: 0.9524242424242425\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=11   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9701818181818181\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=12   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.845\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=12   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8941666666666668\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=12   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9304166666666667\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=12   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9419444444444445\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=12   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9608333333333332\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=13   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7371428571428571\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=13   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8435714285714285\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=13   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8760714285714286\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=13   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8883333333333333\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=13   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9262857142857142\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=14   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7653333333333333\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=14   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8099999999999999\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=14   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.867\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=14   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8844444444444444\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=14   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9219999999999999\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=15   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7625\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=15   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.828125\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=15   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.868125\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=15   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8875\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=15   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.915125\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=16   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7364705882352942\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=16   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8017647058823529\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=16   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8570588235294118\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=16   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8866666666666667\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=16   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9052941176470588\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=17   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7263157894736841\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=17   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7831578947368422\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=17   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8552631578947368\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=17   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8757894736842106\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=17   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9069473684210527\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=18   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "10-fold cross val mean accuracy: 0.733\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=18   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8145\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=18   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.86425\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=18   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.885\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=18   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9129000000000002\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=19   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6866666666666668\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=19   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7819047619047618\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=19   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8288095238095238\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=19   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.868095238095238\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=19   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8904761904761905\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=20   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6981818181818182\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=20   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7613636363636365\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=20   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8084090909090909\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=20   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8454545454545455\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=20   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8778181818181819\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=21   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6773913043478261\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=21   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7660869565217391\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=21   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8191304347826087\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=21   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8431884057971013\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=21   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.880695652173913\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=22   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7091666666666667\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=22   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7725\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=22   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8285416666666666\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=22   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8558333333333333\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=22   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8860833333333333\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=23   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6975999999999999\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=23   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7448\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=23   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8088000000000001\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=23   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8390666666666666\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=23   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.87104\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=24   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6707692307692308\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=24   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7407692307692308\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=24   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "10-fold cross val mean accuracy: 0.8061538461538461\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=24   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8374358974358975\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=24   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8716153846153846\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=25   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.717037037037037\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=25   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.745925925925926\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=25   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8085185185185185\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=25   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8435802469135802\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=25   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8712592592592593\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=26   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.697857142857143\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=26   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7660714285714285\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=26   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8153571428571429\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=26   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8476190476190476\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=26   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8800714285714285\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=27   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6903448275862069\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=27   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7362068965517242\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=27   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7974137931034483\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=27   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8302298850574712\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=27   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8569655172413795\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=28   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6766666666666666\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=28   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7386666666666667\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=28   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7985\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=28   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8314444444444445\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=28   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8595333333333333\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=29   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.692258064516129\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=29   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7422580645161291\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=29   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8088709677419355\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=29   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.833010752688172\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=29   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8673548387096774\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=30   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.675625\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=30   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.73375\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=30   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.78765625\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=30   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8217708333333335\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=30   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "10-fold cross val mean accuracy: 0.8559375000000001\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=31   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6618181818181819\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=31   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7081818181818181\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=31   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7722727272727272\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=31   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8052525252525253\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=31   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8372121212121213\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=32   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6664705882352943\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=32   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7205882352941176\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=32   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7785294117647059\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=32   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8008823529411766\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=32   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8367647058823529\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=33   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6405714285714286\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=33   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6937142857142857\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=33   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7594285714285715\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=33   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7915238095238096\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=33   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8276\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=34   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.64\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=34   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7244444444444444\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=34   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7681944444444444\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=34   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7925\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=34   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8260555555555555\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=35   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6427027027027028\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=35   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7002702702702702\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=35   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7568918918918918\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=35   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7790090090090089\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=35   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8217837837837838\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=36   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6363157894736842\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=36   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6768421052631579\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=36   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7477631578947369\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=36   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.775\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=36   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8149999999999998\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=37   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6410256410256412\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=37   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "10-fold cross val mean accuracy: 0.6943589743589744\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=37   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.743974358974359\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=37   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7747008547008546\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=37   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8133333333333332\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=38   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.616\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=38   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6885000000000001\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=38   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7471250000000002\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=38   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7845833333333333\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=38   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.81585\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=39   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6136585365853657\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=39   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6924390243902439\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=39   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7396341463414635\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=39   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7753658536585366\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=39   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8101951219512197\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=40   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.628095238095238\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=40   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6978571428571428\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=40   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7454761904761904\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=40   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7765873015873015\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=40   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8135714285714284\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=41   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6069767441860464\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=41   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6665116279069767\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=41   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7294186046511628\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=41   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7538759689922481\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=41   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7943255813953488\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=42   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5800000000000001\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=42   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6495454545454545\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=42   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7115909090909092\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=42   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7505303030303029\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=42   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7886818181818182\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=43   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5853333333333334\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=43   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6426666666666666\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=43   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7051111111111112\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=43   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "10-fold cross val mean accuracy: 0.7376296296296296\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=43   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7809777777777778\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=44   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5695652173913044\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=44   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6300000000000001\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=44   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6909782608695652\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=44   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7315217391304347\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=44   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7734347826086957\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=45   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5753191489361703\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=45   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.637872340425532\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=45   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6892553191489361\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=45   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7291489361702127\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=45   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7719574468085107\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=46   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5608333333333333\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=46   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6312500000000001\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=46   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6784375\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=46   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7165277777777778\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=46   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7544166666666666\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=47   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5812244897959185\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=47   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6259183673469388\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=47   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6905102040816326\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=47   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7124489795918367\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=47   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7582448979591837\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=48   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5544\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=48   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6148\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=48   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6676000000000001\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=48   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7020666666666667\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=48   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7449200000000001\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=49   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5596078431372549\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=49   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5952941176470589\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=49   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6666666666666667\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=49   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6947058823529412\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "2-gram    authors=49   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7336078431372548\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=2   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8600000000000001\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=2   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.95\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=2   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "10-fold cross val mean accuracy: 0.9974999999999999\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=2   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 1.0\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=2   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 1.0\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=3   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6866666666666666\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=3   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7033333333333334\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=3   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8400000000000001\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=3   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8777777777777777\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=3   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8853333333333333\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=4   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7150000000000001\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=4   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7875\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=4   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.865\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=4   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.885\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=4   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9260000000000002\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=5   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.764\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=5   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.808\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=5   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.897\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=5   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.914\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=5   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9388\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=6   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7766666666666667\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=6   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8733333333333333\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=6   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9116666666666665\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=6   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9305555555555556\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=6   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9383333333333332\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=7   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7885714285714286\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=7   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.832857142857143\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=7   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8664285714285714\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=7   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8933333333333333\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=7   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9202857142857143\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=8   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7024999999999999\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=8   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7987500000000001\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=8   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8618750000000001\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=8   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8862500000000001\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=8   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "10-fold cross val mean accuracy: 0.92025\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=9   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7222222222222223\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=9   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8011111111111111\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=9   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8761111111111111\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=9   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8903703703703704\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=9   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9215555555555556\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=10   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.724\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=10   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.808\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=10   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8594999999999999\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=10   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8813333333333334\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=10   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9168000000000001\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=11   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.750909090909091\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=11   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7918181818181818\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=11   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8536363636363635\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=11   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8903030303030303\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=11   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9132727272727272\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=12   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6766666666666667\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=12   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7783333333333333\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=12   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8200000000000001\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=12   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8613888888888889\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=12   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8881666666666668\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=13   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5842857142857142\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=13   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6814285714285714\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=13   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7792857142857144\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=13   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8061904761904761\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=13   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.847857142857143\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=14   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5986666666666667\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=14   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6900000000000001\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=14   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7619999999999999\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=14   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8068888888888889\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=14   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8493333333333334\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=15   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.64875\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=15   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "10-fold cross val mean accuracy: 0.6875000000000001\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=15   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7790625\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=15   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7975\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=15   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.850875\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=16   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5541176470588235\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=16   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.67\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=16   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7294117647058824\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=16   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7686274509803921\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=16   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8281176470588235\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=17   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5894736842105263\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=17   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6794736842105263\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=17   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7644736842105263\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=17   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7931578947368422\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=17   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8423157894736842\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=18   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6020000000000001\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=18   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7015\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=18   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.78675\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=18   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8078333333333333\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=18   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8541000000000001\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=19   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5885714285714284\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=19   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6761904761904762\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=19   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7533333333333333\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=19   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7820634920634921\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=19   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8304761904761904\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=20   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5854545454545453\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=20   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6463636363636363\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=20   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7302272727272727\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=20   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7701515151515151\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=20   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.808\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=21   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5765217391304348\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=21   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6717391304347826\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=21   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7523913043478261\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=21   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "10-fold cross val mean accuracy: 0.7752173913043479\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=21   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8176521739130435\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=22   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6066666666666667\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=22   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6733333333333333\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=22   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7416666666666668\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=22   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7779166666666667\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=22   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8184166666666668\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=23   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5824\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=23   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6492\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=23   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7276\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=23   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7605333333333334\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=23   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.81056\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=24   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.536923076923077\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=24   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6496153846153847\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=24   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7107692307692307\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=24   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7615384615384615\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=24   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8013846153846153\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=25   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5851851851851851\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=25   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.65\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=25   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7300000000000001\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=25   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7553086419753086\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=25   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8031111111111111\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=26   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5914285714285714\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=26   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.665\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=26   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7380357142857144\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=26   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7715476190476191\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=26   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8070714285714284\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=27   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5896551724137931\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=27   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6344827586206897\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=27   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.71\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=27   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7547126436781608\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=27   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7977241379310345\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=28   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "10-fold cross val mean accuracy: 0.5733333333333334\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=28   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.651\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=28   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7245\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=28   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7556666666666667\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=28   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7975333333333333\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=29   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5974193548387097\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=29   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6645161290322581\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=29   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7275806451612903\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=29   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7677419354838709\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=29   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8065161290322582\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=30   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.583125\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=30   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6553125\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=30   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.71640625\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=30   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7474999999999999\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=30   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7993125\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=31   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5830303030303031\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=31   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6366666666666667\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=31   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6968181818181819\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=31   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7364646464646464\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=31   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7756969696969696\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=32   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5723529411764705\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=32   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6470588235294117\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=32   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7017647058823528\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=32   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7399019607843138\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=32   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7812941176470588\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=33   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5485714285714285\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=33   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6308571428571428\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=33   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6834285714285715\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=33   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7206666666666666\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=33   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7642857142857145\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=34   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5783333333333333\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=34   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6227777777777778\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=34   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "10-fold cross val mean accuracy: 0.6945833333333333\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=34   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7304629629629629\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=34   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7703333333333333\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=35   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5664864864864865\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=35   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6191891891891894\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=35   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6851351351351351\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=35   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7148648648648649\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=35   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7598378378378379\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=36   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5547368421052632\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=36   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6023684210526317\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=36   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.667763157894737\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=36   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6992105263157894\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=36   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7483684210526316\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=37   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5317948717948717\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=37   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5992307692307692\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=37   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6580769230769231\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=37   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6982051282051283\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=37   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7416410256410256\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=38   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5295\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=38   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6119999999999999\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=38   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6612500000000001\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=38   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7042499999999999\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=38   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.74645\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=39   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5224390243902439\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=39   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5887804878048779\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=39   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6525609756097561\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=39   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6895934959349592\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=39   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7368780487804878\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=40   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5323809523809524\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=40   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5883333333333333\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=40   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6622619047619047\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=40   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6926190476190477\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=40   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "10-fold cross val mean accuracy: 0.7408095238095238\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=41   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5069767441860464\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=41   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5816279069767443\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=41   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6401162790697674\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=41   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6782170542635658\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=41   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.728046511627907\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=42   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5036363636363635\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=42   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5674999999999999\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=42   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6323863636363637\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=42   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6587878787878788\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=42   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7147272727272727\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=43   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.4906666666666667\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=43   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5542222222222223\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=43   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6214444444444445\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=43   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6585185185185185\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=43   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7056444444444444\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=44   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.48478260869565215\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=44   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.551304347826087\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=44   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6133695652173914\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=44   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6440579710144927\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=44   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7024782608695652\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=45   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.49191489361702123\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=45   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5559574468085107\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=45   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.615\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=45   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6475177304964539\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=45   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7000851063829787\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=46   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.4987500000000001\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=46   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5495833333333333\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=46   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6041666666666667\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=46   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6374305555555555\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=46   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.689875\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=47   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.4902040816326531\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=47   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "10-fold cross val mean accuracy: 0.5563265306122449\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=47   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6071428571428571\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=47   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6395238095238096\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=47   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6904489795918367\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=48   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.4808\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=48   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5342\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=48   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5944\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=48   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6275999999999999\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=48   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6711600000000001\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=49   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.49333333333333335\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=49   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5284313725490196\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=49   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5870588235294116\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=49   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6285620915032679\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "3-gram    authors=49   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6668627450980392\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=2   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.78\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=2   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9400000000000001\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=2   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.99\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=2   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9983333333333334\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=2   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 1.0\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=3   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6066666666666666\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=3   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6666666666666666\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=3   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.745\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=3   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7511111111111111\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=3   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7893333333333332\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=4   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.58\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=4   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.72\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=4   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7762500000000001\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=4   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8150000000000001\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=4   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8275\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=5   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6799999999999999\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=5   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=5   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8249999999999998\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=5   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "10-fold cross val mean accuracy: 0.8446666666666667\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=5   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.868\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=6   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.75\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=6   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8133333333333332\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=6   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.845\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=6   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8727777777777778\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=6   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8883333333333333\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=7   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7142857142857143\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=7   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7614285714285713\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=7   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8442857142857143\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=7   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8442857142857143\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=7   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.866\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=8   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.635\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=8   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7350000000000001\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=8   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.803125\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=8   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8245833333333333\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=8   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8625\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=9   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6844444444444445\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=9   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7511111111111111\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=9   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8111111111111111\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=9   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8337037037037037\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=9   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8713333333333333\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=10   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6799999999999999\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=10   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7329999999999999\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=10   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=10   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8156666666666667\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=10   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8593999999999999\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=11   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6600000000000001\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=11   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7554545454545455\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=11   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8004545454545454\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=11   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8400000000000001\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=11   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8647272727272727\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=12   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "10-fold cross val mean accuracy: 0.615\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=12   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6950000000000001\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=12   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7583333333333333\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=12   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8002777777777779\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=12   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8251666666666667\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=13   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=13   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6235714285714286\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=13   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.697857142857143\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=13   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7204761904761905\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=13   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7881428571428571\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=14   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5613333333333334\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=14   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6153333333333334\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=14   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7076666666666667\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=14   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7468888888888888\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=14   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7889333333333333\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=15   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5525\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=15   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6175\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=15   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6871875\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=15   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7322916666666666\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=15   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7783749999999999\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=16   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5152941176470588\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=16   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6041176470588235\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=16   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6602941176470589\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=16   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6945098039215687\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=16   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7504705882352941\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=17   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.4968421052631579\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=17   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5910526315789475\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=17   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6831578947368422\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=17   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7215789473684209\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=17   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7689473684210526\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=18   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.545\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=18   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6050000000000001\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=18   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "10-fold cross val mean accuracy: 0.6984999999999999\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=18   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7448333333333333\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=18   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7876\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=19   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.519047619047619\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=19   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5928571428571429\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=19   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6738095238095239\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=19   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7136507936507936\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=19   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7653333333333334\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=20   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.4954545454545455\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=20   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5713636363636364\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=20   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6609090909090909\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=20   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6978787878787879\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=20   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7520909090909091\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=21   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5391304347826087\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=21   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6069565217391304\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=21   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6789130434782609\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=21   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7191304347826087\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=21   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7551304347826087\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=22   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5383333333333333\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=22   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.62375\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=22   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6760416666666667\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=22   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7134722222222222\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=22   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7585\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=23   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5256000000000001\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=23   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.594\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=23   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6652\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=23   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6958666666666667\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=23   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7488\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=24   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5115384615384615\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=24   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5873076923076922\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=24   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6496153846153845\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=24   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.684871794871795\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=24   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "10-fold cross val mean accuracy: 0.736\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=25   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5362962962962963\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=25   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5911111111111111\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=25   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6681481481481483\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=25   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7019753086419753\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=25   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7331851851851853\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=26   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.535\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=26   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6025\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=26   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6794642857142856\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=26   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7157142857142857\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=26   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7449285714285715\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=27   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5317241379310345\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=27   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5793103448275863\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=27   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6537931034482759\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=27   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.682528735632184\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=27   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.726551724137931\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=28   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5193333333333333\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=28   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5876666666666666\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=28   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6586666666666667\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=28   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6900000000000001\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=28   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7343333333333334\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=29   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.52\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=29   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6019354838709677\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=29   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.670483870967742\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=29   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.698494623655914\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=29   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7430322580645161\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=30   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.520625\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=30   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5940624999999999\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=30   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6576562499999999\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=30   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6797916666666668\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=30   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.732625\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=31   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5084848484848485\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=31   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "10-fold cross val mean accuracy: 0.5709090909090909\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=31   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.635\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=31   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6687878787878788\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=31   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.726\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=32   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5205882352941176\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=32   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5626470588235294\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=32   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.636029411764706\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=32   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6749019607843139\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=32   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7193529411764705\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=33   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.484\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=33   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5662857142857143\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=33   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6214285714285716\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=33   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6507619047619049\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=33   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6985714285714286\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=34   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5172222222222221\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=34   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.573611111111111\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=34   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6348611111111111\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=34   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6667592592592593\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=34   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.710388888888889\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=35   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.49513513513513513\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=35   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5497297297297298\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=35   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6182432432432432\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=35   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6550450450450451\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=35   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7005945945945945\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=36   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.47842105263157897\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=36   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5478947368421052\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=36   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5992105263157894\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=36   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6396491228070176\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=36   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6917368421052632\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=37   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.4666666666666667\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=37   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.525128205128205\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=37   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.585\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=37   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "10-fold cross val mean accuracy: 0.6282051282051282\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=37   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6752307692307692\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=38   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.44750000000000006\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=38   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5349999999999999\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=38   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5891250000000001\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=38   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6306666666666667\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=38   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6746000000000001\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=39   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.4497560975609757\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=39   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5239024390243902\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=39   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.583170731707317\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=39   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6244715447154473\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=39   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6635121951219511\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=40   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.4633333333333334\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=40   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5302380952380952\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=40   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5905952380952381\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=40   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6250793650793651\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=40   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6682380952380953\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=41   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.45162790697674415\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=41   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5209302325581395\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=41   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5774418604651163\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=41   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6017829457364341\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=41   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6569767441860466\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=42   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.4486363636363636\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=42   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.49886363636363634\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=42   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5673863636363636\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=42   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5965151515151516\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=42   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6494545454545455\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=43   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.4235555555555556\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=43   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.4966666666666667\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=43   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5553333333333332\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=43   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5914074074074074\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=43   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6412888888888888\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=44   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "10-fold cross val mean accuracy: 0.42391304347826086\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=44   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.4819565217391304\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=44   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5459782608695651\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=44   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5750724637681159\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=44   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6271304347826088\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=45   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.4408510638297873\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=45   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.4938297872340425\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=45   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5467021276595745\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=45   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5851063829787233\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=45   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6333191489361701\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=46   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.42749999999999994\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=46   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.48125\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=46   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5447916666666668\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=46   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5707638888888888\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=46   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6223749999999999\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=47   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.4204081632653061\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=47   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.49326530612244907\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=47   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5382653061224489\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=47   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5714285714285714\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=47   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6228979591836735\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=48   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.40360000000000007\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=48   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.4654\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=48   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5242000000000001\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=48   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5620666666666667\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=48   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.60964\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=49   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.4141176470588235\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=49   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.4723529411764706\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=49   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5317647058823529\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=49   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5626143790849673\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "4-gram    authors=49   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6058039215686274\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=2   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.82\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=2   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9299999999999999\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=2   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "10-fold cross val mean accuracy: 0.99\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=2   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9983333333333334\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=2   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 1.0\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=3   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5199999999999999\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=3   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6366666666666665\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=3   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6900000000000001\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=3   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7011111111111111\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=3   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7366666666666666\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=4   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.575\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=4   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6625000000000001\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=4   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7675000000000001\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=4   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7575\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=4   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7925000000000001\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=5   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5440000000000002\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=5   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=5   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.77\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=5   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8073333333333332\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=5   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8276\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=6   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5599999999999999\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=6   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7033333333333334\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=6   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7733333333333334\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=6   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8233333333333333\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=6   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8546666666666667\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=7   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5485714285714286\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=7   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6457142857142857\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=7   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7378571428571429\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=7   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7923809523809524\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=7   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7994285714285714\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=8   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5075000000000001\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=8   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.625\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=8   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7125000000000001\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=8   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7675\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=8   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "10-fold cross val mean accuracy: 0.7975000000000001\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=9   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5222222222222221\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=9   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.65\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=9   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7227777777777779\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=9   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.767037037037037\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=9   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7988888888888889\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=10   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.554\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=10   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6239999999999999\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=10   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7115\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=10   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7470000000000001\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=10   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7911999999999999\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=11   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5181818181818182\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=11   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6827272727272728\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=11   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7340909090909091\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=11   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7609090909090909\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=11   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.801090909090909\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=12   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.4966666666666667\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=12   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.585\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=12   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6637500000000001\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=12   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7188888888888889\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=12   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7623333333333333\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=13   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.4128571428571429\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=13   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5392857142857144\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=13   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6275\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=13   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6745238095238096\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=13   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.722\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=14   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.37466666666666665\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=14   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5186666666666666\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=14   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6309999999999999\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=14   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6493333333333333\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=14   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7217333333333334\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=15   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.3975\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=15   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "10-fold cross val mean accuracy: 0.5043749999999999\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=15   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5778125000000001\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=15   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6385416666666666\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=15   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6885000000000001\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=16   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.3682352941176471\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=16   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.4758823529411765\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=16   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5773529411764705\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=16   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.622156862745098\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=16   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6647058823529411\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=17   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.4094736842105263\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=17   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5031578947368421\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=17   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.611578947368421\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=17   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6433333333333333\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=17   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6902105263157894\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=18   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.41000000000000003\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=18   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5319999999999999\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=18   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.63025\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=18   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6611666666666667\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=18   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7056999999999999\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=19   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.4152380952380953\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=19   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5204761904761904\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=19   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5985714285714285\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=19   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6380952380952382\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=19   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6932380952380953\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=20   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.41454545454545455\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=20   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.51\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=20   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5797727272727273\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=20   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6278787878787878\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=20   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.675909090909091\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=21   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.4130434782608695\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=21   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5330434782608696\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=21   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5995652173913044\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=21   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "10-fold cross val mean accuracy: 0.6368115942028985\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=21   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6840869565217391\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=22   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.38166666666666665\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=22   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.49958333333333327\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=22   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5868749999999999\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=22   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6273611111111113\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=22   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.675\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=23   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.3984\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=23   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.4896\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=23   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5730000000000001\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=23   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6173333333333334\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=23   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6571999999999999\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=24   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.3584615384615385\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=24   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.4661538461538462\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=24   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5557692307692308\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=24   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5997435897435897\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=24   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6438461538461537\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=25   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.3977777777777778\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=25   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.4681481481481481\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=25   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5433333333333333\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=25   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5944444444444444\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=25   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6431851851851851\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=26   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.41\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=26   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.4828571428571428\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=26   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5646428571428572\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=26   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6046428571428573\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=26   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6498571428571429\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=27   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.3682758620689655\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=27   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.463448275862069\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=27   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5551724137931033\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=27   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5880459770114943\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=27   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6346206896551724\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=28   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "10-fold cross val mean accuracy: 0.384\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=28   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.4836666666666666\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=28   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5523333333333333\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=28   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5991111111111111\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=28   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6478666666666667\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=29   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.35741935483870974\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=29   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.46322580645161293\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=29   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5529032258064517\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=29   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5898924731182796\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=29   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6425161290322581\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=30   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.354375\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=30   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.44781249999999995\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=30   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.53671875\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=30   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5848958333333334\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=30   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6407499999999999\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=31   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.34181818181818185\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=31   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.44333333333333336\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=31   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5306060606060605\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=31   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5781818181818181\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=31   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.625090909090909\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=32   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.35470588235294115\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=32   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.4367647058823529\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=32   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5180882352941176\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=32   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5567647058823529\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=32   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6211176470588236\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=33   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.33657142857142863\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=33   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.43314285714285716\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=33   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5077142857142857\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=33   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5527619047619048\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=33   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6095999999999999\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=34   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.3394444444444445\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=34   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.4113888888888889\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=34   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "10-fold cross val mean accuracy: 0.49430555555555555\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=34   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.532037037037037\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=34   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5872222222222222\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=35   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.3356756756756757\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=35   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.3991891891891892\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=35   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.48797297297297293\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=35   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5183783783783783\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=35   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5755135135135137\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=36   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.31526315789473686\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=36   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.3810526315789474\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=36   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.47618421052631577\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=36   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5085964912280703\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=36   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5715263157894737\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=37   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.2994871794871795\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=37   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.3792307692307692\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=37   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.4541025641025641\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=37   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5013675213675214\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=37   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5536410256410257\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=38   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.308\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=38   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.38975\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=38   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.46825\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=38   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5003333333333333\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=38   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5523\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=39   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.2951219512195122\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=39   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.37609756097560976\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=39   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.4486585365853658\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=39   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.4963414634146341\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=39   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5453658536585367\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=40   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.2866666666666667\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=40   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.3742857142857143\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=40   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.44857142857142857\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=40   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.49142857142857144\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=40   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "10-fold cross val mean accuracy: 0.5415238095238095\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=41   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.2813953488372093\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=41   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.3751162790697674\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=41   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.43767441860465117\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=41   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.4824031007751938\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=41   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5297674418604651\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=42   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.2918181818181818\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=42   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.3577272727272727\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=42   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.4335227272727272\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=42   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.4713636363636364\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=42   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5262727272727272\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=43   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.27999999999999997\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=43   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.3508888888888889\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=43   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.4272222222222222\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=43   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.46281481481481485\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=43   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5130222222222223\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=44   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.2904347826086956\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=44   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.346304347826087\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=44   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.4156521739130435\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=44   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.4552173913043479\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=44   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5148695652173914\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=45   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.2731914893617021\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=45   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.33680851063829786\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=45   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.4149999999999999\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=45   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.45567375886524825\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=45   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5085106382978724\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=46   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.2575\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=46   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.3414583333333333\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=46   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.40531249999999996\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=46   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.4459722222222222\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=46   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5020833333333333\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=47   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.2653061224489796\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=47   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "10-fold cross val mean accuracy: 0.3287755102040816\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=47   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.40193877551020407\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=47   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.44523809523809527\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=47   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5037551020408163\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=48   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.2684\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=48   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.31759999999999994\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=48   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.3949\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=48   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.4334666666666667\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=48   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.48600000000000004\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=49   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.25450980392156863\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=49   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.32705882352941174\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=49   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.3949019607843137\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=49   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.4344444444444445\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_word_ngram\n",
      "5-gram    authors=49   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.490078431372549\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=2   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8800000000000001\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=2   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9199999999999999\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=2   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.915\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=2   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9316666666666666\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=2   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.932\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=3   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9133333333333334\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=3   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9200000000000002\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=3   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9383333333333332\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=3   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9511111111111111\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=3   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9486666666666667\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=4   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.915\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=4   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9225\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=4   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9525\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=4   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.96\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=4   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.958\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=5   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=5   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9480000000000001\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=5   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9599999999999997\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=5   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "10-fold cross val mean accuracy: 0.9626666666666667\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=5   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9607999999999999\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=6   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9466666666666667\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=6   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9599999999999997\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=6   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9558333333333332\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=6   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9583333333333333\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=6   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9683333333333334\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=7   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8742857142857143\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=7   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=7   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9214285714285715\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=7   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9238095238095239\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=7   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9354285714285714\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=8   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8099999999999999\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=8   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.835\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=8   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.853125\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=8   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8745833333333334\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=8   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.882\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=9   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8177777777777777\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=9   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8444444444444444\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=9   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.875\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=9   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8796296296296295\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=9   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8875555555555555\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=10   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8200000000000001\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=10   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.851\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=10   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8685\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=10   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8766666666666666\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=10   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8808\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=11   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7909090909090909\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=11   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8272727272727274\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=11   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8654545454545453\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=11   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.856969696969697\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=11   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.852909090909091\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=12   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "10-fold cross val mean accuracy: 0.805\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=12   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8116666666666668\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=12   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8320833333333335\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=12   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8305555555555555\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=12   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8376666666666666\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=13   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6857142857142857\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=13   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7250000000000001\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=13   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7439285714285715\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=13   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.75\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=13   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7531428571428572\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=14   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6786666666666668\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=14   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.732\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=14   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7543333333333333\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=14   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7508888888888888\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=14   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7625333333333333\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=15   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.72375\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=15   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7462500000000001\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=15   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7596875\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=15   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7720833333333333\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=15   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.771\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=16   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=16   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7170588235294117\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=16   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7329411764705883\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=16   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7384313725490197\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=16   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7507058823529411\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=17   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6284210526315789\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=17   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.69\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=17   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7028947368421052\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=17   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7007017543859648\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=17   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7146315789473684\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=18   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.644\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=18   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6795\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=18   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "10-fold cross val mean accuracy: 0.6962499999999999\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=18   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7088333333333333\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=18   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7152000000000001\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=19   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6295238095238095\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=19   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6404761904761904\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=19   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6626190476190478\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=19   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6796825396825398\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=19   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6897142857142857\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=20   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.629090909090909\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=20   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.65\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=20   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6822727272727274\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=20   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.677121212121212\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=20   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6823636363636363\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=21   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6252173913043478\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=21   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6517391304347827\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=21   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6760869565217391\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=21   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6820289855072464\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=21   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6930434782608695\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=22   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6225000000000002\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=22   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6670833333333333\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=22   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6779166666666667\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=22   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6702777777777779\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=22   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6845\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=23   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5944\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=23   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6432\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=23   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.652\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=23   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6676\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=23   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.66472\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=24   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6069230769230769\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=24   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6376923076923078\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=24   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6663461538461538\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=24   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6696153846153846\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=24   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "10-fold cross val mean accuracy: 0.665846153846154\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=25   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6118518518518518\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=25   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6307407407407406\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=25   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6462962962962964\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=25   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6580246913580245\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=25   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6686666666666666\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=26   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6014285714285714\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=26   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6292857142857142\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=26   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6526785714285713\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=26   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.665\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=26   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6717857142857143\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=27   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5786206896551724\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=27   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6062068965517241\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=27   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6327586206896552\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=27   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6435632183908045\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=27   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6487586206896552\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=28   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5660000000000001\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=28   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.61\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=28   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6328333333333334\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=28   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.638\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=28   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6514\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=29   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5599999999999999\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=29   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5990322580645161\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=29   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6130645161290322\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=29   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6212903225806452\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=29   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6278709677419354\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=30   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5643750000000001\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=30   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6021875\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=30   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6098437499999999\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=30   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6285416666666667\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=30   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6279375\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=31   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5775757575757575\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=31   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "10-fold cross val mean accuracy: 0.5681818181818181\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=31   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6127272727272728\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=31   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6132323232323232\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=31   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6202424242424243\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=32   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5423529411764706\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=32   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5729411764705882\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=32   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5920588235294117\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=32   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5997058823529412\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=32   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6061176470588235\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=33   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5319999999999999\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=33   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5465714285714285\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=33   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5881428571428572\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=33   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.594095238095238\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=33   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5920571428571428\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=34   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5483333333333333\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=34   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5683333333333332\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=34   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5744444444444444\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=34   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5903703703703704\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=34   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6083333333333333\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=35   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5189189189189188\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=35   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5548648648648649\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=35   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.580945945945946\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=35   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.585135135135135\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=35   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5933513513513513\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=36   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5042105263157894\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=36   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5355263157894737\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=36   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5723684210526315\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=36   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5754385964912281\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=36   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5833684210526315\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=37   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5133333333333333\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=37   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5407692307692308\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=37   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5661538461538461\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=37   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "10-fold cross val mean accuracy: 0.5663247863247862\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=37   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5796410256410256\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=38   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5115000000000001\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=38   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5399999999999999\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=38   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.541875\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=38   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5592500000000001\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=38   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.56655\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=39   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5048780487804878\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=39   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5421951219512195\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=39   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.546219512195122\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=39   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5696747967479674\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=39   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5673658536585366\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=40   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5047619047619047\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=40   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5252380952380953\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=40   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5482142857142857\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=40   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.556031746031746\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=40   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5540952380952382\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=41   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5027906976744186\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=41   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5220930232558139\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=41   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5447674418604651\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=41   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5472093023255813\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=41   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5541395348837209\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=42   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.48227272727272724\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=42   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5138636363636364\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=42   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5377272727272728\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=42   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5375000000000001\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=42   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5417727272727273\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=43   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.4848888888888889\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=43   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.49799999999999994\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=43   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5262222222222223\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=43   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5396296296296296\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=43   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5351111111111112\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=44   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "10-fold cross val mean accuracy: 0.46869565217391307\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=44   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.48739130434782607\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=44   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5171739130434783\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=44   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5195652173913043\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=44   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.531695652173913\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=45   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.4706382978723404\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=45   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.48999999999999994\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=45   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5140425531914893\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=45   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5175886524822696\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=45   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5164255319148936\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=46   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.45125000000000004\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=46   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.4875\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=46   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5028124999999999\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=46   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5072916666666666\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=46   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5078333333333334\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=47   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.45836734693877557\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=47   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.4759183673469388\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=47   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.49438775510204086\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=47   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5001360544217687\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=47   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5091428571428571\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=48   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.4324\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=48   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.4686\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=48   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.49210000000000004\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=48   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.49466666666666653\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=48   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5001599999999999\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=49   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.44941176470588234\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=49   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.46450980392156865\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=49   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.4796078431372549\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=49   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.4934640522875817\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "1-gram    authors=49   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.48999999999999994\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=2   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.99\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=2   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 1.0\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=2   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "10-fold cross val mean accuracy: 0.9974999999999999\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=2   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 1.0\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=2   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.999\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=3   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9733333333333334\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=3   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9766666666666668\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=3   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.99\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=3   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9955555555555555\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=3   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9959999999999999\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=4   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9949999999999999\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=4   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9925\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=4   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.99\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=4   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9949999999999999\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=4   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9974999999999999\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=5   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.984\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=5   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9940000000000001\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=5   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9960000000000001\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=5   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9960000000000001\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=5   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9992000000000001\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=6   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.96\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=6   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9899999999999999\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=6   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9958333333333333\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=6   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9972222222222221\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=6   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9986666666666666\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=7   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9742857142857142\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=7   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9757142857142858\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=7   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.985\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=7   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9876190476190476\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=7   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9911428571428571\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=8   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9250000000000002\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=8   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.93625\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=8   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.97\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=8   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.96875\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=8   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "10-fold cross val mean accuracy: 0.9790000000000001\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=9   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9311111111111112\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=9   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9422222222222223\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=9   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9583333333333333\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=9   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9700000000000001\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=9   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9782222222222222\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=10   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.916\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=10   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.953\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=10   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9605\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=10   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9676666666666666\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=10   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9766\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=11   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9381818181818182\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=11   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.959090909090909\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=11   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9554545454545454\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=11   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9627272727272729\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=11   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9723636363636364\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=12   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9383333333333332\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=12   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9400000000000001\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=12   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9591666666666667\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=12   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.961111111111111\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=12   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9651666666666667\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=13   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8400000000000001\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=13   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8564285714285715\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=13   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.887142857142857\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=13   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9011904761904761\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=13   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.912142857142857\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=14   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.82\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=14   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.85\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=14   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8913333333333334\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=14   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8962222222222224\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=14   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.916\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=15   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.83625\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=15   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "10-fold cross val mean accuracy: 0.8618750000000001\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=15   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8934375000000001\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=15   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9033333333333333\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=15   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.917\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=16   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7894117647058823\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=16   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8294117647058823\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=16   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8723529411764706\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=16   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8954901960784314\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=16   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9049411764705881\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=17   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7663157894736841\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=17   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8173684210526316\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=17   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.865\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=17   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8721052631578946\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=17   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.890736842105263\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=18   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.756\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=18   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8185\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=18   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.86525\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=18   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8776666666666667\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=18   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8995\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=19   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.74\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=19   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8147619047619047\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=19   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.834047619047619\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=19   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8647619047619048\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=19   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8785714285714287\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=20   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7527272727272727\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=20   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8004545454545454\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=20   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8297727272727272\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=20   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8437878787878788\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=20   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8675454545454546\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=21   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7539130434782608\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=21   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8047826086956522\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=21   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8363043478260869\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=21   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "10-fold cross val mean accuracy: 0.8566666666666667\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=21   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.866\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=22   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7608333333333334\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=22   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7945833333333334\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=22   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8354166666666666\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=22   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.858611111111111\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=22   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8720833333333333\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=23   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7415999999999999\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=23   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7847999999999999\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=23   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8256\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=23   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8436\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=23   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8628\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=24   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7561538461538462\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=24   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7807692307692307\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=24   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.825\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=24   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8448717948717949\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=24   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8633076923076922\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=25   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7437037037037036\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=25   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7922222222222223\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=25   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8287037037037036\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=25   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8528395061728397\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=25   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8605185185185185\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=26   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7628571428571429\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=26   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8007142857142858\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=26   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8314285714285715\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=26   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.853095238095238\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=26   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8699285714285713\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=27   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7255172413793103\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=27   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7931034482758621\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=27   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8262068965517242\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=27   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8429885057471264\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=27   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.858551724137931\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=28   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "10-fold cross val mean accuracy: 0.7306666666666667\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=28   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.765\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=28   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8258333333333333\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=28   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8357777777777778\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=28   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8553333333333335\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=29   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.750967741935484\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=29   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7954838709677419\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=29   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8241935483870968\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=29   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8398924731182795\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=29   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.865741935483871\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=30   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7162499999999999\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=30   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7584375\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=30   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8173437499999998\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=30   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8347916666666666\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=30   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8470000000000001\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=31   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7054545454545453\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=31   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7687878787878789\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=31   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8101515151515152\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=31   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8285858585858584\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=31   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8407878787878789\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=32   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7035294117647058\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=32   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7435294117647059\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=32   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7864705882352941\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=32   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8069607843137255\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=32   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8261176470588236\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=33   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6634285714285715\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=33   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7191428571428572\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=33   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7741428571428571\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=33   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7942857142857143\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=33   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8176571428571429\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=34   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6827777777777778\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=34   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7419444444444444\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=34   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "10-fold cross val mean accuracy: 0.7781944444444445\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=34   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8000925925925925\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=34   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8230555555555557\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=35   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6718918918918918\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=35   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7343243243243242\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=35   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7743243243243244\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=35   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7981981981981983\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=35   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8149189189189189\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=36   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6763157894736842\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=36   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7236842105263158\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=36   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7669736842105264\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=36   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7896491228070175\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=36   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8048947368421052\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=37   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6717948717948719\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=37   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7246153846153847\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=37   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.768974358974359\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=37   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7851282051282051\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=37   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8086153846153847\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=38   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6635\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=38   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.71875\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=38   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.751625\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=38   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7849166666666666\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=38   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8049\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=39   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.668780487804878\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=39   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7229268292682927\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=39   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7626829268292683\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=39   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7788617886178862\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=39   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8062926829268294\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=40   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6671428571428573\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=40   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7173809523809525\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=40   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.758452380952381\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=40   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7813492063492062\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=40   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "10-fold cross val mean accuracy: 0.8006190476190476\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=41   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6493023255813953\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=41   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6890697674418604\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=41   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7551162790697674\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=41   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7579069767441861\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=41   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7857209302325583\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=42   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6113636363636363\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=42   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6786363636363637\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=42   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7215909090909091\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=42   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7575000000000001\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=42   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7775000000000001\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=43   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.628\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=43   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6737777777777778\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=43   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7165555555555556\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=43   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7419259259259261\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=43   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7650666666666667\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=44   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6139130434782609\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=44   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.662608695652174\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=44   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.717391304347826\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=44   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7482608695652173\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=44   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7631739130434783\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=45   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6238297872340426\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=45   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6619148936170213\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=45   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7152127659574468\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=45   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7412765957446809\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=45   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7681702127659573\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=46   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5854166666666667\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=46   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6447916666666668\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=46   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6923958333333333\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=46   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7245138888888889\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=46   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7497916666666666\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=47   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6061224489795919\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=47   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "10-fold cross val mean accuracy: 0.6516326530612244\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=47   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7036734693877551\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=47   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7219727891156462\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=47   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7488571428571429\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=48   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5972\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=48   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6374\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=48   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6821\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=48   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7082666666666667\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=48   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7363999999999999\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=49   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5952941176470589\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=49   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.632549019607843\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=49   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6775490196078432\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=49   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6944444444444444\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "2-gram    authors=49   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7309803921568628\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=2   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 1.0\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=2   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 1.0\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=2   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 1.0\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=2   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 1.0\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=2   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 1.0\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=3   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.96\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=3   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9966666666666667\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=3   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 1.0\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=3   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9977777777777778\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=3   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9993333333333332\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=4   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9649999999999999\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=4   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9899999999999999\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=4   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 1.0\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=4   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 1.0\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=4   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.999\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=5   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9800000000000001\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=5   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9879999999999999\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=5   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.998\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=5   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "10-fold cross val mean accuracy: 0.9993333333333332\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=5   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9996\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=6   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9833333333333334\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=6   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9966666666666667\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=6   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9974999999999999\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=6   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9983333333333334\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=6   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9996666666666666\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=7   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9885714285714287\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=7   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9971428571428571\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=7   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9971428571428571\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=7   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9980952380952381\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=7   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9994285714285714\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=8   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9350000000000002\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=8   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.96125\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=8   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.97625\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=8   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9795833333333333\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=8   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9890000000000001\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=9   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9444444444444444\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=9   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.95\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=9   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9727777777777777\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=9   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9833333333333334\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=9   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9864444444444445\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=10   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9460000000000001\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=10   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9579999999999999\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=10   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9700000000000001\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=10   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9813333333333334\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=10   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9875999999999999\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=11   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9327272727272726\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=11   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9454545454545455\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=11   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.968181818181818\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=11   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9821212121212122\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=11   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9870909090909091\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=12   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "10-fold cross val mean accuracy: 0.9266666666666667\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=12   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9491666666666665\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=12   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9658333333333333\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=12   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9802777777777777\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=12   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9848333333333332\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=13   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8614285714285715\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=13   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8935714285714287\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=13   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9346428571428571\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=13   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9280952380952382\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=13   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9390000000000001\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=14   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8493333333333334\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=14   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8906666666666668\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=14   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9083333333333334\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=14   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.929111111111111\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=14   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9376\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=15   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8612500000000001\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=15   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9037499999999999\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=15   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.91875\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=15   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9272916666666667\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=15   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9395\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=16   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.836470588235294\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=16   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8658823529411765\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=16   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9099999999999999\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=16   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9203921568627452\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=16   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9350588235294115\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=17   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8263157894736842\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=17   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.861578947368421\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=17   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9094736842105263\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=17   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9226315789473685\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=17   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9344210526315789\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=18   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.825\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=18   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.873\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=18   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "10-fold cross val mean accuracy: 0.908\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=18   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.916\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=18   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9358000000000001\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=19   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7866666666666666\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=19   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8333333333333333\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=19   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8835714285714286\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=19   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9036507936507936\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=19   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9225714285714284\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=20   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7818181818181817\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=20   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8281818181818184\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=20   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8800000000000001\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=20   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8974242424242422\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=20   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.917181818181818\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=21   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8060869565217391\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=21   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8391304347826086\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=21   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8843478260869565\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=21   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9076811594202898\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=21   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9146956521739129\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=22   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7991666666666667\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=22   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.83625\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=22   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8766666666666667\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=22   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.899861111111111\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=22   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9137500000000001\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=23   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7792\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=23   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8328\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=23   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8736\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=23   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8865333333333334\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=23   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.906\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=24   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7515384615384615\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=24   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8296153846153846\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=24   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8628846153846155\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=24   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8906410256410255\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=24   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "10-fold cross val mean accuracy: 0.9054615384615385\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=25   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7718518518518518\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=25   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.825925925925926\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=25   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8731481481481481\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=25   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8834567901234568\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=25   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9090370370370369\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=26   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8135714285714286\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=26   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8371428571428572\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=26   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8678571428571429\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=26   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8947619047619048\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=26   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9073571428571429\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=27   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7689655172413794\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=27   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8165517241379311\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=27   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8629310344827588\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=27   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8831034482758622\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=27   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8996551724137932\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=28   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.768\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=28   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.827\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=28   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.851\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=28   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8778888888888889\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=28   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8921333333333333\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=29   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7625806451612902\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=29   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8206451612903226\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=29   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8624193548387098\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=29   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8855913978494623\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=29   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8970967741935484\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=30   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.73375\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=30   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7931250000000001\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=30   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8520312500000001\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=30   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8698958333333333\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=30   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8905000000000001\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=31   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7593939393939393\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=31   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "10-fold cross val mean accuracy: 0.7903030303030303\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=31   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8357575757575759\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=31   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8623232323232324\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=31   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8874545454545455\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=32   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7347058823529412\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=32   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7929411764705883\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=32   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8313235294117647\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=32   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8520588235294119\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=32   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8761176470588234\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=33   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.724\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=33   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.781142857142857\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=33   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8304285714285715\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=33   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.847047619047619\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=33   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8675428571428572\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=34   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7233333333333334\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=34   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7822222222222223\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=34   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8265277777777778\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=34   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.850462962962963\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=34   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8729444444444445\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=35   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7372972972972974\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=35   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7727027027027026\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=35   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8162162162162163\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=35   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8363063063063064\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=35   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8623243243243245\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=36   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6968421052631579\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=36   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7655263157894737\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=36   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8167105263157894\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=36   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8342982456140351\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=36   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8603157894736843\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=37   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6984615384615385\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=37   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7633333333333333\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=37   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8150000000000001\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=37   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "10-fold cross val mean accuracy: 0.8394871794871795\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=37   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8616410256410256\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=38   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.712\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=38   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.76725\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=38   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.814125\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=38   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8365833333333332\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=38   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.85945\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=39   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7107317073170731\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=39   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7609756097560976\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=39   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8132926829268292\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=39   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8386178861788617\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=39   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8654634146341463\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=40   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.709047619047619\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=40   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7509523809523809\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=40   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8179761904761904\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=40   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8387301587301588\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=40   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8630476190476191\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=41   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6981395348837208\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=41   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7544186046511628\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=41   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7932558139534883\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=41   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8246511627906976\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=41   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8491627906976744\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=42   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6945454545454546\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=42   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.729090909090909\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=42   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.785\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=42   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8043939393939393\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=42   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8426818181818183\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=43   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6555555555555556\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=43   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.718888888888889\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=43   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7814444444444445\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=43   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8003703703703705\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=43   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8342666666666666\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=44   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "10-fold cross val mean accuracy: 0.6599999999999999\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=44   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.721304347826087\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=44   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7732608695652174\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=44   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7915942028985506\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=44   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8328260869565218\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=45   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6570212765957446\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=45   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7129787234042553\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=45   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7717021276595745\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=45   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7960992907801419\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=45   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8264255319148935\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=46   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6666666666666667\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=46   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7031249999999999\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=46   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7683333333333333\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=46   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7842361111111111\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=46   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8141666666666666\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=47   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6530612244897959\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=47   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7044897959183672\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=47   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7603061224489795\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=47   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7762585034013605\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=47   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8176326530612246\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=48   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6468\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=48   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.687\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=48   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7312999999999998\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=48   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7727333333333333\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=48   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.78824\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=49   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6474509803921569\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=49   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6892156862745098\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=49   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7336274509803922\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=49   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7604575163398692\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "3-gram    authors=49   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7892156862745098\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=2   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 1.0\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=2   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9949999999999999\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=2   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "10-fold cross val mean accuracy: 1.0\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=2   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 1.0\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=2   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 1.0\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=3   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9866666666666667\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=3   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.99\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=3   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9966666666666667\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=3   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9988888888888889\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=3   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 1.0\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=4   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.985\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=4   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9949999999999999\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=4   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9974999999999999\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=4   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9991666666666668\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=4   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 1.0\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=5   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.992\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=5   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.994\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=5   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 1.0\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=5   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9993333333333332\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=5   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 1.0\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=6   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9866666666666667\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=6   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9949999999999999\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=6   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9983333333333334\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=6   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9994444444444444\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=6   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9996666666666666\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=7   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9828571428571429\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=7   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9942857142857143\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=7   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9949999999999999\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=7   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9995238095238095\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=7   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9994285714285714\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=8   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.93\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=8   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.95375\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=8   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9731249999999999\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=8   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9875\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=8   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "10-fold cross val mean accuracy: 0.9897500000000001\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=9   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.928888888888889\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=9   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.961111111111111\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=9   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9838888888888888\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=9   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9807407407407407\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=9   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9913333333333334\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=10   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9440000000000002\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=10   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9620000000000001\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=10   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.977\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=10   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9856666666666666\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=10   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.991\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=11   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9199999999999999\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=11   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9400000000000001\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=11   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9645454545454546\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=11   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9790909090909091\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=11   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9863636363636366\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=12   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.93\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=12   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9475\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=12   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9625\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=12   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9761111111111113\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=12   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9851666666666666\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=13   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8400000000000001\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=13   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9007142857142858\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=13   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9128571428571428\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=13   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9299999999999999\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=13   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9435714285714285\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=14   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8573333333333334\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=14   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8826666666666668\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=14   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9173333333333333\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=14   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9284444444444443\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=14   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9382666666666666\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=15   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.865\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=15   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "10-fold cross val mean accuracy: 0.89125\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=15   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9112499999999999\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=15   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.930625\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=15   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.946625\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=16   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8411764705882353\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=16   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8911764705882353\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=16   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9141176470588235\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=16   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9298039215686276\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=16   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9375294117647058\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=17   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8221052631578948\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=17   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8657894736842107\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=17   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9113157894736842\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=17   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9326315789473684\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=17   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9360000000000002\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=18   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8009999999999999\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=18   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8825000000000001\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=18   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9159999999999998\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=18   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9261666666666667\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=18   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9449\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=19   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7952380952380953\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=19   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.862857142857143\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=19   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8990476190476191\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=19   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.915873015873016\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=19   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9328571428571429\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=20   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7790909090909091\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=20   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8422727272727272\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=20   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8834090909090909\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=20   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9013636363636364\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=20   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9224545454545454\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=21   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.791304347826087\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=21   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8400000000000001\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=21   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8852173913043477\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=21   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "10-fold cross val mean accuracy: 0.9018840579710146\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=21   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9263478260869566\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=22   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7866666666666667\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=22   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8375\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=22   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8825\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=22   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9065277777777778\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=22   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9205\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=23   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7792\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=23   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8464\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=23   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.881\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=23   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8970666666666667\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=23   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9150400000000001\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=24   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7876923076923077\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=24   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8334615384615385\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=24   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8773076923076925\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=24   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8930769230769231\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=24   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9166923076923077\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=25   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.797037037037037\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=25   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.835925925925926\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=25   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8842592592592593\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=25   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8958024691358023\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=25   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9158518518518518\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=26   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7857142857142857\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=26   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8442857142857143\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=26   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8801785714285714\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=26   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8964285714285714\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=26   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9151428571428569\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=27   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7710344827586206\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=27   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8127586206896552\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=27   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.865\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=27   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8843678160919541\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=27   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9024137931034482\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=28   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "10-fold cross val mean accuracy: 0.7813333333333332\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=28   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8210000000000001\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=28   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8593333333333334\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=28   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8856666666666666\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=28   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8994\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=29   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.770967741935484\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=29   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8183870967741935\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=29   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8625806451612903\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=29   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8824731182795699\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=29   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8992903225806452\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=30   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.77125\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=30   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8171874999999998\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=30   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8556250000000001\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=30   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8745833333333334\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=30   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8943749999999999\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=31   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7442424242424243\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=31   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7987878787878788\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=31   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8318181818181818\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=31   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8694949494949495\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=31   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8917575757575757\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=32   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7423529411764707\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=32   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7973529411764706\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=32   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8395588235294117\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=32   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8641176470588234\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=32   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8831176470588236\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=33   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7125714285714285\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=33   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7885714285714285\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=33   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8291428571428572\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=33   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8551428571428572\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=33   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8796571428571429\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=34   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7233333333333334\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=34   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.795\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=34   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "10-fold cross val mean accuracy: 0.8426388888888889\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=34   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8612037037037037\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=34   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8810555555555556\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=35   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7405405405405406\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=35   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7721621621621622\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=35   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8222972972972972\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=35   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8492792792792793\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=35   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8745405405405405\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=36   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7131578947368421\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=36   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7647368421052632\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=36   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8174999999999999\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=36   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.847982456140351\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=36   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8707894736842106\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=37   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7138461538461538\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=37   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7705128205128204\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=37   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8112820512820512\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=37   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8486324786324786\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=37   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8697435897435899\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=38   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7055\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=38   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.765\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=38   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8143749999999998\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=38   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8473333333333333\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=38   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8754\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=39   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7102439024390244\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=39   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7775609756097561\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=39   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8254878048780488\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=39   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8521138211382114\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=39   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8730243902439024\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=40   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.709047619047619\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=40   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7735714285714286\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=40   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8248809523809524\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=40   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.849047619047619\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=40   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "10-fold cross val mean accuracy: 0.8736666666666666\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=41   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7009302325581395\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=41   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7597674418604651\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=41   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8096511627906976\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=41   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8325581395348838\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=41   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8583255813953489\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=42   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6849999999999999\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=42   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7384090909090909\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=42   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8006818181818183\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=42   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8182575757575759\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=42   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8531363636363636\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=43   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.672\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=43   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.738\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=43   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7912222222222223\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=43   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8166666666666667\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=43   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8476000000000001\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=44   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.67\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=44   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7184782608695652\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=44   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7797826086956523\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=44   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.802608695652174\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=44   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8408695652173913\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=45   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6638297872340425\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=45   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7308510638297873\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=45   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7814893617021277\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=45   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8068085106382978\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=45   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8351489361702127\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=46   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.65\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=46   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7204166666666667\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=46   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7683333333333333\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=46   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7999999999999999\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=46   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8246249999999999\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=47   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6546938775510204\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=47   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "10-fold cross val mean accuracy: 0.7108163265306122\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=47   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7609183673469389\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=47   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7944897959183673\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=47   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8227755102040815\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=48   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6268\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=48   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6998\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=48   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7499\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=48   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7803333333333333\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=48   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.80888\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=49   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6384313725490196\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=49   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6905882352941177\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=49   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7448039215686275\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=49   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7756209150326796\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "4-gram    authors=49   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7982745098039216\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=2   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 1.0\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=2   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 1.0\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=2   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 1.0\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=2   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 1.0\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=2   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 1.0\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=3   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9733333333333334\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=3   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 1.0\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=3   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 1.0\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=3   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9955555555555555\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=3   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 1.0\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=4   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9650000000000001\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=4   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9949999999999999\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=4   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.99875\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=4   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 1.0\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=4   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 1.0\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=5   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.984\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=5   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9960000000000001\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=5   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 1.0\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=5   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9986666666666666\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=5   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "10-fold cross val mean accuracy: 1.0\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=6   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9866666666666667\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=6   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9983333333333334\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=6   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9958333333333333\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=6   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9988888888888889\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=6   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9993333333333332\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=7   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9800000000000001\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=7   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9914285714285714\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=7   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9992857142857143\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=7   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9985714285714286\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=7   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9994285714285714\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=8   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9375\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=8   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9512500000000002\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=8   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.97625\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=8   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9804166666666665\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=8   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9897499999999999\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=9   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9355555555555556\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=9   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9588888888888889\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=9   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9783333333333332\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=9   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.987037037037037\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=9   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9902222222222221\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=10   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.952\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=10   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9530000000000001\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=10   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9774999999999998\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=10   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9836666666666668\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=10   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9882000000000002\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=11   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9290909090909091\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=11   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.948181818181818\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=11   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9627272727272727\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=11   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9745454545454546\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=11   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9879999999999999\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=12   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9233333333333335\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=12   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "10-fold cross val mean accuracy: 0.9491666666666667\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=12   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9662499999999999\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=12   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9752777777777777\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=12   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9869999999999999\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=13   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8457142857142858\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=13   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8807142857142857\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=13   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9178571428571429\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=13   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9321428571428572\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=13   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9377142857142857\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=14   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8373333333333333\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=14   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8833333333333334\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=14   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9113333333333333\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=14   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9280000000000002\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=14   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9387999999999999\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=15   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.84375\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=15   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8850000000000001\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=15   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9203125\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=15   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9227083333333335\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=15   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.944375\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=16   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8552941176470588\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=16   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8841176470588236\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=16   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9076470588235294\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=16   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9211764705882354\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=16   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9361176470588237\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=17   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8157894736842106\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=17   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8742105263157894\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=17   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.908157894736842\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=17   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9380701754385965\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=17   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9396842105263158\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=18   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8379999999999999\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=18   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8825000000000001\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=18   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.915\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=18   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "10-fold cross val mean accuracy: 0.9283333333333333\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=18   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9457000000000001\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=19   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8104761904761905\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=19   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8580952380952382\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=19   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.902142857142857\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=19   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9096825396825399\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=19   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9306666666666666\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=20   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7872727272727273\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=20   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8277272727272728\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=20   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8745454545454544\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=20   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8954545454545455\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=20   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.916\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=21   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7939130434782609\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=21   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8378260869565215\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=21   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8789130434782608\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=21   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9053623188405796\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=21   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9192173913043478\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=22   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.795\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=22   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8416666666666666\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=22   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8741666666666668\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=22   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9002777777777778\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=22   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9153333333333332\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=23   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.772\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=23   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.836\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=23   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8757999999999999\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=23   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8954666666666666\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=23   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9139199999999998\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=24   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7753846153846153\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=24   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.835\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=24   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8686538461538461\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=24   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8933333333333333\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=24   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9131538461538462\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=25   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "10-fold cross val mean accuracy: 0.7829629629629629\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=25   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8218518518518518\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=25   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8709259259259259\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=25   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.892222222222222\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=25   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9118518518518519\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=26   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7707142857142857\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=26   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.825\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=26   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8787500000000001\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=26   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8950000000000001\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=26   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.913\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=27   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7537931034482759\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=27   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.813448275862069\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=27   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8548275862068966\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=27   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8816091954022989\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=27   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9040689655172415\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=28   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7686666666666666\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=28   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8223333333333335\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=28   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8556666666666667\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=28   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8756666666666666\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=28   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8994666666666667\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=29   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7638709677419355\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=29   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8116129032258064\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=29   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8611290322580645\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=29   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8782795698924731\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=29   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9001290322580646\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=30   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7525\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=30   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.809375\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=30   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8440624999999999\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=30   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8712500000000001\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=30   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.890625\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=31   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7333333333333333\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=31   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7930303030303031\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=31   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "10-fold cross val mean accuracy: 0.8369696969696971\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=31   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8582828282828283\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=31   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8785454545454545\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=32   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7135294117647059\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=32   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.791470588235294\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=32   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8347058823529412\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=32   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8515686274509804\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=32   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8848235294117648\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=33   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7085714285714286\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=33   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7831428571428571\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=33   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8268571428571428\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=33   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8518095238095238\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=33   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8752571428571428\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=34   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7288888888888889\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=34   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7813888888888888\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=34   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8326388888888889\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=34   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8464814814814815\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=34   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.876111111111111\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=35   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6945945945945946\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=35   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7632432432432432\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=35   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8095945945945946\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=35   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.836846846846847\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=35   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8653513513513513\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=36   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7047368421052631\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=36   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7478947368421052\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=36   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8099999999999999\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=36   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.832719298245614\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=36   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8644210526315789\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=37   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7107692307692307\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=37   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7564102564102564\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=37   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8103846153846155\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=37   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8376068376068375\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=37   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "10-fold cross val mean accuracy: 0.860153846153846\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=38   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.719\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=38   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.75025\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=38   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8151249999999999\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=38   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.835\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=38   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8632\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=39   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7029268292682926\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=39   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7663414634146342\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=39   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8214634146341464\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=39   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8440650406504064\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=39   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8695609756097562\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=40   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7123809523809524\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=40   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7626190476190475\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=40   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8170238095238096\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=40   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8407142857142856\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=40   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.868095238095238\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=41   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6953488372093024\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=41   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7502325581395348\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=41   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8015116279069767\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=41   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8217829457364341\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=41   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8567441860465117\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=42   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6786363636363637\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=42   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7224999999999999\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=42   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7830681818181819\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=42   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8156060606060607\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=42   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8450000000000001\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=43   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6751111111111111\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=43   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7248888888888889\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=43   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7793333333333333\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=43   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8072592592592592\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=43   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8360888888888889\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=44   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6530434782608695\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=44   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "10-fold cross val mean accuracy: 0.7221739130434782\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=44   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7747826086956523\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=44   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.794927536231884\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=44   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8312173913043479\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=45   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6527659574468084\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=45   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7074468085106382\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=45   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7723404255319148\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=45   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7972340425531914\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=45   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.827659574468085\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=46   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6533333333333333\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=46   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6997916666666666\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=46   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7583333333333334\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=46   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7806944444444444\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=46   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8170833333333334\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=47   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6530612244897959\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=47   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6995918367346939\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=47   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.753469387755102\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=47   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7814285714285714\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=47   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8157959183673469\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=48   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6576\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=48   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6834\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=48   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7417999999999999\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=48   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7687333333333333\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=48   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7964399999999999\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=49   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6419607843137255\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=49   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.689607843137255\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=49   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.730686274509804\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=49   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7638562091503267\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_char_ngram\n",
      "5-gram    authors=49   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7965490196078431\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=2   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.99\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=2   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.97\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=2   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9799999999999999\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=2   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9833333333333334\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=2   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "10-fold cross val mean accuracy: 0.9880000000000001\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=3   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8799999999999999\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=3   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9200000000000002\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=3   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9166666666666666\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=3   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9144444444444446\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=3   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9179999999999999\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=4   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.875\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=4   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.875\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=4   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.91875\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=4   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.925\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=4   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.909\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=5   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9080000000000001\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=5   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9400000000000001\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=5   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9299999999999999\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=5   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9393333333333332\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=5   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9427999999999999\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=6   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9233333333333335\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=6   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9233333333333332\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=6   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9216666666666665\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=6   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9283333333333333\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=6   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9229999999999998\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=7   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8828571428571428\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=7   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8700000000000001\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=7   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.897142857142857\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=7   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8966666666666667\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=7   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8877142857142857\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=8   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.785\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=8   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.80625\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=8   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.803125\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=8   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8091666666666667\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=8   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8065\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=9   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7822222222222223\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=9   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "10-fold cross val mean accuracy: 0.8099999999999999\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=9   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8327777777777777\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=9   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8114814814814816\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=9   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8286666666666666\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=10   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.796\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=10   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8240000000000001\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=10   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8480000000000001\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=10   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8423333333333334\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=10   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8462\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=11   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7581818181818182\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=11   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7718181818181817\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=11   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8095454545454546\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=11   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7945454545454546\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=11   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7872727272727273\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=12   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7483333333333333\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=12   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7691666666666667\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=12   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7816666666666667\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=12   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8025\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=12   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7949999999999999\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=13   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6714285714285715\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=13   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6742857142857144\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=13   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7003571428571428\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=13   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7161904761904762\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=13   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7201428571428571\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=14   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6519999999999999\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=14   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7113333333333334\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=14   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7096666666666667\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=14   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6986666666666667\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=14   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7123999999999999\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=15   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7012500000000002\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=15   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6975\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=15   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6937499999999999\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=15   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "10-fold cross val mean accuracy: 0.7083333333333334\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=15   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.71675\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=16   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6564705882352941\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=16   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6517647058823529\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=16   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.666764705882353\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=16   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6649019607843139\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=16   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6795294117647059\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=17   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5726315789473684\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=17   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6147368421052631\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=17   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6339473684210526\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=17   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6285964912280702\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=17   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6176842105263157\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=18   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.617\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=18   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6300000000000001\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=18   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.63775\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=18   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6336666666666667\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=18   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6468\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=19   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5742857142857143\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=19   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5785714285714285\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=19   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5969047619047619\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=19   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6022222222222222\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=19   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6191428571428571\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=20   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5781818181818181\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=20   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6009090909090908\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=20   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5986363636363635\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=20   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6115151515151516\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=20   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6107272727272727\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=21   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5730434782608695\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=21   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5826086956521739\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=21   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5980434782608696\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=21   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6140579710144928\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=21   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6144347826086957\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=22   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "10-fold cross val mean accuracy: 0.5308333333333334\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=22   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5783333333333334\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=22   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5814583333333333\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=22   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5833333333333333\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=22   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5885833333333335\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=23   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5336000000000001\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=23   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5512\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=23   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5713999999999999\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=23   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5698666666666666\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=23   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5732\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=24   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5376923076923076\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=24   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5373076923076924\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=24   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5517307692307691\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=24   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5564102564102564\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=24   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5696923076923077\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=25   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5177777777777777\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=25   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5281481481481481\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=25   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5359259259259258\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=25   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5502469135802469\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=25   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5391851851851852\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=26   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5121428571428571\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=26   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5221428571428571\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=26   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5416071428571427\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=26   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5480952380952382\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=26   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.552\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=27   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.47586206896551725\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=27   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5217241379310346\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=27   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5358620689655172\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=27   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5235632183908046\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=27   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5394482758620689\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=28   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.49733333333333335\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=28   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5136666666666667\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=28   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "10-fold cross val mean accuracy: 0.5316666666666665\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=28   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5281111111111112\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=28   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5357333333333332\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=29   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.48645161290322586\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=29   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5125806451612903\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=29   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.521774193548387\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=29   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5104301075268817\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=29   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5178709677419355\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=30   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.45562499999999995\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=30   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.48156250000000006\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=30   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.4917187500000001\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=30   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.495\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=30   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.505375\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=31   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.45212121212121215\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=31   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.47333333333333333\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=31   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.4878787878787879\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=31   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.4858585858585859\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=31   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.4944242424242423\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=32   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.45176470588235296\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=32   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.47352941176470587\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=32   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.47294117647058825\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=32   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.4732352941176471\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=32   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.4805294117647059\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=33   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.42057142857142854\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=33   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.44228571428571434\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=33   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.46328571428571425\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=33   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.4658095238095238\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=33   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.4709714285714286\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=34   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.4638888888888889\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=34   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.46749999999999997\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=34   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.46736111111111117\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=34   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.4811111111111111\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=34   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "10-fold cross val mean accuracy: 0.48355555555555557\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=35   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.4524324324324325\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=35   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.44945945945945953\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=35   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.4664864864864865\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=35   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.4738738738738738\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=35   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.48162162162162153\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=36   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.42105263157894735\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=36   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.44342105263157894\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=36   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.4672368421052632\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=36   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.4666666666666667\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=36   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.47231578947368424\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=37   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.44153846153846155\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=37   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.45487179487179485\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=37   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.4694871794871795\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=37   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.4752991452991453\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=37   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.47569230769230775\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=38   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.422\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=38   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.43899999999999995\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=38   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.45225\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=38   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.46658333333333335\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=38   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.4669499999999999\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=39   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.4102439024390244\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=39   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.44487804878048787\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=39   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.44414634146341464\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=39   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.4504065040650406\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=39   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.4631219512195123\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=40   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.42285714285714276\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=40   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.42214285714285715\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=40   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.4430952380952381\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=40   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.4333333333333334\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=40   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.4446190476190476\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=41   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.41720930232558134\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=41   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "10-fold cross val mean accuracy: 0.4130232558139535\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=41   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.4366279069767442\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=41   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.43418604651162795\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=41   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.4377674418604651\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=42   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.41045454545454546\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=42   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.41795454545454547\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=42   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.4213636363636364\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=42   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.4331818181818181\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=42   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.43081818181818177\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=43   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.392\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=43   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.40022222222222226\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=43   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.409\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=43   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.42229629629629634\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=43   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.4211111111111112\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=44   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.38869565217391305\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=44   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.4056521739130434\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=44   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.39793478260869564\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=44   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.40644927536231884\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=44   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.41447826086956524\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=45   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.3851063829787234\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=45   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.3848936170212766\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=45   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.39829787234042546\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=45   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.3997163120567376\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=45   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.40629787234042547\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=46   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.36291666666666667\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=46   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.38145833333333334\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=46   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.39760416666666665\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=46   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.39506944444444436\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=46   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.39608333333333334\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=47   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.35591836734693877\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=47   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.3895918367346939\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=47   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.39408163265306123\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=47   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "10-fold cross val mean accuracy: 0.39319727891156464\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=47   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.3984489795918367\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=48   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.3712\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=48   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.36760000000000004\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=48   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.3861\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=48   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.3834666666666666\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=48   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.38583999999999996\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=49   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.3474509803921569\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=49   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.3688235294117647\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=49   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.37441176470588233\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=49   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.38091503267973853\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "1-gram    authors=49   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.3847058823529412\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=2   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.99\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=2   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.975\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=2   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.985\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=2   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9983333333333334\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=2   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.999\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=3   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9133333333333334\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=3   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9400000000000001\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=3   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9383333333333332\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=3   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9466666666666667\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=3   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9566666666666667\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=4   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9149999999999998\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=4   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9199999999999999\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=4   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9574999999999999\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=4   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9591666666666665\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=4   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.966\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=5   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.924\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=5   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9280000000000002\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=5   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9649999999999999\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=5   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.968\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=5   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9812\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=6   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9533333333333334\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=6   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "10-fold cross val mean accuracy: 0.9516666666666665\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=6   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9674999999999999\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=6   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9733333333333333\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=6   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9783333333333333\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=7   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8942857142857144\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=7   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9171428571428573\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=7   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.95\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=7   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9504761904761905\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=7   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.962\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=8   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7975\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=8   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8487500000000001\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=8   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.896875\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=8   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9112500000000001\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=8   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9157499999999998\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=9   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=9   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8655555555555555\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=9   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8911111111111112\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=9   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9155555555555555\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=9   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9148888888888891\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=10   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.812\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=10   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.861\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=10   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8844999999999998\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=10   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9053333333333333\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=10   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9190000000000002\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=11   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7945454545454546\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=11   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8354545454545456\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=11   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8490909090909092\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=11   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8812121212121212\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=11   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.898\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=12   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7849999999999999\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=12   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8283333333333334\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=12   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8508333333333333\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=12   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "10-fold cross val mean accuracy: 0.8727777777777778\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=12   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8896666666666666\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=13   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.68\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=13   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7421428571428572\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=13   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7882142857142858\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=13   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7930952380952381\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=13   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8087142857142858\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=14   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6973333333333334\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=14   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.726\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=14   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7826666666666666\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=14   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7844444444444444\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=14   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8177333333333333\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=15   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.70625\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=15   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7431249999999999\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=15   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7862500000000001\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=15   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7966666666666666\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=15   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.81175\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=16   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6494117647058824\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=16   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7094117647058823\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=16   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7502941176470588\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=16   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7674509803921568\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=16   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7929411764705881\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=17   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6589473684210526\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=17   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6905263157894737\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=17   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7357894736842107\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=17   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7575438596491229\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=17   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7833684210526315\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=18   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.641\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=18   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6755000000000001\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=18   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.73725\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=18   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7638333333333334\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=18   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7874000000000001\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=19   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "10-fold cross val mean accuracy: 0.6247619047619047\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=19   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6838095238095239\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=19   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7264285714285715\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=19   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7333333333333333\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=19   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7538095238095237\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=20   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6181818181818183\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=20   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.67\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=20   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.706590909090909\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=20   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7368181818181819\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=20   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7525454545454545\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=21   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6165217391304347\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=21   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.688695652173913\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=21   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7134782608695651\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=21   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7360869565217392\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=21   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7608695652173914\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=22   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.59\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=22   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6475\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=22   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6914583333333335\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=22   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7145833333333333\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=22   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7364166666666666\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=23   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5896\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=23   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6364\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=23   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.673\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=23   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6956\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=23   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.72096\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=24   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5823076923076922\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=24   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6384615384615385\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=24   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6796153846153846\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=24   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6921794871794872\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=24   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7197692307692307\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=25   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5733333333333333\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=25   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6037037037037036\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=25   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "10-fold cross val mean accuracy: 0.649074074074074\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=25   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6808641975308642\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=25   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6962222222222223\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=26   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5849999999999999\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=26   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6267857142857143\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=26   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6639285714285714\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=26   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6889285714285714\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=26   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7105\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=27   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5675862068965516\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=27   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6193103448275863\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=27   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6520689655172415\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=27   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.671609195402299\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=27   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.69\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=28   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5546666666666668\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=28   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.607\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=28   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6481666666666667\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=28   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6678888888888889\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=28   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6782666666666668\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=29   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5412903225806451\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=29   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5796774193548386\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=29   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6253225806451612\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=29   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6472043010752688\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=29   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6643225806451614\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=30   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5387500000000001\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=30   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5734375\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=30   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.61578125\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=30   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6313541666666665\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=30   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6544375\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=31   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.49696969696969695\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=31   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5596969696969697\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=31   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6072727272727272\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=31   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6212121212121212\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=31   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "10-fold cross val mean accuracy: 0.6393333333333333\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=32   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5088235294117647\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=32   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5476470588235294\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=32   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5813235294117647\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=32   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6023529411764705\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=32   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6307647058823529\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=33   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.4908571428571428\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=33   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5388571428571428\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=33   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5725714285714285\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=33   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5879047619047619\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=33   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6123428571428573\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=34   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5144444444444444\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=34   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5522222222222223\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=34   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5859722222222222\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=34   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.601574074074074\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=34   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6182777777777778\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=35   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.49351351351351347\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=35   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5459459459459459\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=35   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5786486486486486\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=35   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5951351351351353\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=35   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6096756756756757\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=36   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5036842105263157\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=36   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5384210526315789\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=36   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5755263157894737\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=36   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.592280701754386\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=36   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.609578947368421\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=37   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.4953846153846154\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=37   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5348717948717948\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=37   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5807692307692307\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=37   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5967521367521367\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=37   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6105641025641025\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=38   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.4845\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=38   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "10-fold cross val mean accuracy: 0.5309999999999999\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=38   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.56775\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=38   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.60225\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=38   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.61095\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=39   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.49414634146341463\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=39   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5365853658536585\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=39   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5701219512195121\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=39   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5869105691056911\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=39   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6109756097560975\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=40   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.4861904761904762\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=40   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5230952380952381\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=40   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5545238095238095\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=40   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5737301587301586\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=40   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5928571428571427\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=41   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.47581395348837213\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=41   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.4995348837209302\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=41   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5437209302325582\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=41   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5565891472868216\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=41   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5840930232558139\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=42   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.4572727272727272\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=42   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5081818181818181\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=42   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5275\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=42   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5557575757575758\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=42   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5709545454545455\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=43   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.43866666666666665\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=43   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.488\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=43   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5283333333333333\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=43   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5457777777777778\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=43   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.555688888888889\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=44   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.4308695652173912\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=44   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.48673913043478256\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=44   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.515108695652174\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=44   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "10-fold cross val mean accuracy: 0.5445652173913043\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=44   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5512173913043478\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=45   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.4293617021276595\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=45   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.46425531914893614\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=45   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.49606382978723407\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=45   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5242553191489362\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=45   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.545063829787234\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=46   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.41291666666666665\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=46   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.453125\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=46   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.4942708333333333\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=46   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5175694444444444\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=46   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5333333333333334\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=47   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.40979591836734686\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=47   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.45122448979591845\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=47   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5003061224489797\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=47   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5164625850340137\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=47   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5304489795918368\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=48   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.3996\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=48   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.44819999999999993\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=48   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.48319999999999996\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=48   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5018666666666667\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=48   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5227999999999999\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=49   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.4141176470588236\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=49   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.45372549019607844\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=49   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.4901960784313726\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=49   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.49901960784313726\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "2-gram    authors=49   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5156862745098041\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=2   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9800000000000001\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=2   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9949999999999999\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=2   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9949999999999999\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=2   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 1.0\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=2   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9949999999999999\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=3   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8866666666666667\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=3   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "10-fold cross val mean accuracy: 0.9\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=3   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.95\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=3   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9566666666666667\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=3   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9746666666666666\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=4   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.875\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=4   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8975000000000002\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=4   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9487500000000001\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=4   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9608333333333332\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=4   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9715\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=5   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8920000000000001\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=5   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9199999999999999\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=5   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9710000000000001\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=5   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9693333333333335\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=5   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.982\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=6   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8933333333333333\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=6   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9416666666666667\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=6   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9591666666666667\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=6   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9688888888888888\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=6   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.976\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=7   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8571428571428571\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=7   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9257142857142858\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=7   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9514285714285713\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=7   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9666666666666666\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=7   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9785714285714286\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=8   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7925\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=8   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.83125\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=8   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8943749999999999\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=8   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9087499999999998\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=8   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9392499999999998\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=9   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8111111111111111\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=9   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8566666666666667\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=9   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8988888888888888\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=9   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "10-fold cross val mean accuracy: 0.9055555555555556\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=9   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9355555555555556\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=10   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8019999999999999\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=10   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.867\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=10   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8875\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=10   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9133333333333333\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=10   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9266\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=11   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7490909090909091\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=11   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8263636363636364\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=11   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8672727272727272\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=11   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8796969696969696\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=11   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9100000000000001\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=12   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7483333333333333\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=12   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7883333333333333\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=12   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8412499999999999\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=12   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8788888888888888\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=12   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9018333333333335\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=13   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6328571428571428\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=13   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7107142857142857\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=13   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7928571428571429\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=13   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8088095238095239\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=13   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8377142857142857\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=14   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6893333333333334\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=14   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.716\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=14   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7743333333333332\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=14   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8046666666666666\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=14   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8326666666666667\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=15   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6975\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=15   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7387500000000001\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=15   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.78375\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=15   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8120833333333334\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=15   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.843375\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=16   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "10-fold cross val mean accuracy: 0.648235294117647\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=16   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7164705882352941\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=16   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7538235294117647\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=16   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7829411764705883\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=16   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8137647058823528\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=17   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6389473684210526\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=17   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.701578947368421\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=17   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7613157894736842\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=17   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7926315789473685\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=17   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8244210526315789\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=18   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.63\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=18   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7144999999999999\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=18   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7735000000000001\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=18   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7976666666666665\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=18   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8239999999999998\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=19   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6257142857142858\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=19   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6938095238095239\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=19   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7454761904761905\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=19   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7663492063492063\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=19   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7958095238095239\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=20   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6136363636363636\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=20   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6504545454545454\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=20   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7297727272727272\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=20   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7551515151515151\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=20   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7917272727272727\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=21   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6191304347826087\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=21   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6908695652173913\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=21   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7436956521739131\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=21   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7663768115942029\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=21   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7904347826086957\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=22   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6041666666666666\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=22   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6566666666666666\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=22   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "10-fold cross val mean accuracy: 0.7097916666666666\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=22   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7363888888888889\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=22   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7629166666666667\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=23   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5568\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=23   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.648\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=23   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7025999999999999\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=23   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7205333333333334\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=23   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.75512\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=24   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5507692307692308\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=24   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6361538461538461\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=24   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6928846153846153\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=24   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7220512820512821\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=24   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7533076923076922\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=25   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5592592592592591\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=25   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6192592592592593\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=25   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6657407407407407\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=25   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7017283950617285\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=25   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.728962962962963\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=26   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5707142857142856\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=26   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6174999999999999\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=26   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6817857142857143\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=26   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7102380952380952\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=26   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7371428571428572\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=27   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5475862068965517\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=27   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.603448275862069\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=27   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6663793103448277\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=27   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.689080459770115\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=27   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7176551724137931\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=28   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5513333333333332\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=28   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6116666666666666\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=28   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6551666666666666\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=28   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6823333333333333\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=28   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "10-fold cross val mean accuracy: 0.7139333333333332\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=29   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5329032258064517\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=29   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5825806451612903\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=29   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6348387096774194\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=29   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6666666666666667\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=29   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6950322580645161\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=30   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.525625\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=30   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.578125\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=30   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.62875\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=30   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6492708333333334\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=30   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6895625\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=31   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5363636363636364\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=31   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5493939393939394\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=31   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6101515151515151\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=31   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6401010101010101\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=31   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6730303030303031\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=32   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.49411764705882355\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=32   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5511764705882353\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=32   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5985294117647058\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=32   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6228431372549019\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=32   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6585882352941177\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=33   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.46742857142857136\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=33   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5362857142857143\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=33   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5734285714285715\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=33   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6074285714285714\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=33   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6382285714285716\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=34   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5055555555555555\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=34   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5419444444444445\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=34   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.59125\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=34   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6208333333333333\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=34   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6509444444444445\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=35   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.508108108108108\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=35   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "10-fold cross val mean accuracy: 0.5275675675675675\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=35   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5936486486486487\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=35   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.606036036036036\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=35   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6405405405405405\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=36   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.49210526315789477\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=36   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5207894736842105\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=36   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5813157894736841\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=36   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.599298245614035\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=36   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6346315789473685\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=37   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.47282051282051285\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=37   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5284615384615383\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=37   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5833333333333333\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=37   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6072649572649572\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=37   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6362564102564102\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=38   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.46950000000000003\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=38   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5295\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=38   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.581\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=38   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6090833333333334\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=38   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.63715\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=39   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.48146341463414644\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=39   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5326829268292684\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=39   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.578170731707317\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=39   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6040650406504066\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=39   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6360487804878049\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=40   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.4671428571428572\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=40   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5142857142857142\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=40   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5532142857142858\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=40   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5935714285714285\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=40   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6211904761904762\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=41   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.4413953488372093\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=41   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5004651162790699\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=41   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5582558139534883\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=41   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "10-fold cross val mean accuracy: 0.5800775193798451\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=41   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6104651162790697\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=42   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.46045454545454545\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=42   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.4838636363636364\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=42   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5442045454545456\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=42   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5643181818181817\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=42   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6066363636363635\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=43   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.42666666666666664\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=43   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.4775555555555556\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=43   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5288888888888889\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=43   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5580740740740741\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=43   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5934222222222221\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=44   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.4217391304347826\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=44   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.4906521739130435\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=44   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5154347826086958\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=44   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5484057971014493\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=44   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5837826086956521\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=45   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.40510638297872337\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=45   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.47468085106382973\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=45   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5241489361702129\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=45   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5390070921985816\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=45   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5732765957446808\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=46   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.4133333333333334\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=46   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.456875\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=46   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5023958333333334\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=46   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5285416666666667\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=46   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5635000000000001\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=47   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.40122448979591835\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=47   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.4569387755102041\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=47   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.49714285714285705\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=47   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5272789115646259\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=47   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5555102040816327\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=48   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "10-fold cross val mean accuracy: 0.3976\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=48   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.45\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=48   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5009\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=48   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5229999999999999\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=48   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.55096\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=49   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.4003921568627451\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=49   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.4431372549019607\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=49   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.4835294117647059\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=49   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5159477124183006\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "3-gram    authors=49   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5496078431372549\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=2   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9199999999999999\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=2   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9949999999999999\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=2   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9925\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=2   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 1.0\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=2   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 1.0\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=3   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8266666666666668\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=3   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8400000000000002\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=3   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9366666666666668\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=3   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9544444444444444\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=3   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9553333333333335\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=4   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.825\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=4   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8800000000000001\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=4   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9237499999999998\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=4   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9466666666666667\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=4   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9560000000000001\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=5   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8560000000000001\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=5   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8939999999999999\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=5   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.929\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=5   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.954\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=5   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9692000000000001\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=6   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8666666666666668\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=6   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9116666666666667\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=6   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "10-fold cross val mean accuracy: 0.9366666666666668\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=6   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9527777777777777\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=6   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9566666666666667\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=7   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=7   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8342857142857142\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=7   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8699999999999999\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=7   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8785714285714287\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=7   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.901142857142857\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=8   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.73\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=8   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7474999999999999\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=8   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8162499999999999\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=8   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8504166666666666\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=8   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.87575\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=9   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.74\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=9   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7888888888888889\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=9   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8388888888888888\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=9   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8555555555555554\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=9   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8862222222222222\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=10   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.73\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=10   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.786\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=10   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8370000000000001\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=10   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8516666666666668\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=10   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8688\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=11   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6963636363636364\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=11   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7709090909090909\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=11   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8018181818181818\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=11   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8266666666666668\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=11   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8619999999999999\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=12   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6666666666666667\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=12   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7375\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=12   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7945833333333334\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=12   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8122222222222222\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=12   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "10-fold cross val mean accuracy: 0.8378333333333334\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=13   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.57\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=13   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6821428571428572\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=13   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7221428571428572\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=13   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7442857142857143\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=13   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8008571428571427\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=14   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.624\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=14   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6586666666666666\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=14   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7306666666666667\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=14   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7571111111111111\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=14   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7886666666666666\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=15   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.62375\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=15   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.653125\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=15   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.729375\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=15   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.765\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=15   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.811125\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=16   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5635294117647058\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=16   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6758823529411766\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=16   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7023529411764706\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=16   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7354901960784315\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=16   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7770588235294117\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=17   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5442105263157896\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=17   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6573684210526316\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=17   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7160526315789474\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=17   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7496491228070175\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=17   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7868421052631579\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=18   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5879999999999999\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=18   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6535\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=18   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.724\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=18   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7653333333333333\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=18   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7993\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=19   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5599999999999999\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=19   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "10-fold cross val mean accuracy: 0.6423809523809524\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=19   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7038095238095238\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=19   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7358730158730159\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=19   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7735238095238095\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=20   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.55\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=20   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6245454545454546\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=20   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6877272727272727\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=20   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.718939393939394\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=20   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.767\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=21   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5852173913043479\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=21   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6452173913043477\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=21   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7089130434782609\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=21   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7273913043478262\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=21   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7669565217391304\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=22   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5391666666666667\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=22   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6270833333333333\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=22   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6770833333333333\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=22   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7086111111111111\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=22   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7404166666666667\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=23   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5344\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=23   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6103999999999999\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=23   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6652\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=23   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6846666666666668\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=23   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.73296\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=24   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5215384615384615\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=24   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5965384615384615\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=24   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6546153846153846\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=24   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6815384615384616\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=24   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7235384615384615\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=25   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5118518518518518\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=25   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5674074074074074\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=25   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.64\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=25   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "10-fold cross val mean accuracy: 0.662962962962963\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=25   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6973333333333334\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=26   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5085714285714286\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=26   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5900000000000001\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=26   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6385714285714286\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=26   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6832142857142858\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=26   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7092142857142857\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=27   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5075862068965517\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=27   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5720689655172413\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=27   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.627758620689655\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=27   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6516091954022989\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=27   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6847586206896552\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=28   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5273333333333332\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=28   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5646666666666668\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=28   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6319999999999999\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=28   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.666\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=28   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6958666666666666\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=29   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5096774193548388\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=29   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5661290322580645\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=29   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6196774193548388\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=29   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6411827956989247\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=29   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6733548387096775\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=30   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.4925\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=30   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5415625000000001\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=30   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.605\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=30   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6279166666666667\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=30   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.667375\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=31   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.49151515151515157\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=31   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5312121212121212\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=31   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5954545454545455\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=31   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6157575757575758\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=31   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6627272727272727\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=32   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "10-fold cross val mean accuracy: 0.46764705882352936\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=32   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5123529411764706\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=32   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.566764705882353\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=32   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6076470588235295\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=32   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.645\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=33   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.4377142857142856\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=33   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5102857142857143\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=33   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5599999999999999\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=33   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5892380952380952\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=33   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6238285714285714\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=34   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.4638888888888889\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=34   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.515\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=34   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5751388888888889\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=34   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6042592592592593\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=34   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.637611111111111\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=35   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.45027027027027033\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=35   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.4897297297297297\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=35   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5682432432432433\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=35   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5873873873873874\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=35   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6290270270270271\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=36   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.43736842105263163\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=36   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.4989473684210527\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=36   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5464473684210527\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=36   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5805263157894738\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=36   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.615578947368421\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=37   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.4533333333333333\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=37   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.4958974358974359\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=37   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5503846153846154\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=37   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5723931623931623\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=37   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6172307692307692\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=38   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.43950000000000006\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=38   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.49424999999999997\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=38   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "10-fold cross val mean accuracy: 0.5479999999999999\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=38   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5815833333333332\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=38   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6247499999999999\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=39   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.4414634146341463\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=39   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5065853658536585\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=39   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.549390243902439\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=39   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5765040650406503\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=39   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.618390243902439\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=40   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.4314285714285714\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=40   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.4895238095238096\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=40   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5380952380952382\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=40   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5760317460317459\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=40   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.606857142857143\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=41   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.40790697674418597\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=41   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.48325581395348827\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=41   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5308139534883721\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=41   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5514728682170543\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=41   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5953023255813953\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=42   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.4040909090909091\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=42   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.4611363636363636\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=42   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5262499999999999\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=42   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5425000000000001\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=42   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5889545454545455\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=43   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.4133333333333333\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=43   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.4524444444444445\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=43   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5034444444444444\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=43   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5410370370370371\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=43   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5784\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=44   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.39304347826086955\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=44   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.4443478260869565\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=44   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.4985869565217391\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=44   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5250724637681159\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=44   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "10-fold cross val mean accuracy: 0.5713043478260871\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=45   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.3812765957446808\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=45   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.4376595744680851\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=45   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.49234042553191487\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=45   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5188652482269503\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=45   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5602553191489362\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=46   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.37916666666666665\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=46   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.428125\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=46   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.4772916666666666\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=46   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5131944444444444\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=46   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5515416666666666\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=47   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.3657142857142857\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=47   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.4332653061224489\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=47   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.4720408163265306\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=47   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5075510204081632\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=47   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5406530612244899\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=48   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.3576\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=48   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.406\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=48   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.46080000000000004\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=48   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.49253333333333327\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=48   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.53532\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=49   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.3780392156862745\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=49   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.41862745098039217\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=49   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.46382352941176475\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=49   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.4965359477124183\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "4-gram    authors=49   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5354901960784313\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=2   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.89\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=2   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.945\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=2   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9925\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=2   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9983333333333334\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=2   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 1.0\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=3   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6533333333333333\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=3   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "10-fold cross val mean accuracy: 0.8\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=3   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.875\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=3   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9044444444444444\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=3   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9246666666666666\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=4   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.76\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=4   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.805\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=4   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9037499999999999\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=4   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9183333333333333\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=4   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9460000000000001\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=5   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.768\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=5   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8720000000000001\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=5   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=5   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9199999999999999\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=5   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9452\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=6   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7766666666666666\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=6   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8783333333333333\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=6   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.905\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=6   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9366666666666668\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=6   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.9443333333333334\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=7   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.742857142857143\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=7   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7985714285714286\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=7   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8471428571428572\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=7   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8676190476190477\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=7   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.876\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=8   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6725\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=8   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7224999999999999\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=8   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7956249999999999\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=8   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8229166666666667\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=8   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8502500000000002\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=9   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6777777777777778\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=9   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7755555555555556\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=9   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8033333333333333\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=9   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "10-fold cross val mean accuracy: 0.8444444444444444\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=9   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8715555555555555\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=10   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.704\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=10   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.755\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=10   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7925\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=10   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8230000000000001\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=10   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8588000000000001\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=11   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.650909090909091\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=11   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7527272727272728\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=11   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.769090909090909\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=11   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8012121212121214\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=11   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8394545454545455\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=12   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6566666666666666\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=12   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.705\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=12   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7454166666666666\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=12   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7858333333333334\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=12   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.8223333333333332\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=13   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5428571428571428\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=13   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6221428571428571\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=13   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6896428571428571\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=13   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7511904761904762\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=13   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7821428571428571\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=14   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5519999999999999\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=14   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6360000000000001\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=14   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.69\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=14   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7384444444444445\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=14   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7854666666666666\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=15   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.58\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=15   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6500000000000001\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=15   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6928124999999999\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=15   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7322916666666667\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=15   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.787625\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=16   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "10-fold cross val mean accuracy: 0.5294117647058825\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=16   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6182352941176471\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=16   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6932352941176471\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=16   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.717843137254902\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=16   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7536470588235294\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=17   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.551578947368421\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=17   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6205263157894737\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=17   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6997368421052631\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=17   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7363157894736843\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=17   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7627368421052632\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=18   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.549\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=18   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6415\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=18   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7140000000000001\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=18   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7375\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=18   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7734000000000001\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=19   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5447619047619048\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=19   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6171428571428571\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=19   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6747619047619049\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=19   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7109523809523809\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=19   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.754095238095238\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=20   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5372727272727272\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=20   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6018181818181818\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=20   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6695454545454546\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=20   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.701060606060606\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=20   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.741090909090909\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=21   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5313043478260869\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=21   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6169565217391305\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=21   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6854347826086956\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=21   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7133333333333333\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=21   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7466086956521739\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=22   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5066666666666666\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=22   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5983333333333333\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=22   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "10-fold cross val mean accuracy: 0.66125\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=22   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6833333333333333\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=22   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7255\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=23   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5087999999999999\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=23   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5784\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=23   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6358\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=23   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6731999999999999\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=23   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.7096799999999999\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=24   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.4707692307692308\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=24   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.563076923076923\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=24   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.625\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=24   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6705128205128206\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=24   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.700923076923077\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=25   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.4888888888888888\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=25   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5611111111111111\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=25   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6057407407407407\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=25   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.649753086419753\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=25   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6848148148148148\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=26   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5035714285714286\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=26   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5589285714285713\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=26   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6171428571428572\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=26   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6508333333333334\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=26   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6875\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=27   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.46413793103448275\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=27   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5379310344827586\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=27   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5991379310344828\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=27   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6364367816091954\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=27   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6797931034482759\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=28   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.484\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=28   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5576666666666668\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=28   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6048333333333333\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=28   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6421111111111111\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=28   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "10-fold cross val mean accuracy: 0.6828666666666666\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=29   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.4387096774193549\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=29   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5377419354838711\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=29   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.591774193548387\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=29   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6260215053763442\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=29   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6629677419354839\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=30   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.45187499999999997\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=30   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5071875\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=30   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5728125\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=30   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6135416666666667\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=30   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6566250000000001\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=31   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.43575757575757573\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=31   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5027272727272727\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=31   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5643939393939393\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=31   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6097979797979798\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=31   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6397575757575757\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=32   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.4435294117647059\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=32   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.4911764705882352\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=32   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5504411764705883\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=32   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5869607843137254\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=32   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6311764705882353\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=33   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.4177142857142857\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=33   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.4871428571428572\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=33   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5378571428571429\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=33   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5720952380952381\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=33   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.6190285714285715\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=34   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.40888888888888886\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=34   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.4658333333333333\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=34   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5244444444444445\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=34   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5529629629629629\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=34   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5963888888888889\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=35   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.4102702702702703\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=35   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "10-fold cross val mean accuracy: 0.4508108108108108\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=35   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.511891891891892\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=35   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5447747747747748\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=35   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5842162162162163\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=36   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.3831578947368421\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=36   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.4378947368421053\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=36   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.510921052631579\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=36   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.536578947368421\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=36   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5821578947368422\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=37   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.3923076923076923\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=37   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.44871794871794873\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=37   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.49884615384615383\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=37   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5356410256410257\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=37   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5760512820512821\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=38   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.36449999999999994\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=38   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.45725000000000005\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=38   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.509875\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=38   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5395833333333334\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=38   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.57785\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=39   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.3697560975609756\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=39   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.44536585365853665\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=39   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5039024390243902\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=39   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.536910569105691\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=39   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5798048780487804\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=40   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.36619047619047623\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=40   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.44000000000000006\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=40   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.49404761904761896\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=40   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5227777777777777\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=40   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5656666666666667\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=41   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.3572093023255814\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=41   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.41976744186046516\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=41   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.4876744186046511\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=41   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "10-fold cross val mean accuracy: 0.5189147286821705\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=41   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5586046511627907\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=42   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.3568181818181818\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=42   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.41227272727272724\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=42   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.4790909090909091\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=42   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.500530303030303\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=42   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5483636363636364\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=43   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.3528888888888889\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=43   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.41000000000000003\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=43   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.45855555555555555\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=43   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.49970370370370365\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=43   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5350666666666666\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=44   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.35391304347826086\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=44   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.4078260869565217\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=44   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.4615217391304348\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=44   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.48347826086956525\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=44   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5388695652173914\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=45   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.34170212765957453\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=45   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.3827659574468085\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=45   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.45329787234042557\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=45   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.48113475177304965\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=45   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5221702127659575\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=46   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.32416666666666666\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=46   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.380625\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=46   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.44208333333333333\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=46   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.4686111111111111\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=46   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.5195833333333333\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=47   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.33755102040816326\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=47   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.3842857142857143\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=47   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.44112244897959185\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=47   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.4689115646258504\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=47   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.515469387755102\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=48   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "10-fold cross val mean accuracy: 0.33879999999999993\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=48   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.3618\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=48   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.4321\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=48   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.4590000000000001\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=48   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.49779999999999996\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=49   samples=50\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.327843137254902\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=49   samples=100\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.37666666666666665\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=49   samples=200\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.4235294117647058\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=49   samples=300\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.4547058823529412\n",
      "\n",
      "----------------------------------\n",
      "Feature extraction algorithm: FE_POS_ngram\n",
      "5-gram    authors=49   samples=500\n",
      "vectorizer \t:\t meta_FE\n",
      "selector \t:\t SelectKBest\n",
      "selecting K \t:\t all\n",
      "classifier \t:\t MultinomialNB\n",
      "10-fold cross val mean accuracy: 0.49905882352941183\n"
     ]
    }
   ],
   "source": [
    "report2_twitter = experimento2(twitter, twitter_POS, K='all', n_authors=range(2,50), n_samples=[50, 100, 200, 300, 500])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 228,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>accuracies</th>\n",
       "      <th>n_authors</th>\n",
       "      <th>n_samples</th>\n",
       "      <th>FE_algorithm</th>\n",
       "      <th>n_gram</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0.990000</td>\n",
       "      <td>2</td>\n",
       "      <td>50</td>\n",
       "      <td>Word n-gram</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1.000000</td>\n",
       "      <td>2</td>\n",
       "      <td>100</td>\n",
       "      <td>Word n-gram</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1.000000</td>\n",
       "      <td>2</td>\n",
       "      <td>200</td>\n",
       "      <td>Word n-gram</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1.000000</td>\n",
       "      <td>2</td>\n",
       "      <td>300</td>\n",
       "      <td>Word n-gram</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1.000000</td>\n",
       "      <td>2</td>\n",
       "      <td>500</td>\n",
       "      <td>Word n-gram</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3595</th>\n",
       "      <td>0.327843</td>\n",
       "      <td>49</td>\n",
       "      <td>50</td>\n",
       "      <td>POS n-gram</td>\n",
       "      <td>5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3596</th>\n",
       "      <td>0.376667</td>\n",
       "      <td>49</td>\n",
       "      <td>100</td>\n",
       "      <td>POS n-gram</td>\n",
       "      <td>5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3597</th>\n",
       "      <td>0.423529</td>\n",
       "      <td>49</td>\n",
       "      <td>200</td>\n",
       "      <td>POS n-gram</td>\n",
       "      <td>5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3598</th>\n",
       "      <td>0.454706</td>\n",
       "      <td>49</td>\n",
       "      <td>300</td>\n",
       "      <td>POS n-gram</td>\n",
       "      <td>5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3599</th>\n",
       "      <td>0.499059</td>\n",
       "      <td>49</td>\n",
       "      <td>500</td>\n",
       "      <td>POS n-gram</td>\n",
       "      <td>5</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>3600 rows × 5 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "      accuracies  n_authors  n_samples FE_algorithm  n_gram\n",
       "0       0.990000          2         50  Word n-gram       1\n",
       "1       1.000000          2        100  Word n-gram       1\n",
       "2       1.000000          2        200  Word n-gram       1\n",
       "3       1.000000          2        300  Word n-gram       1\n",
       "4       1.000000          2        500  Word n-gram       1\n",
       "...          ...        ...        ...          ...     ...\n",
       "3595    0.327843         49         50   POS n-gram       5\n",
       "3596    0.376667         49        100   POS n-gram       5\n",
       "3597    0.423529         49        200   POS n-gram       5\n",
       "3598    0.454706         49        300   POS n-gram       5\n",
       "3599    0.499059         49        500   POS n-gram       5\n",
       "\n",
       "[3600 rows x 5 columns]"
      ]
     },
     "execution_count": 228,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "e2_report_twitter = pd.DataFrame(report2_twitter)\n",
    "e2_report_twitter"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 241,
   "metadata": {},
   "outputs": [],
   "source": [
    "e2_report_twitter[\"FE_algorithm ngram\"] = e2_report_twitter.FE_algorithm + ' ' + e2_report_twitter.n_gram.astype(str)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 259,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0.5, 0.98, 'Como ngrama influencia em cada tecnica de EC na quantidade de autores')"
      ]
     },
     "execution_count": 259,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1440x720 with 3 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig, ax = plt.subplots(1,3, figsize=(20,10), sharex=True, sharey=True)\n",
    "d1 = sns.lineplot(data=e2_report_twitter[e2_report_twitter.FE_algorithm == \"Word n-gram\"], x=\"n_authors\", y=\"accuracies\", hue=\"FE_algorithm ngram\", ci=None, ax=ax[0])\n",
    "d2 = sns.lineplot(data=e2_report_twitter[e2_report_twitter.FE_algorithm == \"Char n-gram\"], x=\"n_authors\", y=\"accuracies\", hue=\"FE_algorithm ngram\", ci=None, ax=ax[1])\n",
    "d3 = sns.lineplot(data=e2_report_twitter[e2_report_twitter.FE_algorithm == \"POS n-gram\"], x=\"n_authors\", y=\"accuracies\", hue=\"FE_algorithm ngram\", ci=None, ax=ax[2])\n",
    "d1.set_title(\"ngrama por palavra\"); d2.set_title(\"ngrama por caractere\"); d3.set_title(\"ngrama por classificação gramatical\")\n",
    "d1.set_xlabel(\"\"); d2.set_xlabel(\"\"); d3.set_xlabel(\"\")\n",
    "fig.suptitle(\"Como ngrama influencia em cada tecnica de EC na quantidade de autores\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 282,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0.5, 1.0, 'Variando a quantidade de autores')"
      ]
     },
     "execution_count": 282,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1080x720 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "agg2= e2_report_twitter.groupby([\"FE_algorithm\", \"n_authors\"], as_index=False).mean()\n",
    "agg23 = e2_report_twitter.groupby([\"FE_algorithm\", \"n_samples\"], as_index=False).mean()\n",
    "fig, ax = plt.subplots(1,2, figsize=(15,10))\n",
    "\n",
    "sns.lineplot(data=agg2, x=\"n_authors\", y=\"accuracies\", hue=\"FE_algorithm\", ax=ax[0])\n",
    "sns.lineplot(data=agg23, x=\"n_samples\", y=\"accuracies\", hue=\"FE_algorithm\", ax=ax[1])\n",
    "\n",
    "\n",
    "plt.title(\"Variando a quantidade de autores\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 266,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1080x720 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig, ax = plt.subplots(1,2, figsize=(15,10), sharey=True, sharex=True)\n",
    "d1 = sns.lineplot(data=e2_report_twitter, x=\"n_gram\", y=\"accuracies\", hue=\"FE_algorithm\", ci=None, ax=ax[0])\n",
    "d1 = sns.lineplot(data=report2_enron_df, x=\"n_gram\", y=\"accuracies\", hue=\"FE_algorithm\", ci=None, ax=ax[1])\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 271,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>accuracies</th>\n",
       "      <th>n_authors</th>\n",
       "      <th>n_samples</th>\n",
       "      <th>FE_algorithm</th>\n",
       "      <th>n_gram</th>\n",
       "      <th>FE_algorithm n-gram</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>60</th>\n",
       "      <td>0.675000</td>\n",
       "      <td>2</td>\n",
       "      <td>120</td>\n",
       "      <td>Char n-gram</td>\n",
       "      <td>1</td>\n",
       "      <td>Char n-gram-1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>61</th>\n",
       "      <td>0.625000</td>\n",
       "      <td>2</td>\n",
       "      <td>80</td>\n",
       "      <td>Char n-gram</td>\n",
       "      <td>1</td>\n",
       "      <td>Char n-gram-1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>62</th>\n",
       "      <td>0.650000</td>\n",
       "      <td>2</td>\n",
       "      <td>40</td>\n",
       "      <td>Char n-gram</td>\n",
       "      <td>1</td>\n",
       "      <td>Char n-gram-1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>63</th>\n",
       "      <td>0.341667</td>\n",
       "      <td>5</td>\n",
       "      <td>120</td>\n",
       "      <td>Char n-gram</td>\n",
       "      <td>1</td>\n",
       "      <td>Char n-gram-1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>64</th>\n",
       "      <td>0.410000</td>\n",
       "      <td>5</td>\n",
       "      <td>80</td>\n",
       "      <td>Char n-gram</td>\n",
       "      <td>1</td>\n",
       "      <td>Char n-gram-1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>65</th>\n",
       "      <td>0.370000</td>\n",
       "      <td>5</td>\n",
       "      <td>40</td>\n",
       "      <td>Char n-gram</td>\n",
       "      <td>1</td>\n",
       "      <td>Char n-gram-1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>66</th>\n",
       "      <td>0.261667</td>\n",
       "      <td>10</td>\n",
       "      <td>120</td>\n",
       "      <td>Char n-gram</td>\n",
       "      <td>1</td>\n",
       "      <td>Char n-gram-1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>67</th>\n",
       "      <td>0.200000</td>\n",
       "      <td>10</td>\n",
       "      <td>80</td>\n",
       "      <td>Char n-gram</td>\n",
       "      <td>1</td>\n",
       "      <td>Char n-gram-1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>68</th>\n",
       "      <td>0.270000</td>\n",
       "      <td>10</td>\n",
       "      <td>40</td>\n",
       "      <td>Char n-gram</td>\n",
       "      <td>1</td>\n",
       "      <td>Char n-gram-1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>69</th>\n",
       "      <td>0.163750</td>\n",
       "      <td>20</td>\n",
       "      <td>120</td>\n",
       "      <td>Char n-gram</td>\n",
       "      <td>1</td>\n",
       "      <td>Char n-gram-1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>70</th>\n",
       "      <td>0.125625</td>\n",
       "      <td>20</td>\n",
       "      <td>80</td>\n",
       "      <td>Char n-gram</td>\n",
       "      <td>1</td>\n",
       "      <td>Char n-gram-1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>71</th>\n",
       "      <td>0.150000</td>\n",
       "      <td>20</td>\n",
       "      <td>40</td>\n",
       "      <td>Char n-gram</td>\n",
       "      <td>1</td>\n",
       "      <td>Char n-gram-1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>72</th>\n",
       "      <td>0.662500</td>\n",
       "      <td>2</td>\n",
       "      <td>120</td>\n",
       "      <td>Char n-gram</td>\n",
       "      <td>2</td>\n",
       "      <td>Char n-gram-2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>73</th>\n",
       "      <td>0.731250</td>\n",
       "      <td>2</td>\n",
       "      <td>80</td>\n",
       "      <td>Char n-gram</td>\n",
       "      <td>2</td>\n",
       "      <td>Char n-gram-2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>74</th>\n",
       "      <td>0.787500</td>\n",
       "      <td>2</td>\n",
       "      <td>40</td>\n",
       "      <td>Char n-gram</td>\n",
       "      <td>2</td>\n",
       "      <td>Char n-gram-2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75</th>\n",
       "      <td>0.405000</td>\n",
       "      <td>5</td>\n",
       "      <td>120</td>\n",
       "      <td>Char n-gram</td>\n",
       "      <td>2</td>\n",
       "      <td>Char n-gram-2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>76</th>\n",
       "      <td>0.420000</td>\n",
       "      <td>5</td>\n",
       "      <td>80</td>\n",
       "      <td>Char n-gram</td>\n",
       "      <td>2</td>\n",
       "      <td>Char n-gram-2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>77</th>\n",
       "      <td>0.305000</td>\n",
       "      <td>5</td>\n",
       "      <td>40</td>\n",
       "      <td>Char n-gram</td>\n",
       "      <td>2</td>\n",
       "      <td>Char n-gram-2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>78</th>\n",
       "      <td>0.321667</td>\n",
       "      <td>10</td>\n",
       "      <td>120</td>\n",
       "      <td>Char n-gram</td>\n",
       "      <td>2</td>\n",
       "      <td>Char n-gram-2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>79</th>\n",
       "      <td>0.276250</td>\n",
       "      <td>10</td>\n",
       "      <td>80</td>\n",
       "      <td>Char n-gram</td>\n",
       "      <td>2</td>\n",
       "      <td>Char n-gram-2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>80</th>\n",
       "      <td>0.257500</td>\n",
       "      <td>10</td>\n",
       "      <td>40</td>\n",
       "      <td>Char n-gram</td>\n",
       "      <td>2</td>\n",
       "      <td>Char n-gram-2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>81</th>\n",
       "      <td>0.197500</td>\n",
       "      <td>20</td>\n",
       "      <td>120</td>\n",
       "      <td>Char n-gram</td>\n",
       "      <td>2</td>\n",
       "      <td>Char n-gram-2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>82</th>\n",
       "      <td>0.186250</td>\n",
       "      <td>20</td>\n",
       "      <td>80</td>\n",
       "      <td>Char n-gram</td>\n",
       "      <td>2</td>\n",
       "      <td>Char n-gram-2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>83</th>\n",
       "      <td>0.156250</td>\n",
       "      <td>20</td>\n",
       "      <td>40</td>\n",
       "      <td>Char n-gram</td>\n",
       "      <td>2</td>\n",
       "      <td>Char n-gram-2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>84</th>\n",
       "      <td>0.700000</td>\n",
       "      <td>2</td>\n",
       "      <td>120</td>\n",
       "      <td>Char n-gram</td>\n",
       "      <td>3</td>\n",
       "      <td>Char n-gram-3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>85</th>\n",
       "      <td>0.693750</td>\n",
       "      <td>2</td>\n",
       "      <td>80</td>\n",
       "      <td>Char n-gram</td>\n",
       "      <td>3</td>\n",
       "      <td>Char n-gram-3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>86</th>\n",
       "      <td>0.737500</td>\n",
       "      <td>2</td>\n",
       "      <td>40</td>\n",
       "      <td>Char n-gram</td>\n",
       "      <td>3</td>\n",
       "      <td>Char n-gram-3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>87</th>\n",
       "      <td>0.426667</td>\n",
       "      <td>5</td>\n",
       "      <td>120</td>\n",
       "      <td>Char n-gram</td>\n",
       "      <td>3</td>\n",
       "      <td>Char n-gram-3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>88</th>\n",
       "      <td>0.402500</td>\n",
       "      <td>5</td>\n",
       "      <td>80</td>\n",
       "      <td>Char n-gram</td>\n",
       "      <td>3</td>\n",
       "      <td>Char n-gram-3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>89</th>\n",
       "      <td>0.420000</td>\n",
       "      <td>5</td>\n",
       "      <td>40</td>\n",
       "      <td>Char n-gram</td>\n",
       "      <td>3</td>\n",
       "      <td>Char n-gram-3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>90</th>\n",
       "      <td>0.324167</td>\n",
       "      <td>10</td>\n",
       "      <td>120</td>\n",
       "      <td>Char n-gram</td>\n",
       "      <td>3</td>\n",
       "      <td>Char n-gram-3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>91</th>\n",
       "      <td>0.301250</td>\n",
       "      <td>10</td>\n",
       "      <td>80</td>\n",
       "      <td>Char n-gram</td>\n",
       "      <td>3</td>\n",
       "      <td>Char n-gram-3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>92</th>\n",
       "      <td>0.312500</td>\n",
       "      <td>10</td>\n",
       "      <td>40</td>\n",
       "      <td>Char n-gram</td>\n",
       "      <td>3</td>\n",
       "      <td>Char n-gram-3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>93</th>\n",
       "      <td>0.239583</td>\n",
       "      <td>20</td>\n",
       "      <td>120</td>\n",
       "      <td>Char n-gram</td>\n",
       "      <td>3</td>\n",
       "      <td>Char n-gram-3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>94</th>\n",
       "      <td>0.216875</td>\n",
       "      <td>20</td>\n",
       "      <td>80</td>\n",
       "      <td>Char n-gram</td>\n",
       "      <td>3</td>\n",
       "      <td>Char n-gram-3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>95</th>\n",
       "      <td>0.192500</td>\n",
       "      <td>20</td>\n",
       "      <td>40</td>\n",
       "      <td>Char n-gram</td>\n",
       "      <td>3</td>\n",
       "      <td>Char n-gram-3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>96</th>\n",
       "      <td>0.733333</td>\n",
       "      <td>2</td>\n",
       "      <td>120</td>\n",
       "      <td>Char n-gram</td>\n",
       "      <td>4</td>\n",
       "      <td>Char n-gram-4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>97</th>\n",
       "      <td>0.687500</td>\n",
       "      <td>2</td>\n",
       "      <td>80</td>\n",
       "      <td>Char n-gram</td>\n",
       "      <td>4</td>\n",
       "      <td>Char n-gram-4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>98</th>\n",
       "      <td>0.825000</td>\n",
       "      <td>2</td>\n",
       "      <td>40</td>\n",
       "      <td>Char n-gram</td>\n",
       "      <td>4</td>\n",
       "      <td>Char n-gram-4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>99</th>\n",
       "      <td>0.438333</td>\n",
       "      <td>5</td>\n",
       "      <td>120</td>\n",
       "      <td>Char n-gram</td>\n",
       "      <td>4</td>\n",
       "      <td>Char n-gram-4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>100</th>\n",
       "      <td>0.427500</td>\n",
       "      <td>5</td>\n",
       "      <td>80</td>\n",
       "      <td>Char n-gram</td>\n",
       "      <td>4</td>\n",
       "      <td>Char n-gram-4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>101</th>\n",
       "      <td>0.365000</td>\n",
       "      <td>5</td>\n",
       "      <td>40</td>\n",
       "      <td>Char n-gram</td>\n",
       "      <td>4</td>\n",
       "      <td>Char n-gram-4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>102</th>\n",
       "      <td>0.345000</td>\n",
       "      <td>10</td>\n",
       "      <td>120</td>\n",
       "      <td>Char n-gram</td>\n",
       "      <td>4</td>\n",
       "      <td>Char n-gram-4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>103</th>\n",
       "      <td>0.347500</td>\n",
       "      <td>10</td>\n",
       "      <td>80</td>\n",
       "      <td>Char n-gram</td>\n",
       "      <td>4</td>\n",
       "      <td>Char n-gram-4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>104</th>\n",
       "      <td>0.260000</td>\n",
       "      <td>10</td>\n",
       "      <td>40</td>\n",
       "      <td>Char n-gram</td>\n",
       "      <td>4</td>\n",
       "      <td>Char n-gram-4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>105</th>\n",
       "      <td>0.240833</td>\n",
       "      <td>20</td>\n",
       "      <td>120</td>\n",
       "      <td>Char n-gram</td>\n",
       "      <td>4</td>\n",
       "      <td>Char n-gram-4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>106</th>\n",
       "      <td>0.236250</td>\n",
       "      <td>20</td>\n",
       "      <td>80</td>\n",
       "      <td>Char n-gram</td>\n",
       "      <td>4</td>\n",
       "      <td>Char n-gram-4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>107</th>\n",
       "      <td>0.181250</td>\n",
       "      <td>20</td>\n",
       "      <td>40</td>\n",
       "      <td>Char n-gram</td>\n",
       "      <td>4</td>\n",
       "      <td>Char n-gram-4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>108</th>\n",
       "      <td>0.762500</td>\n",
       "      <td>2</td>\n",
       "      <td>120</td>\n",
       "      <td>Char n-gram</td>\n",
       "      <td>5</td>\n",
       "      <td>Char n-gram-5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>109</th>\n",
       "      <td>0.662500</td>\n",
       "      <td>2</td>\n",
       "      <td>80</td>\n",
       "      <td>Char n-gram</td>\n",
       "      <td>5</td>\n",
       "      <td>Char n-gram-5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>110</th>\n",
       "      <td>0.712500</td>\n",
       "      <td>2</td>\n",
       "      <td>40</td>\n",
       "      <td>Char n-gram</td>\n",
       "      <td>5</td>\n",
       "      <td>Char n-gram-5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>111</th>\n",
       "      <td>0.438333</td>\n",
       "      <td>5</td>\n",
       "      <td>120</td>\n",
       "      <td>Char n-gram</td>\n",
       "      <td>5</td>\n",
       "      <td>Char n-gram-5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>112</th>\n",
       "      <td>0.447500</td>\n",
       "      <td>5</td>\n",
       "      <td>80</td>\n",
       "      <td>Char n-gram</td>\n",
       "      <td>5</td>\n",
       "      <td>Char n-gram-5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>113</th>\n",
       "      <td>0.380000</td>\n",
       "      <td>5</td>\n",
       "      <td>40</td>\n",
       "      <td>Char n-gram</td>\n",
       "      <td>5</td>\n",
       "      <td>Char n-gram-5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>114</th>\n",
       "      <td>0.344167</td>\n",
       "      <td>10</td>\n",
       "      <td>120</td>\n",
       "      <td>Char n-gram</td>\n",
       "      <td>5</td>\n",
       "      <td>Char n-gram-5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>115</th>\n",
       "      <td>0.295000</td>\n",
       "      <td>10</td>\n",
       "      <td>80</td>\n",
       "      <td>Char n-gram</td>\n",
       "      <td>5</td>\n",
       "      <td>Char n-gram-5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>116</th>\n",
       "      <td>0.285000</td>\n",
       "      <td>10</td>\n",
       "      <td>40</td>\n",
       "      <td>Char n-gram</td>\n",
       "      <td>5</td>\n",
       "      <td>Char n-gram-5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>117</th>\n",
       "      <td>0.240000</td>\n",
       "      <td>20</td>\n",
       "      <td>120</td>\n",
       "      <td>Char n-gram</td>\n",
       "      <td>5</td>\n",
       "      <td>Char n-gram-5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>118</th>\n",
       "      <td>0.246250</td>\n",
       "      <td>20</td>\n",
       "      <td>80</td>\n",
       "      <td>Char n-gram</td>\n",
       "      <td>5</td>\n",
       "      <td>Char n-gram-5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>119</th>\n",
       "      <td>0.180000</td>\n",
       "      <td>20</td>\n",
       "      <td>40</td>\n",
       "      <td>Char n-gram</td>\n",
       "      <td>5</td>\n",
       "      <td>Char n-gram-5</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "     accuracies  n_authors  n_samples FE_algorithm  n_gram FE_algorithm n-gram\n",
       "60     0.675000          2        120  Char n-gram       1       Char n-gram-1\n",
       "61     0.625000          2         80  Char n-gram       1       Char n-gram-1\n",
       "62     0.650000          2         40  Char n-gram       1       Char n-gram-1\n",
       "63     0.341667          5        120  Char n-gram       1       Char n-gram-1\n",
       "64     0.410000          5         80  Char n-gram       1       Char n-gram-1\n",
       "65     0.370000          5         40  Char n-gram       1       Char n-gram-1\n",
       "66     0.261667         10        120  Char n-gram       1       Char n-gram-1\n",
       "67     0.200000         10         80  Char n-gram       1       Char n-gram-1\n",
       "68     0.270000         10         40  Char n-gram       1       Char n-gram-1\n",
       "69     0.163750         20        120  Char n-gram       1       Char n-gram-1\n",
       "70     0.125625         20         80  Char n-gram       1       Char n-gram-1\n",
       "71     0.150000         20         40  Char n-gram       1       Char n-gram-1\n",
       "72     0.662500          2        120  Char n-gram       2       Char n-gram-2\n",
       "73     0.731250          2         80  Char n-gram       2       Char n-gram-2\n",
       "74     0.787500          2         40  Char n-gram       2       Char n-gram-2\n",
       "75     0.405000          5        120  Char n-gram       2       Char n-gram-2\n",
       "76     0.420000          5         80  Char n-gram       2       Char n-gram-2\n",
       "77     0.305000          5         40  Char n-gram       2       Char n-gram-2\n",
       "78     0.321667         10        120  Char n-gram       2       Char n-gram-2\n",
       "79     0.276250         10         80  Char n-gram       2       Char n-gram-2\n",
       "80     0.257500         10         40  Char n-gram       2       Char n-gram-2\n",
       "81     0.197500         20        120  Char n-gram       2       Char n-gram-2\n",
       "82     0.186250         20         80  Char n-gram       2       Char n-gram-2\n",
       "83     0.156250         20         40  Char n-gram       2       Char n-gram-2\n",
       "84     0.700000          2        120  Char n-gram       3       Char n-gram-3\n",
       "85     0.693750          2         80  Char n-gram       3       Char n-gram-3\n",
       "86     0.737500          2         40  Char n-gram       3       Char n-gram-3\n",
       "87     0.426667          5        120  Char n-gram       3       Char n-gram-3\n",
       "88     0.402500          5         80  Char n-gram       3       Char n-gram-3\n",
       "89     0.420000          5         40  Char n-gram       3       Char n-gram-3\n",
       "90     0.324167         10        120  Char n-gram       3       Char n-gram-3\n",
       "91     0.301250         10         80  Char n-gram       3       Char n-gram-3\n",
       "92     0.312500         10         40  Char n-gram       3       Char n-gram-3\n",
       "93     0.239583         20        120  Char n-gram       3       Char n-gram-3\n",
       "94     0.216875         20         80  Char n-gram       3       Char n-gram-3\n",
       "95     0.192500         20         40  Char n-gram       3       Char n-gram-3\n",
       "96     0.733333          2        120  Char n-gram       4       Char n-gram-4\n",
       "97     0.687500          2         80  Char n-gram       4       Char n-gram-4\n",
       "98     0.825000          2         40  Char n-gram       4       Char n-gram-4\n",
       "99     0.438333          5        120  Char n-gram       4       Char n-gram-4\n",
       "100    0.427500          5         80  Char n-gram       4       Char n-gram-4\n",
       "101    0.365000          5         40  Char n-gram       4       Char n-gram-4\n",
       "102    0.345000         10        120  Char n-gram       4       Char n-gram-4\n",
       "103    0.347500         10         80  Char n-gram       4       Char n-gram-4\n",
       "104    0.260000         10         40  Char n-gram       4       Char n-gram-4\n",
       "105    0.240833         20        120  Char n-gram       4       Char n-gram-4\n",
       "106    0.236250         20         80  Char n-gram       4       Char n-gram-4\n",
       "107    0.181250         20         40  Char n-gram       4       Char n-gram-4\n",
       "108    0.762500          2        120  Char n-gram       5       Char n-gram-5\n",
       "109    0.662500          2         80  Char n-gram       5       Char n-gram-5\n",
       "110    0.712500          2         40  Char n-gram       5       Char n-gram-5\n",
       "111    0.438333          5        120  Char n-gram       5       Char n-gram-5\n",
       "112    0.447500          5         80  Char n-gram       5       Char n-gram-5\n",
       "113    0.380000          5         40  Char n-gram       5       Char n-gram-5\n",
       "114    0.344167         10        120  Char n-gram       5       Char n-gram-5\n",
       "115    0.295000         10         80  Char n-gram       5       Char n-gram-5\n",
       "116    0.285000         10         40  Char n-gram       5       Char n-gram-5\n",
       "117    0.240000         20        120  Char n-gram       5       Char n-gram-5\n",
       "118    0.246250         20         80  Char n-gram       5       Char n-gram-5\n",
       "119    0.180000         20         40  Char n-gram       5       Char n-gram-5"
      ]
     },
     "execution_count": 271,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "report2_enron_df"
   ]
  }
 ],
 "metadata": {
  "@webio": {
   "lastCommId": null,
   "lastKernelId": null
  },
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.2"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
